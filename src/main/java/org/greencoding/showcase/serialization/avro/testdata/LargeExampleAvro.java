/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package org.greencoding.showcase.serialization.avro.testdata;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class LargeExampleAvro extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -1853175718672359256L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"LargeExampleAvro\",\"namespace\":\"org.greencoding.showcase.serialization.avro.testdata\",\"fields\":[{\"name\":\"avgPx\",\"type\":\"float\"},{\"name\":\"comission\",\"type\":\"float\"},{\"name\":\"commType\",\"type\":\"string\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"execId\",\"type\":\"string\"},{\"name\":\"execRefId\",\"type\":\"string\"},{\"name\":\"execTransactiontype\",\"type\":\"string\"},{\"name\":\"execType\",\"type\":\"string\"},{\"name\":\"idSource\",\"type\":\"string\"},{\"name\":\"lastCapacity\",\"type\":\"string\"},{\"name\":\"lastMkt\",\"type\":\"string\"},{\"name\":\"lastPx\",\"type\":\"float\"},{\"name\":\"lastShares\",\"type\":\"float\"},{\"name\":\"msgSeqNum\",\"type\":\"int\"},{\"name\":\"orderId\",\"type\":\"string\"},{\"name\":\"orderQuantity\",\"type\":\"float\"},{\"name\":\"orderStatus\",\"type\":\"string\"},{\"name\":\"origCiOrderId\",\"type\":\"string\"},{\"name\":\"posDupFlag\",\"type\":\"string\"},{\"name\":\"price\",\"type\":\"float\"},{\"name\":\"securityId\",\"type\":\"string\"},{\"name\":\"side\",\"type\":\"string\"},{\"name\":\"symbol\",\"type\":\"string\"},{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"transactId\",\"type\":\"long\"},{\"name\":\"parentOrderId\",\"type\":\"string\"},{\"name\":\"settlementType\",\"type\":\"string\"},{\"name\":\"futSettleprivate\",\"type\":\"string\"},{\"name\":\"symbolSfx\",\"type\":\"string\"},{\"name\":\"parentOrderQuantity\",\"type\":\"float\"},{\"name\":\"tradeCurrencyCountry\",\"type\":\"string\"},{\"name\":\"tradeprivate\",\"type\":\"string\"},{\"name\":\"execBroker\",\"type\":\"string\"},{\"name\":\"openClose\",\"type\":\"string\"},{\"name\":\"processCode\",\"type\":\"string\"},{\"name\":\"origSide\",\"type\":\"string\"},{\"name\":\"netPrice\",\"type\":\"float\"},{\"name\":\"clientId\",\"type\":\"string\"},{\"name\":\"reportToExchange\",\"type\":\"boolean\"},{\"name\":\"leavesQuantity\",\"type\":\"float\"},{\"name\":\"securityType\",\"type\":\"string\"},{\"name\":\"settleBroker\",\"type\":\"string\"},{\"name\":\"securityExchange\",\"type\":{\"type\":\"array\",\"items\":\"string\"}},{\"name\":\"maturityMonthYear\",\"type\":\"string\"},{\"name\":\"maturityDay\",\"type\":\"string\"},{\"name\":\"putOrCall\",\"type\":\"int\"},{\"name\":\"strikePrice\",\"type\":\"float\"},{\"name\":\"exerciseType\",\"type\":\"string\"},{\"name\":\"ocaInstrumentType\",\"type\":\"string\"},{\"name\":\"spread\",\"type\":\"float\"},{\"name\":\"contractMultiplier\",\"type\":\"float\"},{\"name\":\"underlyingSecurityExchange\",\"type\":\"string\"},{\"name\":\"underlyingSymbol\",\"type\":\"string\"},{\"name\":\"underlyingMaturityMonthYear\",\"type\":\"string\"},{\"name\":\"underlyingMaturityDay\",\"type\":\"string\"},{\"name\":\"underlyingContractMultiplier\",\"type\":\"float\"},{\"name\":\"trader\",\"type\":\"string\"},{\"name\":\"enteredBy\",\"type\":\"string\"},{\"name\":\"instrumentCountry\",\"type\":\"string\"},{\"name\":\"settleCurrency\",\"type\":\"string\"},{\"name\":\"instrumentCurrency\",\"type\":\"string\"},{\"name\":\"instrumentName\",\"type\":\"string\"},{\"name\":\"instrCurrencyFxRate\",\"type\":\"float\"},{\"name\":\"instrCurrencyFxRateCalc\",\"type\":\"string\"},{\"name\":\"strategy\",\"type\":\"string\"},{\"name\":\"nonDeliverableForward\",\"type\":\"string\"},{\"name\":\"mainPrice\",\"type\":\"float\"},{\"name\":\"interestRate\",\"type\":\"long\"},{\"name\":\"openPrivate\",\"type\":\"long\"},{\"name\":\"closePrivate\",\"type\":\"long\"},{\"name\":\"customRiskClass\",\"type\":\"string\"},{\"name\":\"customSubBook\",\"type\":\"string\"},{\"name\":\"customStrategy\",\"type\":\"string\"},{\"name\":\"customCountry\",\"type\":\"string\"},{\"name\":\"customCounterParty\",\"type\":\"string\"},{\"name\":\"customFrm\",\"type\":\"string\"},{\"name\":\"customSalesBroker\",\"type\":\"string\"},{\"name\":\"commFlag\",\"type\":\"string\"},{\"name\":\"initialMargin\",\"type\":\"string\"},{\"name\":\"collateralFlag\",\"type\":\"string\"},{\"name\":\"fundFamily\",\"type\":\"string\"},{\"name\":\"familyAllocInfo\",\"type\":\"string\"},{\"name\":\"custodianAccount\",\"type\":\"string\"},{\"name\":\"businessUnit\",\"type\":\"string\"},{\"name\":\"subBusinessUnit\",\"type\":\"string\"},{\"name\":\"fund\",\"type\":\"string\"},{\"name\":\"autoCreateFlag\",\"type\":\"int\"},{\"name\":\"positionBeforeTrade\",\"type\":\"float\"},{\"name\":\"originalFaceValue\",\"type\":\"float\"},{\"name\":\"loanAmount\",\"type\":\"float\"},{\"name\":\"accrualDaysPerMonth\",\"type\":\"string\"},{\"name\":\"accrualDaysPerYear\",\"type\":\"string\"},{\"name\":\"endOfMonth\",\"type\":\"string\"},{\"name\":\"fixingPrivate\",\"type\":\"string\"},{\"name\":\"currentMargin\",\"type\":\"string\"},{\"name\":\"tradeFlat\",\"type\":\"string\"},{\"name\":\"parentQuantity\",\"type\":\"float\"},{\"name\":\"underlyingQuantity\",\"type\":\"float\"},{\"name\":\"customCrossCurrency\",\"type\":\"string\"},{\"name\":\"customProductType\",\"type\":\"string\"},{\"name\":\"transactionType\",\"type\":\"string\"},{\"name\":\"newStrategy\",\"type\":\"string\"},{\"name\":\"newPrimeBroker\",\"type\":\"string\"},{\"name\":\"customFundQuantity1\",\"type\":\"float\"},{\"name\":\"customFundSide1\",\"type\":\"string\"},{\"name\":\"customFundQuantity2\",\"type\":\"float\"},{\"name\":\"customFundSide3\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<LargeExampleAvro> ENCODER =
      new BinaryMessageEncoder<LargeExampleAvro>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<LargeExampleAvro> DECODER =
      new BinaryMessageDecoder<LargeExampleAvro>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<LargeExampleAvro> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<LargeExampleAvro> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<LargeExampleAvro> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<LargeExampleAvro>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this LargeExampleAvro to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a LargeExampleAvro from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a LargeExampleAvro instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static LargeExampleAvro fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private float avgPx;
   private float comission;
   private java.lang.CharSequence commType;
   private java.lang.CharSequence currency;
   private java.lang.CharSequence execId;
   private java.lang.CharSequence execRefId;
   private java.lang.CharSequence execTransactiontype;
   private java.lang.CharSequence execType;
   private java.lang.CharSequence idSource;
   private java.lang.CharSequence lastCapacity;
   private java.lang.CharSequence lastMkt;
   private float lastPx;
   private float lastShares;
   private int msgSeqNum;
   private java.lang.CharSequence orderId;
   private float orderQuantity;
   private java.lang.CharSequence orderStatus;
   private java.lang.CharSequence origCiOrderId;
   private java.lang.CharSequence posDupFlag;
   private float price;
   private java.lang.CharSequence securityId;
   private java.lang.CharSequence side;
   private java.lang.CharSequence symbol;
   private java.lang.CharSequence text;
   private long transactId;
   private java.lang.CharSequence parentOrderId;
   private java.lang.CharSequence settlementType;
   private java.lang.CharSequence futSettleprivate;
   private java.lang.CharSequence symbolSfx;
   private float parentOrderQuantity;
   private java.lang.CharSequence tradeCurrencyCountry;
   private java.lang.CharSequence tradeprivate;
   private java.lang.CharSequence execBroker;
   private java.lang.CharSequence openClose;
   private java.lang.CharSequence processCode;
   private java.lang.CharSequence origSide;
   private float netPrice;
   private java.lang.CharSequence clientId;
   private boolean reportToExchange;
   private float leavesQuantity;
   private java.lang.CharSequence securityType;
   private java.lang.CharSequence settleBroker;
   private java.util.List<java.lang.CharSequence> securityExchange;
   private java.lang.CharSequence maturityMonthYear;
   private java.lang.CharSequence maturityDay;
   private int putOrCall;
   private float strikePrice;
   private java.lang.CharSequence exerciseType;
   private java.lang.CharSequence ocaInstrumentType;
   private float spread;
   private float contractMultiplier;
   private java.lang.CharSequence underlyingSecurityExchange;
   private java.lang.CharSequence underlyingSymbol;
   private java.lang.CharSequence underlyingMaturityMonthYear;
   private java.lang.CharSequence underlyingMaturityDay;
   private float underlyingContractMultiplier;
   private java.lang.CharSequence trader;
   private java.lang.CharSequence enteredBy;
   private java.lang.CharSequence instrumentCountry;
   private java.lang.CharSequence settleCurrency;
   private java.lang.CharSequence instrumentCurrency;
   private java.lang.CharSequence instrumentName;
   private float instrCurrencyFxRate;
   private java.lang.CharSequence instrCurrencyFxRateCalc;
   private java.lang.CharSequence strategy;
   private java.lang.CharSequence nonDeliverableForward;
   private float mainPrice;
   private long interestRate;
   private long openPrivate;
   private long closePrivate;
   private java.lang.CharSequence customRiskClass;
   private java.lang.CharSequence customSubBook;
   private java.lang.CharSequence customStrategy;
   private java.lang.CharSequence customCountry;
   private java.lang.CharSequence customCounterParty;
   private java.lang.CharSequence customFrm;
   private java.lang.CharSequence customSalesBroker;
   private java.lang.CharSequence commFlag;
   private java.lang.CharSequence initialMargin;
   private java.lang.CharSequence collateralFlag;
   private java.lang.CharSequence fundFamily;
   private java.lang.CharSequence familyAllocInfo;
   private java.lang.CharSequence custodianAccount;
   private java.lang.CharSequence businessUnit;
   private java.lang.CharSequence subBusinessUnit;
   private java.lang.CharSequence fund;
   private int autoCreateFlag;
   private float positionBeforeTrade;
   private float originalFaceValue;
   private float loanAmount;
   private java.lang.CharSequence accrualDaysPerMonth;
   private java.lang.CharSequence accrualDaysPerYear;
   private java.lang.CharSequence endOfMonth;
   private java.lang.CharSequence fixingPrivate;
   private java.lang.CharSequence currentMargin;
   private java.lang.CharSequence tradeFlat;
   private float parentQuantity;
   private float underlyingQuantity;
   private java.lang.CharSequence customCrossCurrency;
   private java.lang.CharSequence customProductType;
   private java.lang.CharSequence transactionType;
   private java.lang.CharSequence newStrategy;
   private java.lang.CharSequence newPrimeBroker;
   private float customFundQuantity1;
   private java.lang.CharSequence customFundSide1;
   private float customFundQuantity2;
   private java.lang.CharSequence customFundSide3;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public LargeExampleAvro() {}

  /**
   * All-args constructor.
   * @param avgPx The new value for avgPx
   * @param comission The new value for comission
   * @param commType The new value for commType
   * @param currency The new value for currency
   * @param execId The new value for execId
   * @param execRefId The new value for execRefId
   * @param execTransactiontype The new value for execTransactiontype
   * @param execType The new value for execType
   * @param idSource The new value for idSource
   * @param lastCapacity The new value for lastCapacity
   * @param lastMkt The new value for lastMkt
   * @param lastPx The new value for lastPx
   * @param lastShares The new value for lastShares
   * @param msgSeqNum The new value for msgSeqNum
   * @param orderId The new value for orderId
   * @param orderQuantity The new value for orderQuantity
   * @param orderStatus The new value for orderStatus
   * @param origCiOrderId The new value for origCiOrderId
   * @param posDupFlag The new value for posDupFlag
   * @param price The new value for price
   * @param securityId The new value for securityId
   * @param side The new value for side
   * @param symbol The new value for symbol
   * @param text The new value for text
   * @param transactId The new value for transactId
   * @param parentOrderId The new value for parentOrderId
   * @param settlementType The new value for settlementType
   * @param futSettleprivate The new value for futSettleprivate
   * @param symbolSfx The new value for symbolSfx
   * @param parentOrderQuantity The new value for parentOrderQuantity
   * @param tradeCurrencyCountry The new value for tradeCurrencyCountry
   * @param tradeprivate The new value for tradeprivate
   * @param execBroker The new value for execBroker
   * @param openClose The new value for openClose
   * @param processCode The new value for processCode
   * @param origSide The new value for origSide
   * @param netPrice The new value for netPrice
   * @param clientId The new value for clientId
   * @param reportToExchange The new value for reportToExchange
   * @param leavesQuantity The new value for leavesQuantity
   * @param securityType The new value for securityType
   * @param settleBroker The new value for settleBroker
   * @param securityExchange The new value for securityExchange
   * @param maturityMonthYear The new value for maturityMonthYear
   * @param maturityDay The new value for maturityDay
   * @param putOrCall The new value for putOrCall
   * @param strikePrice The new value for strikePrice
   * @param exerciseType The new value for exerciseType
   * @param ocaInstrumentType The new value for ocaInstrumentType
   * @param spread The new value for spread
   * @param contractMultiplier The new value for contractMultiplier
   * @param underlyingSecurityExchange The new value for underlyingSecurityExchange
   * @param underlyingSymbol The new value for underlyingSymbol
   * @param underlyingMaturityMonthYear The new value for underlyingMaturityMonthYear
   * @param underlyingMaturityDay The new value for underlyingMaturityDay
   * @param underlyingContractMultiplier The new value for underlyingContractMultiplier
   * @param trader The new value for trader
   * @param enteredBy The new value for enteredBy
   * @param instrumentCountry The new value for instrumentCountry
   * @param settleCurrency The new value for settleCurrency
   * @param instrumentCurrency The new value for instrumentCurrency
   * @param instrumentName The new value for instrumentName
   * @param instrCurrencyFxRate The new value for instrCurrencyFxRate
   * @param instrCurrencyFxRateCalc The new value for instrCurrencyFxRateCalc
   * @param strategy The new value for strategy
   * @param nonDeliverableForward The new value for nonDeliverableForward
   * @param mainPrice The new value for mainPrice
   * @param interestRate The new value for interestRate
   * @param openPrivate The new value for openPrivate
   * @param closePrivate The new value for closePrivate
   * @param customRiskClass The new value for customRiskClass
   * @param customSubBook The new value for customSubBook
   * @param customStrategy The new value for customStrategy
   * @param customCountry The new value for customCountry
   * @param customCounterParty The new value for customCounterParty
   * @param customFrm The new value for customFrm
   * @param customSalesBroker The new value for customSalesBroker
   * @param commFlag The new value for commFlag
   * @param initialMargin The new value for initialMargin
   * @param collateralFlag The new value for collateralFlag
   * @param fundFamily The new value for fundFamily
   * @param familyAllocInfo The new value for familyAllocInfo
   * @param custodianAccount The new value for custodianAccount
   * @param businessUnit The new value for businessUnit
   * @param subBusinessUnit The new value for subBusinessUnit
   * @param fund The new value for fund
   * @param autoCreateFlag The new value for autoCreateFlag
   * @param positionBeforeTrade The new value for positionBeforeTrade
   * @param originalFaceValue The new value for originalFaceValue
   * @param loanAmount The new value for loanAmount
   * @param accrualDaysPerMonth The new value for accrualDaysPerMonth
   * @param accrualDaysPerYear The new value for accrualDaysPerYear
   * @param endOfMonth The new value for endOfMonth
   * @param fixingPrivate The new value for fixingPrivate
   * @param currentMargin The new value for currentMargin
   * @param tradeFlat The new value for tradeFlat
   * @param parentQuantity The new value for parentQuantity
   * @param underlyingQuantity The new value for underlyingQuantity
   * @param customCrossCurrency The new value for customCrossCurrency
   * @param customProductType The new value for customProductType
   * @param transactionType The new value for transactionType
   * @param newStrategy The new value for newStrategy
   * @param newPrimeBroker The new value for newPrimeBroker
   * @param customFundQuantity1 The new value for customFundQuantity1
   * @param customFundSide1 The new value for customFundSide1
   * @param customFundQuantity2 The new value for customFundQuantity2
   * @param customFundSide3 The new value for customFundSide3
   */
  public LargeExampleAvro(java.lang.Float avgPx, java.lang.Float comission, java.lang.CharSequence commType, java.lang.CharSequence currency, java.lang.CharSequence execId, java.lang.CharSequence execRefId, java.lang.CharSequence execTransactiontype, java.lang.CharSequence execType, java.lang.CharSequence idSource, java.lang.CharSequence lastCapacity, java.lang.CharSequence lastMkt, java.lang.Float lastPx, java.lang.Float lastShares, java.lang.Integer msgSeqNum, java.lang.CharSequence orderId, java.lang.Float orderQuantity, java.lang.CharSequence orderStatus, java.lang.CharSequence origCiOrderId, java.lang.CharSequence posDupFlag, java.lang.Float price, java.lang.CharSequence securityId, java.lang.CharSequence side, java.lang.CharSequence symbol, java.lang.CharSequence text, java.lang.Long transactId, java.lang.CharSequence parentOrderId, java.lang.CharSequence settlementType, java.lang.CharSequence futSettleprivate, java.lang.CharSequence symbolSfx, java.lang.Float parentOrderQuantity, java.lang.CharSequence tradeCurrencyCountry, java.lang.CharSequence tradeprivate, java.lang.CharSequence execBroker, java.lang.CharSequence openClose, java.lang.CharSequence processCode, java.lang.CharSequence origSide, java.lang.Float netPrice, java.lang.CharSequence clientId, java.lang.Boolean reportToExchange, java.lang.Float leavesQuantity, java.lang.CharSequence securityType, java.lang.CharSequence settleBroker, java.util.List<java.lang.CharSequence> securityExchange, java.lang.CharSequence maturityMonthYear, java.lang.CharSequence maturityDay, java.lang.Integer putOrCall, java.lang.Float strikePrice, java.lang.CharSequence exerciseType, java.lang.CharSequence ocaInstrumentType, java.lang.Float spread, java.lang.Float contractMultiplier, java.lang.CharSequence underlyingSecurityExchange, java.lang.CharSequence underlyingSymbol, java.lang.CharSequence underlyingMaturityMonthYear, java.lang.CharSequence underlyingMaturityDay, java.lang.Float underlyingContractMultiplier, java.lang.CharSequence trader, java.lang.CharSequence enteredBy, java.lang.CharSequence instrumentCountry, java.lang.CharSequence settleCurrency, java.lang.CharSequence instrumentCurrency, java.lang.CharSequence instrumentName, java.lang.Float instrCurrencyFxRate, java.lang.CharSequence instrCurrencyFxRateCalc, java.lang.CharSequence strategy, java.lang.CharSequence nonDeliverableForward, java.lang.Float mainPrice, java.lang.Long interestRate, java.lang.Long openPrivate, java.lang.Long closePrivate, java.lang.CharSequence customRiskClass, java.lang.CharSequence customSubBook, java.lang.CharSequence customStrategy, java.lang.CharSequence customCountry, java.lang.CharSequence customCounterParty, java.lang.CharSequence customFrm, java.lang.CharSequence customSalesBroker, java.lang.CharSequence commFlag, java.lang.CharSequence initialMargin, java.lang.CharSequence collateralFlag, java.lang.CharSequence fundFamily, java.lang.CharSequence familyAllocInfo, java.lang.CharSequence custodianAccount, java.lang.CharSequence businessUnit, java.lang.CharSequence subBusinessUnit, java.lang.CharSequence fund, java.lang.Integer autoCreateFlag, java.lang.Float positionBeforeTrade, java.lang.Float originalFaceValue, java.lang.Float loanAmount, java.lang.CharSequence accrualDaysPerMonth, java.lang.CharSequence accrualDaysPerYear, java.lang.CharSequence endOfMonth, java.lang.CharSequence fixingPrivate, java.lang.CharSequence currentMargin, java.lang.CharSequence tradeFlat, java.lang.Float parentQuantity, java.lang.Float underlyingQuantity, java.lang.CharSequence customCrossCurrency, java.lang.CharSequence customProductType, java.lang.CharSequence transactionType, java.lang.CharSequence newStrategy, java.lang.CharSequence newPrimeBroker, java.lang.Float customFundQuantity1, java.lang.CharSequence customFundSide1, java.lang.Float customFundQuantity2, java.lang.CharSequence customFundSide3) {
    this.avgPx = avgPx;
    this.comission = comission;
    this.commType = commType;
    this.currency = currency;
    this.execId = execId;
    this.execRefId = execRefId;
    this.execTransactiontype = execTransactiontype;
    this.execType = execType;
    this.idSource = idSource;
    this.lastCapacity = lastCapacity;
    this.lastMkt = lastMkt;
    this.lastPx = lastPx;
    this.lastShares = lastShares;
    this.msgSeqNum = msgSeqNum;
    this.orderId = orderId;
    this.orderQuantity = orderQuantity;
    this.orderStatus = orderStatus;
    this.origCiOrderId = origCiOrderId;
    this.posDupFlag = posDupFlag;
    this.price = price;
    this.securityId = securityId;
    this.side = side;
    this.symbol = symbol;
    this.text = text;
    this.transactId = transactId;
    this.parentOrderId = parentOrderId;
    this.settlementType = settlementType;
    this.futSettleprivate = futSettleprivate;
    this.symbolSfx = symbolSfx;
    this.parentOrderQuantity = parentOrderQuantity;
    this.tradeCurrencyCountry = tradeCurrencyCountry;
    this.tradeprivate = tradeprivate;
    this.execBroker = execBroker;
    this.openClose = openClose;
    this.processCode = processCode;
    this.origSide = origSide;
    this.netPrice = netPrice;
    this.clientId = clientId;
    this.reportToExchange = reportToExchange;
    this.leavesQuantity = leavesQuantity;
    this.securityType = securityType;
    this.settleBroker = settleBroker;
    this.securityExchange = securityExchange;
    this.maturityMonthYear = maturityMonthYear;
    this.maturityDay = maturityDay;
    this.putOrCall = putOrCall;
    this.strikePrice = strikePrice;
    this.exerciseType = exerciseType;
    this.ocaInstrumentType = ocaInstrumentType;
    this.spread = spread;
    this.contractMultiplier = contractMultiplier;
    this.underlyingSecurityExchange = underlyingSecurityExchange;
    this.underlyingSymbol = underlyingSymbol;
    this.underlyingMaturityMonthYear = underlyingMaturityMonthYear;
    this.underlyingMaturityDay = underlyingMaturityDay;
    this.underlyingContractMultiplier = underlyingContractMultiplier;
    this.trader = trader;
    this.enteredBy = enteredBy;
    this.instrumentCountry = instrumentCountry;
    this.settleCurrency = settleCurrency;
    this.instrumentCurrency = instrumentCurrency;
    this.instrumentName = instrumentName;
    this.instrCurrencyFxRate = instrCurrencyFxRate;
    this.instrCurrencyFxRateCalc = instrCurrencyFxRateCalc;
    this.strategy = strategy;
    this.nonDeliverableForward = nonDeliverableForward;
    this.mainPrice = mainPrice;
    this.interestRate = interestRate;
    this.openPrivate = openPrivate;
    this.closePrivate = closePrivate;
    this.customRiskClass = customRiskClass;
    this.customSubBook = customSubBook;
    this.customStrategy = customStrategy;
    this.customCountry = customCountry;
    this.customCounterParty = customCounterParty;
    this.customFrm = customFrm;
    this.customSalesBroker = customSalesBroker;
    this.commFlag = commFlag;
    this.initialMargin = initialMargin;
    this.collateralFlag = collateralFlag;
    this.fundFamily = fundFamily;
    this.familyAllocInfo = familyAllocInfo;
    this.custodianAccount = custodianAccount;
    this.businessUnit = businessUnit;
    this.subBusinessUnit = subBusinessUnit;
    this.fund = fund;
    this.autoCreateFlag = autoCreateFlag;
    this.positionBeforeTrade = positionBeforeTrade;
    this.originalFaceValue = originalFaceValue;
    this.loanAmount = loanAmount;
    this.accrualDaysPerMonth = accrualDaysPerMonth;
    this.accrualDaysPerYear = accrualDaysPerYear;
    this.endOfMonth = endOfMonth;
    this.fixingPrivate = fixingPrivate;
    this.currentMargin = currentMargin;
    this.tradeFlat = tradeFlat;
    this.parentQuantity = parentQuantity;
    this.underlyingQuantity = underlyingQuantity;
    this.customCrossCurrency = customCrossCurrency;
    this.customProductType = customProductType;
    this.transactionType = transactionType;
    this.newStrategy = newStrategy;
    this.newPrimeBroker = newPrimeBroker;
    this.customFundQuantity1 = customFundQuantity1;
    this.customFundSide1 = customFundSide1;
    this.customFundQuantity2 = customFundQuantity2;
    this.customFundSide3 = customFundSide3;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return avgPx;
    case 1: return comission;
    case 2: return commType;
    case 3: return currency;
    case 4: return execId;
    case 5: return execRefId;
    case 6: return execTransactiontype;
    case 7: return execType;
    case 8: return idSource;
    case 9: return lastCapacity;
    case 10: return lastMkt;
    case 11: return lastPx;
    case 12: return lastShares;
    case 13: return msgSeqNum;
    case 14: return orderId;
    case 15: return orderQuantity;
    case 16: return orderStatus;
    case 17: return origCiOrderId;
    case 18: return posDupFlag;
    case 19: return price;
    case 20: return securityId;
    case 21: return side;
    case 22: return symbol;
    case 23: return text;
    case 24: return transactId;
    case 25: return parentOrderId;
    case 26: return settlementType;
    case 27: return futSettleprivate;
    case 28: return symbolSfx;
    case 29: return parentOrderQuantity;
    case 30: return tradeCurrencyCountry;
    case 31: return tradeprivate;
    case 32: return execBroker;
    case 33: return openClose;
    case 34: return processCode;
    case 35: return origSide;
    case 36: return netPrice;
    case 37: return clientId;
    case 38: return reportToExchange;
    case 39: return leavesQuantity;
    case 40: return securityType;
    case 41: return settleBroker;
    case 42: return securityExchange;
    case 43: return maturityMonthYear;
    case 44: return maturityDay;
    case 45: return putOrCall;
    case 46: return strikePrice;
    case 47: return exerciseType;
    case 48: return ocaInstrumentType;
    case 49: return spread;
    case 50: return contractMultiplier;
    case 51: return underlyingSecurityExchange;
    case 52: return underlyingSymbol;
    case 53: return underlyingMaturityMonthYear;
    case 54: return underlyingMaturityDay;
    case 55: return underlyingContractMultiplier;
    case 56: return trader;
    case 57: return enteredBy;
    case 58: return instrumentCountry;
    case 59: return settleCurrency;
    case 60: return instrumentCurrency;
    case 61: return instrumentName;
    case 62: return instrCurrencyFxRate;
    case 63: return instrCurrencyFxRateCalc;
    case 64: return strategy;
    case 65: return nonDeliverableForward;
    case 66: return mainPrice;
    case 67: return interestRate;
    case 68: return openPrivate;
    case 69: return closePrivate;
    case 70: return customRiskClass;
    case 71: return customSubBook;
    case 72: return customStrategy;
    case 73: return customCountry;
    case 74: return customCounterParty;
    case 75: return customFrm;
    case 76: return customSalesBroker;
    case 77: return commFlag;
    case 78: return initialMargin;
    case 79: return collateralFlag;
    case 80: return fundFamily;
    case 81: return familyAllocInfo;
    case 82: return custodianAccount;
    case 83: return businessUnit;
    case 84: return subBusinessUnit;
    case 85: return fund;
    case 86: return autoCreateFlag;
    case 87: return positionBeforeTrade;
    case 88: return originalFaceValue;
    case 89: return loanAmount;
    case 90: return accrualDaysPerMonth;
    case 91: return accrualDaysPerYear;
    case 92: return endOfMonth;
    case 93: return fixingPrivate;
    case 94: return currentMargin;
    case 95: return tradeFlat;
    case 96: return parentQuantity;
    case 97: return underlyingQuantity;
    case 98: return customCrossCurrency;
    case 99: return customProductType;
    case 100: return transactionType;
    case 101: return newStrategy;
    case 102: return newPrimeBroker;
    case 103: return customFundQuantity1;
    case 104: return customFundSide1;
    case 105: return customFundQuantity2;
    case 106: return customFundSide3;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: avgPx = (java.lang.Float)value$; break;
    case 1: comission = (java.lang.Float)value$; break;
    case 2: commType = (java.lang.CharSequence)value$; break;
    case 3: currency = (java.lang.CharSequence)value$; break;
    case 4: execId = (java.lang.CharSequence)value$; break;
    case 5: execRefId = (java.lang.CharSequence)value$; break;
    case 6: execTransactiontype = (java.lang.CharSequence)value$; break;
    case 7: execType = (java.lang.CharSequence)value$; break;
    case 8: idSource = (java.lang.CharSequence)value$; break;
    case 9: lastCapacity = (java.lang.CharSequence)value$; break;
    case 10: lastMkt = (java.lang.CharSequence)value$; break;
    case 11: lastPx = (java.lang.Float)value$; break;
    case 12: lastShares = (java.lang.Float)value$; break;
    case 13: msgSeqNum = (java.lang.Integer)value$; break;
    case 14: orderId = (java.lang.CharSequence)value$; break;
    case 15: orderQuantity = (java.lang.Float)value$; break;
    case 16: orderStatus = (java.lang.CharSequence)value$; break;
    case 17: origCiOrderId = (java.lang.CharSequence)value$; break;
    case 18: posDupFlag = (java.lang.CharSequence)value$; break;
    case 19: price = (java.lang.Float)value$; break;
    case 20: securityId = (java.lang.CharSequence)value$; break;
    case 21: side = (java.lang.CharSequence)value$; break;
    case 22: symbol = (java.lang.CharSequence)value$; break;
    case 23: text = (java.lang.CharSequence)value$; break;
    case 24: transactId = (java.lang.Long)value$; break;
    case 25: parentOrderId = (java.lang.CharSequence)value$; break;
    case 26: settlementType = (java.lang.CharSequence)value$; break;
    case 27: futSettleprivate = (java.lang.CharSequence)value$; break;
    case 28: symbolSfx = (java.lang.CharSequence)value$; break;
    case 29: parentOrderQuantity = (java.lang.Float)value$; break;
    case 30: tradeCurrencyCountry = (java.lang.CharSequence)value$; break;
    case 31: tradeprivate = (java.lang.CharSequence)value$; break;
    case 32: execBroker = (java.lang.CharSequence)value$; break;
    case 33: openClose = (java.lang.CharSequence)value$; break;
    case 34: processCode = (java.lang.CharSequence)value$; break;
    case 35: origSide = (java.lang.CharSequence)value$; break;
    case 36: netPrice = (java.lang.Float)value$; break;
    case 37: clientId = (java.lang.CharSequence)value$; break;
    case 38: reportToExchange = (java.lang.Boolean)value$; break;
    case 39: leavesQuantity = (java.lang.Float)value$; break;
    case 40: securityType = (java.lang.CharSequence)value$; break;
    case 41: settleBroker = (java.lang.CharSequence)value$; break;
    case 42: securityExchange = (java.util.List<java.lang.CharSequence>)value$; break;
    case 43: maturityMonthYear = (java.lang.CharSequence)value$; break;
    case 44: maturityDay = (java.lang.CharSequence)value$; break;
    case 45: putOrCall = (java.lang.Integer)value$; break;
    case 46: strikePrice = (java.lang.Float)value$; break;
    case 47: exerciseType = (java.lang.CharSequence)value$; break;
    case 48: ocaInstrumentType = (java.lang.CharSequence)value$; break;
    case 49: spread = (java.lang.Float)value$; break;
    case 50: contractMultiplier = (java.lang.Float)value$; break;
    case 51: underlyingSecurityExchange = (java.lang.CharSequence)value$; break;
    case 52: underlyingSymbol = (java.lang.CharSequence)value$; break;
    case 53: underlyingMaturityMonthYear = (java.lang.CharSequence)value$; break;
    case 54: underlyingMaturityDay = (java.lang.CharSequence)value$; break;
    case 55: underlyingContractMultiplier = (java.lang.Float)value$; break;
    case 56: trader = (java.lang.CharSequence)value$; break;
    case 57: enteredBy = (java.lang.CharSequence)value$; break;
    case 58: instrumentCountry = (java.lang.CharSequence)value$; break;
    case 59: settleCurrency = (java.lang.CharSequence)value$; break;
    case 60: instrumentCurrency = (java.lang.CharSequence)value$; break;
    case 61: instrumentName = (java.lang.CharSequence)value$; break;
    case 62: instrCurrencyFxRate = (java.lang.Float)value$; break;
    case 63: instrCurrencyFxRateCalc = (java.lang.CharSequence)value$; break;
    case 64: strategy = (java.lang.CharSequence)value$; break;
    case 65: nonDeliverableForward = (java.lang.CharSequence)value$; break;
    case 66: mainPrice = (java.lang.Float)value$; break;
    case 67: interestRate = (java.lang.Long)value$; break;
    case 68: openPrivate = (java.lang.Long)value$; break;
    case 69: closePrivate = (java.lang.Long)value$; break;
    case 70: customRiskClass = (java.lang.CharSequence)value$; break;
    case 71: customSubBook = (java.lang.CharSequence)value$; break;
    case 72: customStrategy = (java.lang.CharSequence)value$; break;
    case 73: customCountry = (java.lang.CharSequence)value$; break;
    case 74: customCounterParty = (java.lang.CharSequence)value$; break;
    case 75: customFrm = (java.lang.CharSequence)value$; break;
    case 76: customSalesBroker = (java.lang.CharSequence)value$; break;
    case 77: commFlag = (java.lang.CharSequence)value$; break;
    case 78: initialMargin = (java.lang.CharSequence)value$; break;
    case 79: collateralFlag = (java.lang.CharSequence)value$; break;
    case 80: fundFamily = (java.lang.CharSequence)value$; break;
    case 81: familyAllocInfo = (java.lang.CharSequence)value$; break;
    case 82: custodianAccount = (java.lang.CharSequence)value$; break;
    case 83: businessUnit = (java.lang.CharSequence)value$; break;
    case 84: subBusinessUnit = (java.lang.CharSequence)value$; break;
    case 85: fund = (java.lang.CharSequence)value$; break;
    case 86: autoCreateFlag = (java.lang.Integer)value$; break;
    case 87: positionBeforeTrade = (java.lang.Float)value$; break;
    case 88: originalFaceValue = (java.lang.Float)value$; break;
    case 89: loanAmount = (java.lang.Float)value$; break;
    case 90: accrualDaysPerMonth = (java.lang.CharSequence)value$; break;
    case 91: accrualDaysPerYear = (java.lang.CharSequence)value$; break;
    case 92: endOfMonth = (java.lang.CharSequence)value$; break;
    case 93: fixingPrivate = (java.lang.CharSequence)value$; break;
    case 94: currentMargin = (java.lang.CharSequence)value$; break;
    case 95: tradeFlat = (java.lang.CharSequence)value$; break;
    case 96: parentQuantity = (java.lang.Float)value$; break;
    case 97: underlyingQuantity = (java.lang.Float)value$; break;
    case 98: customCrossCurrency = (java.lang.CharSequence)value$; break;
    case 99: customProductType = (java.lang.CharSequence)value$; break;
    case 100: transactionType = (java.lang.CharSequence)value$; break;
    case 101: newStrategy = (java.lang.CharSequence)value$; break;
    case 102: newPrimeBroker = (java.lang.CharSequence)value$; break;
    case 103: customFundQuantity1 = (java.lang.Float)value$; break;
    case 104: customFundSide1 = (java.lang.CharSequence)value$; break;
    case 105: customFundQuantity2 = (java.lang.Float)value$; break;
    case 106: customFundSide3 = (java.lang.CharSequence)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'avgPx' field.
   * @return The value of the 'avgPx' field.
   */
  public float getAvgPx() {
    return avgPx;
  }


  /**
   * Sets the value of the 'avgPx' field.
   * @param value the value to set.
   */
  public void setAvgPx(float value) {
    this.avgPx = value;
  }

  /**
   * Gets the value of the 'comission' field.
   * @return The value of the 'comission' field.
   */
  public float getComission() {
    return comission;
  }


  /**
   * Sets the value of the 'comission' field.
   * @param value the value to set.
   */
  public void setComission(float value) {
    this.comission = value;
  }

  /**
   * Gets the value of the 'commType' field.
   * @return The value of the 'commType' field.
   */
  public java.lang.CharSequence getCommType() {
    return commType;
  }


  /**
   * Sets the value of the 'commType' field.
   * @param value the value to set.
   */
  public void setCommType(java.lang.CharSequence value) {
    this.commType = value;
  }

  /**
   * Gets the value of the 'currency' field.
   * @return The value of the 'currency' field.
   */
  public java.lang.CharSequence getCurrency() {
    return currency;
  }


  /**
   * Sets the value of the 'currency' field.
   * @param value the value to set.
   */
  public void setCurrency(java.lang.CharSequence value) {
    this.currency = value;
  }

  /**
   * Gets the value of the 'execId' field.
   * @return The value of the 'execId' field.
   */
  public java.lang.CharSequence getExecId() {
    return execId;
  }


  /**
   * Sets the value of the 'execId' field.
   * @param value the value to set.
   */
  public void setExecId(java.lang.CharSequence value) {
    this.execId = value;
  }

  /**
   * Gets the value of the 'execRefId' field.
   * @return The value of the 'execRefId' field.
   */
  public java.lang.CharSequence getExecRefId() {
    return execRefId;
  }


  /**
   * Sets the value of the 'execRefId' field.
   * @param value the value to set.
   */
  public void setExecRefId(java.lang.CharSequence value) {
    this.execRefId = value;
  }

  /**
   * Gets the value of the 'execTransactiontype' field.
   * @return The value of the 'execTransactiontype' field.
   */
  public java.lang.CharSequence getExecTransactiontype() {
    return execTransactiontype;
  }


  /**
   * Sets the value of the 'execTransactiontype' field.
   * @param value the value to set.
   */
  public void setExecTransactiontype(java.lang.CharSequence value) {
    this.execTransactiontype = value;
  }

  /**
   * Gets the value of the 'execType' field.
   * @return The value of the 'execType' field.
   */
  public java.lang.CharSequence getExecType() {
    return execType;
  }


  /**
   * Sets the value of the 'execType' field.
   * @param value the value to set.
   */
  public void setExecType(java.lang.CharSequence value) {
    this.execType = value;
  }

  /**
   * Gets the value of the 'idSource' field.
   * @return The value of the 'idSource' field.
   */
  public java.lang.CharSequence getIdSource() {
    return idSource;
  }


  /**
   * Sets the value of the 'idSource' field.
   * @param value the value to set.
   */
  public void setIdSource(java.lang.CharSequence value) {
    this.idSource = value;
  }

  /**
   * Gets the value of the 'lastCapacity' field.
   * @return The value of the 'lastCapacity' field.
   */
  public java.lang.CharSequence getLastCapacity() {
    return lastCapacity;
  }


  /**
   * Sets the value of the 'lastCapacity' field.
   * @param value the value to set.
   */
  public void setLastCapacity(java.lang.CharSequence value) {
    this.lastCapacity = value;
  }

  /**
   * Gets the value of the 'lastMkt' field.
   * @return The value of the 'lastMkt' field.
   */
  public java.lang.CharSequence getLastMkt() {
    return lastMkt;
  }


  /**
   * Sets the value of the 'lastMkt' field.
   * @param value the value to set.
   */
  public void setLastMkt(java.lang.CharSequence value) {
    this.lastMkt = value;
  }

  /**
   * Gets the value of the 'lastPx' field.
   * @return The value of the 'lastPx' field.
   */
  public float getLastPx() {
    return lastPx;
  }


  /**
   * Sets the value of the 'lastPx' field.
   * @param value the value to set.
   */
  public void setLastPx(float value) {
    this.lastPx = value;
  }

  /**
   * Gets the value of the 'lastShares' field.
   * @return The value of the 'lastShares' field.
   */
  public float getLastShares() {
    return lastShares;
  }


  /**
   * Sets the value of the 'lastShares' field.
   * @param value the value to set.
   */
  public void setLastShares(float value) {
    this.lastShares = value;
  }

  /**
   * Gets the value of the 'msgSeqNum' field.
   * @return The value of the 'msgSeqNum' field.
   */
  public int getMsgSeqNum() {
    return msgSeqNum;
  }


  /**
   * Sets the value of the 'msgSeqNum' field.
   * @param value the value to set.
   */
  public void setMsgSeqNum(int value) {
    this.msgSeqNum = value;
  }

  /**
   * Gets the value of the 'orderId' field.
   * @return The value of the 'orderId' field.
   */
  public java.lang.CharSequence getOrderId() {
    return orderId;
  }


  /**
   * Sets the value of the 'orderId' field.
   * @param value the value to set.
   */
  public void setOrderId(java.lang.CharSequence value) {
    this.orderId = value;
  }

  /**
   * Gets the value of the 'orderQuantity' field.
   * @return The value of the 'orderQuantity' field.
   */
  public float getOrderQuantity() {
    return orderQuantity;
  }


  /**
   * Sets the value of the 'orderQuantity' field.
   * @param value the value to set.
   */
  public void setOrderQuantity(float value) {
    this.orderQuantity = value;
  }

  /**
   * Gets the value of the 'orderStatus' field.
   * @return The value of the 'orderStatus' field.
   */
  public java.lang.CharSequence getOrderStatus() {
    return orderStatus;
  }


  /**
   * Sets the value of the 'orderStatus' field.
   * @param value the value to set.
   */
  public void setOrderStatus(java.lang.CharSequence value) {
    this.orderStatus = value;
  }

  /**
   * Gets the value of the 'origCiOrderId' field.
   * @return The value of the 'origCiOrderId' field.
   */
  public java.lang.CharSequence getOrigCiOrderId() {
    return origCiOrderId;
  }


  /**
   * Sets the value of the 'origCiOrderId' field.
   * @param value the value to set.
   */
  public void setOrigCiOrderId(java.lang.CharSequence value) {
    this.origCiOrderId = value;
  }

  /**
   * Gets the value of the 'posDupFlag' field.
   * @return The value of the 'posDupFlag' field.
   */
  public java.lang.CharSequence getPosDupFlag() {
    return posDupFlag;
  }


  /**
   * Sets the value of the 'posDupFlag' field.
   * @param value the value to set.
   */
  public void setPosDupFlag(java.lang.CharSequence value) {
    this.posDupFlag = value;
  }

  /**
   * Gets the value of the 'price' field.
   * @return The value of the 'price' field.
   */
  public float getPrice() {
    return price;
  }


  /**
   * Sets the value of the 'price' field.
   * @param value the value to set.
   */
  public void setPrice(float value) {
    this.price = value;
  }

  /**
   * Gets the value of the 'securityId' field.
   * @return The value of the 'securityId' field.
   */
  public java.lang.CharSequence getSecurityId() {
    return securityId;
  }


  /**
   * Sets the value of the 'securityId' field.
   * @param value the value to set.
   */
  public void setSecurityId(java.lang.CharSequence value) {
    this.securityId = value;
  }

  /**
   * Gets the value of the 'side' field.
   * @return The value of the 'side' field.
   */
  public java.lang.CharSequence getSide() {
    return side;
  }


  /**
   * Sets the value of the 'side' field.
   * @param value the value to set.
   */
  public void setSide(java.lang.CharSequence value) {
    this.side = value;
  }

  /**
   * Gets the value of the 'symbol' field.
   * @return The value of the 'symbol' field.
   */
  public java.lang.CharSequence getSymbol() {
    return symbol;
  }


  /**
   * Sets the value of the 'symbol' field.
   * @param value the value to set.
   */
  public void setSymbol(java.lang.CharSequence value) {
    this.symbol = value;
  }

  /**
   * Gets the value of the 'text' field.
   * @return The value of the 'text' field.
   */
  public java.lang.CharSequence getText() {
    return text;
  }


  /**
   * Sets the value of the 'text' field.
   * @param value the value to set.
   */
  public void setText(java.lang.CharSequence value) {
    this.text = value;
  }

  /**
   * Gets the value of the 'transactId' field.
   * @return The value of the 'transactId' field.
   */
  public long getTransactId() {
    return transactId;
  }


  /**
   * Sets the value of the 'transactId' field.
   * @param value the value to set.
   */
  public void setTransactId(long value) {
    this.transactId = value;
  }

  /**
   * Gets the value of the 'parentOrderId' field.
   * @return The value of the 'parentOrderId' field.
   */
  public java.lang.CharSequence getParentOrderId() {
    return parentOrderId;
  }


  /**
   * Sets the value of the 'parentOrderId' field.
   * @param value the value to set.
   */
  public void setParentOrderId(java.lang.CharSequence value) {
    this.parentOrderId = value;
  }

  /**
   * Gets the value of the 'settlementType' field.
   * @return The value of the 'settlementType' field.
   */
  public java.lang.CharSequence getSettlementType() {
    return settlementType;
  }


  /**
   * Sets the value of the 'settlementType' field.
   * @param value the value to set.
   */
  public void setSettlementType(java.lang.CharSequence value) {
    this.settlementType = value;
  }

  /**
   * Gets the value of the 'futSettleprivate' field.
   * @return The value of the 'futSettleprivate' field.
   */
  public java.lang.CharSequence getFutSettleprivate() {
    return futSettleprivate;
  }


  /**
   * Sets the value of the 'futSettleprivate' field.
   * @param value the value to set.
   */
  public void setFutSettleprivate(java.lang.CharSequence value) {
    this.futSettleprivate = value;
  }

  /**
   * Gets the value of the 'symbolSfx' field.
   * @return The value of the 'symbolSfx' field.
   */
  public java.lang.CharSequence getSymbolSfx() {
    return symbolSfx;
  }


  /**
   * Sets the value of the 'symbolSfx' field.
   * @param value the value to set.
   */
  public void setSymbolSfx(java.lang.CharSequence value) {
    this.symbolSfx = value;
  }

  /**
   * Gets the value of the 'parentOrderQuantity' field.
   * @return The value of the 'parentOrderQuantity' field.
   */
  public float getParentOrderQuantity() {
    return parentOrderQuantity;
  }


  /**
   * Sets the value of the 'parentOrderQuantity' field.
   * @param value the value to set.
   */
  public void setParentOrderQuantity(float value) {
    this.parentOrderQuantity = value;
  }

  /**
   * Gets the value of the 'tradeCurrencyCountry' field.
   * @return The value of the 'tradeCurrencyCountry' field.
   */
  public java.lang.CharSequence getTradeCurrencyCountry() {
    return tradeCurrencyCountry;
  }


  /**
   * Sets the value of the 'tradeCurrencyCountry' field.
   * @param value the value to set.
   */
  public void setTradeCurrencyCountry(java.lang.CharSequence value) {
    this.tradeCurrencyCountry = value;
  }

  /**
   * Gets the value of the 'tradeprivate' field.
   * @return The value of the 'tradeprivate' field.
   */
  public java.lang.CharSequence getTradeprivate() {
    return tradeprivate;
  }


  /**
   * Sets the value of the 'tradeprivate' field.
   * @param value the value to set.
   */
  public void setTradeprivate(java.lang.CharSequence value) {
    this.tradeprivate = value;
  }

  /**
   * Gets the value of the 'execBroker' field.
   * @return The value of the 'execBroker' field.
   */
  public java.lang.CharSequence getExecBroker() {
    return execBroker;
  }


  /**
   * Sets the value of the 'execBroker' field.
   * @param value the value to set.
   */
  public void setExecBroker(java.lang.CharSequence value) {
    this.execBroker = value;
  }

  /**
   * Gets the value of the 'openClose' field.
   * @return The value of the 'openClose' field.
   */
  public java.lang.CharSequence getOpenClose() {
    return openClose;
  }


  /**
   * Sets the value of the 'openClose' field.
   * @param value the value to set.
   */
  public void setOpenClose(java.lang.CharSequence value) {
    this.openClose = value;
  }

  /**
   * Gets the value of the 'processCode' field.
   * @return The value of the 'processCode' field.
   */
  public java.lang.CharSequence getProcessCode() {
    return processCode;
  }


  /**
   * Sets the value of the 'processCode' field.
   * @param value the value to set.
   */
  public void setProcessCode(java.lang.CharSequence value) {
    this.processCode = value;
  }

  /**
   * Gets the value of the 'origSide' field.
   * @return The value of the 'origSide' field.
   */
  public java.lang.CharSequence getOrigSide() {
    return origSide;
  }


  /**
   * Sets the value of the 'origSide' field.
   * @param value the value to set.
   */
  public void setOrigSide(java.lang.CharSequence value) {
    this.origSide = value;
  }

  /**
   * Gets the value of the 'netPrice' field.
   * @return The value of the 'netPrice' field.
   */
  public float getNetPrice() {
    return netPrice;
  }


  /**
   * Sets the value of the 'netPrice' field.
   * @param value the value to set.
   */
  public void setNetPrice(float value) {
    this.netPrice = value;
  }

  /**
   * Gets the value of the 'clientId' field.
   * @return The value of the 'clientId' field.
   */
  public java.lang.CharSequence getClientId() {
    return clientId;
  }


  /**
   * Sets the value of the 'clientId' field.
   * @param value the value to set.
   */
  public void setClientId(java.lang.CharSequence value) {
    this.clientId = value;
  }

  /**
   * Gets the value of the 'reportToExchange' field.
   * @return The value of the 'reportToExchange' field.
   */
  public boolean getReportToExchange() {
    return reportToExchange;
  }


  /**
   * Sets the value of the 'reportToExchange' field.
   * @param value the value to set.
   */
  public void setReportToExchange(boolean value) {
    this.reportToExchange = value;
  }

  /**
   * Gets the value of the 'leavesQuantity' field.
   * @return The value of the 'leavesQuantity' field.
   */
  public float getLeavesQuantity() {
    return leavesQuantity;
  }


  /**
   * Sets the value of the 'leavesQuantity' field.
   * @param value the value to set.
   */
  public void setLeavesQuantity(float value) {
    this.leavesQuantity = value;
  }

  /**
   * Gets the value of the 'securityType' field.
   * @return The value of the 'securityType' field.
   */
  public java.lang.CharSequence getSecurityType() {
    return securityType;
  }


  /**
   * Sets the value of the 'securityType' field.
   * @param value the value to set.
   */
  public void setSecurityType(java.lang.CharSequence value) {
    this.securityType = value;
  }

  /**
   * Gets the value of the 'settleBroker' field.
   * @return The value of the 'settleBroker' field.
   */
  public java.lang.CharSequence getSettleBroker() {
    return settleBroker;
  }


  /**
   * Sets the value of the 'settleBroker' field.
   * @param value the value to set.
   */
  public void setSettleBroker(java.lang.CharSequence value) {
    this.settleBroker = value;
  }

  /**
   * Gets the value of the 'securityExchange' field.
   * @return The value of the 'securityExchange' field.
   */
  public java.util.List<java.lang.CharSequence> getSecurityExchange() {
    return securityExchange;
  }


  /**
   * Sets the value of the 'securityExchange' field.
   * @param value the value to set.
   */
  public void setSecurityExchange(java.util.List<java.lang.CharSequence> value) {
    this.securityExchange = value;
  }

  /**
   * Gets the value of the 'maturityMonthYear' field.
   * @return The value of the 'maturityMonthYear' field.
   */
  public java.lang.CharSequence getMaturityMonthYear() {
    return maturityMonthYear;
  }


  /**
   * Sets the value of the 'maturityMonthYear' field.
   * @param value the value to set.
   */
  public void setMaturityMonthYear(java.lang.CharSequence value) {
    this.maturityMonthYear = value;
  }

  /**
   * Gets the value of the 'maturityDay' field.
   * @return The value of the 'maturityDay' field.
   */
  public java.lang.CharSequence getMaturityDay() {
    return maturityDay;
  }


  /**
   * Sets the value of the 'maturityDay' field.
   * @param value the value to set.
   */
  public void setMaturityDay(java.lang.CharSequence value) {
    this.maturityDay = value;
  }

  /**
   * Gets the value of the 'putOrCall' field.
   * @return The value of the 'putOrCall' field.
   */
  public int getPutOrCall() {
    return putOrCall;
  }


  /**
   * Sets the value of the 'putOrCall' field.
   * @param value the value to set.
   */
  public void setPutOrCall(int value) {
    this.putOrCall = value;
  }

  /**
   * Gets the value of the 'strikePrice' field.
   * @return The value of the 'strikePrice' field.
   */
  public float getStrikePrice() {
    return strikePrice;
  }


  /**
   * Sets the value of the 'strikePrice' field.
   * @param value the value to set.
   */
  public void setStrikePrice(float value) {
    this.strikePrice = value;
  }

  /**
   * Gets the value of the 'exerciseType' field.
   * @return The value of the 'exerciseType' field.
   */
  public java.lang.CharSequence getExerciseType() {
    return exerciseType;
  }


  /**
   * Sets the value of the 'exerciseType' field.
   * @param value the value to set.
   */
  public void setExerciseType(java.lang.CharSequence value) {
    this.exerciseType = value;
  }

  /**
   * Gets the value of the 'ocaInstrumentType' field.
   * @return The value of the 'ocaInstrumentType' field.
   */
  public java.lang.CharSequence getOcaInstrumentType() {
    return ocaInstrumentType;
  }


  /**
   * Sets the value of the 'ocaInstrumentType' field.
   * @param value the value to set.
   */
  public void setOcaInstrumentType(java.lang.CharSequence value) {
    this.ocaInstrumentType = value;
  }

  /**
   * Gets the value of the 'spread' field.
   * @return The value of the 'spread' field.
   */
  public float getSpread() {
    return spread;
  }


  /**
   * Sets the value of the 'spread' field.
   * @param value the value to set.
   */
  public void setSpread(float value) {
    this.spread = value;
  }

  /**
   * Gets the value of the 'contractMultiplier' field.
   * @return The value of the 'contractMultiplier' field.
   */
  public float getContractMultiplier() {
    return contractMultiplier;
  }


  /**
   * Sets the value of the 'contractMultiplier' field.
   * @param value the value to set.
   */
  public void setContractMultiplier(float value) {
    this.contractMultiplier = value;
  }

  /**
   * Gets the value of the 'underlyingSecurityExchange' field.
   * @return The value of the 'underlyingSecurityExchange' field.
   */
  public java.lang.CharSequence getUnderlyingSecurityExchange() {
    return underlyingSecurityExchange;
  }


  /**
   * Sets the value of the 'underlyingSecurityExchange' field.
   * @param value the value to set.
   */
  public void setUnderlyingSecurityExchange(java.lang.CharSequence value) {
    this.underlyingSecurityExchange = value;
  }

  /**
   * Gets the value of the 'underlyingSymbol' field.
   * @return The value of the 'underlyingSymbol' field.
   */
  public java.lang.CharSequence getUnderlyingSymbol() {
    return underlyingSymbol;
  }


  /**
   * Sets the value of the 'underlyingSymbol' field.
   * @param value the value to set.
   */
  public void setUnderlyingSymbol(java.lang.CharSequence value) {
    this.underlyingSymbol = value;
  }

  /**
   * Gets the value of the 'underlyingMaturityMonthYear' field.
   * @return The value of the 'underlyingMaturityMonthYear' field.
   */
  public java.lang.CharSequence getUnderlyingMaturityMonthYear() {
    return underlyingMaturityMonthYear;
  }


  /**
   * Sets the value of the 'underlyingMaturityMonthYear' field.
   * @param value the value to set.
   */
  public void setUnderlyingMaturityMonthYear(java.lang.CharSequence value) {
    this.underlyingMaturityMonthYear = value;
  }

  /**
   * Gets the value of the 'underlyingMaturityDay' field.
   * @return The value of the 'underlyingMaturityDay' field.
   */
  public java.lang.CharSequence getUnderlyingMaturityDay() {
    return underlyingMaturityDay;
  }


  /**
   * Sets the value of the 'underlyingMaturityDay' field.
   * @param value the value to set.
   */
  public void setUnderlyingMaturityDay(java.lang.CharSequence value) {
    this.underlyingMaturityDay = value;
  }

  /**
   * Gets the value of the 'underlyingContractMultiplier' field.
   * @return The value of the 'underlyingContractMultiplier' field.
   */
  public float getUnderlyingContractMultiplier() {
    return underlyingContractMultiplier;
  }


  /**
   * Sets the value of the 'underlyingContractMultiplier' field.
   * @param value the value to set.
   */
  public void setUnderlyingContractMultiplier(float value) {
    this.underlyingContractMultiplier = value;
  }

  /**
   * Gets the value of the 'trader' field.
   * @return The value of the 'trader' field.
   */
  public java.lang.CharSequence getTrader() {
    return trader;
  }


  /**
   * Sets the value of the 'trader' field.
   * @param value the value to set.
   */
  public void setTrader(java.lang.CharSequence value) {
    this.trader = value;
  }

  /**
   * Gets the value of the 'enteredBy' field.
   * @return The value of the 'enteredBy' field.
   */
  public java.lang.CharSequence getEnteredBy() {
    return enteredBy;
  }


  /**
   * Sets the value of the 'enteredBy' field.
   * @param value the value to set.
   */
  public void setEnteredBy(java.lang.CharSequence value) {
    this.enteredBy = value;
  }

  /**
   * Gets the value of the 'instrumentCountry' field.
   * @return The value of the 'instrumentCountry' field.
   */
  public java.lang.CharSequence getInstrumentCountry() {
    return instrumentCountry;
  }


  /**
   * Sets the value of the 'instrumentCountry' field.
   * @param value the value to set.
   */
  public void setInstrumentCountry(java.lang.CharSequence value) {
    this.instrumentCountry = value;
  }

  /**
   * Gets the value of the 'settleCurrency' field.
   * @return The value of the 'settleCurrency' field.
   */
  public java.lang.CharSequence getSettleCurrency() {
    return settleCurrency;
  }


  /**
   * Sets the value of the 'settleCurrency' field.
   * @param value the value to set.
   */
  public void setSettleCurrency(java.lang.CharSequence value) {
    this.settleCurrency = value;
  }

  /**
   * Gets the value of the 'instrumentCurrency' field.
   * @return The value of the 'instrumentCurrency' field.
   */
  public java.lang.CharSequence getInstrumentCurrency() {
    return instrumentCurrency;
  }


  /**
   * Sets the value of the 'instrumentCurrency' field.
   * @param value the value to set.
   */
  public void setInstrumentCurrency(java.lang.CharSequence value) {
    this.instrumentCurrency = value;
  }

  /**
   * Gets the value of the 'instrumentName' field.
   * @return The value of the 'instrumentName' field.
   */
  public java.lang.CharSequence getInstrumentName() {
    return instrumentName;
  }


  /**
   * Sets the value of the 'instrumentName' field.
   * @param value the value to set.
   */
  public void setInstrumentName(java.lang.CharSequence value) {
    this.instrumentName = value;
  }

  /**
   * Gets the value of the 'instrCurrencyFxRate' field.
   * @return The value of the 'instrCurrencyFxRate' field.
   */
  public float getInstrCurrencyFxRate() {
    return instrCurrencyFxRate;
  }


  /**
   * Sets the value of the 'instrCurrencyFxRate' field.
   * @param value the value to set.
   */
  public void setInstrCurrencyFxRate(float value) {
    this.instrCurrencyFxRate = value;
  }

  /**
   * Gets the value of the 'instrCurrencyFxRateCalc' field.
   * @return The value of the 'instrCurrencyFxRateCalc' field.
   */
  public java.lang.CharSequence getInstrCurrencyFxRateCalc() {
    return instrCurrencyFxRateCalc;
  }


  /**
   * Sets the value of the 'instrCurrencyFxRateCalc' field.
   * @param value the value to set.
   */
  public void setInstrCurrencyFxRateCalc(java.lang.CharSequence value) {
    this.instrCurrencyFxRateCalc = value;
  }

  /**
   * Gets the value of the 'strategy' field.
   * @return The value of the 'strategy' field.
   */
  public java.lang.CharSequence getStrategy() {
    return strategy;
  }


  /**
   * Sets the value of the 'strategy' field.
   * @param value the value to set.
   */
  public void setStrategy(java.lang.CharSequence value) {
    this.strategy = value;
  }

  /**
   * Gets the value of the 'nonDeliverableForward' field.
   * @return The value of the 'nonDeliverableForward' field.
   */
  public java.lang.CharSequence getNonDeliverableForward() {
    return nonDeliverableForward;
  }


  /**
   * Sets the value of the 'nonDeliverableForward' field.
   * @param value the value to set.
   */
  public void setNonDeliverableForward(java.lang.CharSequence value) {
    this.nonDeliverableForward = value;
  }

  /**
   * Gets the value of the 'mainPrice' field.
   * @return The value of the 'mainPrice' field.
   */
  public float getMainPrice() {
    return mainPrice;
  }


  /**
   * Sets the value of the 'mainPrice' field.
   * @param value the value to set.
   */
  public void setMainPrice(float value) {
    this.mainPrice = value;
  }

  /**
   * Gets the value of the 'interestRate' field.
   * @return The value of the 'interestRate' field.
   */
  public long getInterestRate() {
    return interestRate;
  }


  /**
   * Sets the value of the 'interestRate' field.
   * @param value the value to set.
   */
  public void setInterestRate(long value) {
    this.interestRate = value;
  }

  /**
   * Gets the value of the 'openPrivate' field.
   * @return The value of the 'openPrivate' field.
   */
  public long getOpenPrivate() {
    return openPrivate;
  }


  /**
   * Sets the value of the 'openPrivate' field.
   * @param value the value to set.
   */
  public void setOpenPrivate(long value) {
    this.openPrivate = value;
  }

  /**
   * Gets the value of the 'closePrivate' field.
   * @return The value of the 'closePrivate' field.
   */
  public long getClosePrivate() {
    return closePrivate;
  }


  /**
   * Sets the value of the 'closePrivate' field.
   * @param value the value to set.
   */
  public void setClosePrivate(long value) {
    this.closePrivate = value;
  }

  /**
   * Gets the value of the 'customRiskClass' field.
   * @return The value of the 'customRiskClass' field.
   */
  public java.lang.CharSequence getCustomRiskClass() {
    return customRiskClass;
  }


  /**
   * Sets the value of the 'customRiskClass' field.
   * @param value the value to set.
   */
  public void setCustomRiskClass(java.lang.CharSequence value) {
    this.customRiskClass = value;
  }

  /**
   * Gets the value of the 'customSubBook' field.
   * @return The value of the 'customSubBook' field.
   */
  public java.lang.CharSequence getCustomSubBook() {
    return customSubBook;
  }


  /**
   * Sets the value of the 'customSubBook' field.
   * @param value the value to set.
   */
  public void setCustomSubBook(java.lang.CharSequence value) {
    this.customSubBook = value;
  }

  /**
   * Gets the value of the 'customStrategy' field.
   * @return The value of the 'customStrategy' field.
   */
  public java.lang.CharSequence getCustomStrategy() {
    return customStrategy;
  }


  /**
   * Sets the value of the 'customStrategy' field.
   * @param value the value to set.
   */
  public void setCustomStrategy(java.lang.CharSequence value) {
    this.customStrategy = value;
  }

  /**
   * Gets the value of the 'customCountry' field.
   * @return The value of the 'customCountry' field.
   */
  public java.lang.CharSequence getCustomCountry() {
    return customCountry;
  }


  /**
   * Sets the value of the 'customCountry' field.
   * @param value the value to set.
   */
  public void setCustomCountry(java.lang.CharSequence value) {
    this.customCountry = value;
  }

  /**
   * Gets the value of the 'customCounterParty' field.
   * @return The value of the 'customCounterParty' field.
   */
  public java.lang.CharSequence getCustomCounterParty() {
    return customCounterParty;
  }


  /**
   * Sets the value of the 'customCounterParty' field.
   * @param value the value to set.
   */
  public void setCustomCounterParty(java.lang.CharSequence value) {
    this.customCounterParty = value;
  }

  /**
   * Gets the value of the 'customFrm' field.
   * @return The value of the 'customFrm' field.
   */
  public java.lang.CharSequence getCustomFrm() {
    return customFrm;
  }


  /**
   * Sets the value of the 'customFrm' field.
   * @param value the value to set.
   */
  public void setCustomFrm(java.lang.CharSequence value) {
    this.customFrm = value;
  }

  /**
   * Gets the value of the 'customSalesBroker' field.
   * @return The value of the 'customSalesBroker' field.
   */
  public java.lang.CharSequence getCustomSalesBroker() {
    return customSalesBroker;
  }


  /**
   * Sets the value of the 'customSalesBroker' field.
   * @param value the value to set.
   */
  public void setCustomSalesBroker(java.lang.CharSequence value) {
    this.customSalesBroker = value;
  }

  /**
   * Gets the value of the 'commFlag' field.
   * @return The value of the 'commFlag' field.
   */
  public java.lang.CharSequence getCommFlag() {
    return commFlag;
  }


  /**
   * Sets the value of the 'commFlag' field.
   * @param value the value to set.
   */
  public void setCommFlag(java.lang.CharSequence value) {
    this.commFlag = value;
  }

  /**
   * Gets the value of the 'initialMargin' field.
   * @return The value of the 'initialMargin' field.
   */
  public java.lang.CharSequence getInitialMargin() {
    return initialMargin;
  }


  /**
   * Sets the value of the 'initialMargin' field.
   * @param value the value to set.
   */
  public void setInitialMargin(java.lang.CharSequence value) {
    this.initialMargin = value;
  }

  /**
   * Gets the value of the 'collateralFlag' field.
   * @return The value of the 'collateralFlag' field.
   */
  public java.lang.CharSequence getCollateralFlag() {
    return collateralFlag;
  }


  /**
   * Sets the value of the 'collateralFlag' field.
   * @param value the value to set.
   */
  public void setCollateralFlag(java.lang.CharSequence value) {
    this.collateralFlag = value;
  }

  /**
   * Gets the value of the 'fundFamily' field.
   * @return The value of the 'fundFamily' field.
   */
  public java.lang.CharSequence getFundFamily() {
    return fundFamily;
  }


  /**
   * Sets the value of the 'fundFamily' field.
   * @param value the value to set.
   */
  public void setFundFamily(java.lang.CharSequence value) {
    this.fundFamily = value;
  }

  /**
   * Gets the value of the 'familyAllocInfo' field.
   * @return The value of the 'familyAllocInfo' field.
   */
  public java.lang.CharSequence getFamilyAllocInfo() {
    return familyAllocInfo;
  }


  /**
   * Sets the value of the 'familyAllocInfo' field.
   * @param value the value to set.
   */
  public void setFamilyAllocInfo(java.lang.CharSequence value) {
    this.familyAllocInfo = value;
  }

  /**
   * Gets the value of the 'custodianAccount' field.
   * @return The value of the 'custodianAccount' field.
   */
  public java.lang.CharSequence getCustodianAccount() {
    return custodianAccount;
  }


  /**
   * Sets the value of the 'custodianAccount' field.
   * @param value the value to set.
   */
  public void setCustodianAccount(java.lang.CharSequence value) {
    this.custodianAccount = value;
  }

  /**
   * Gets the value of the 'businessUnit' field.
   * @return The value of the 'businessUnit' field.
   */
  public java.lang.CharSequence getBusinessUnit() {
    return businessUnit;
  }


  /**
   * Sets the value of the 'businessUnit' field.
   * @param value the value to set.
   */
  public void setBusinessUnit(java.lang.CharSequence value) {
    this.businessUnit = value;
  }

  /**
   * Gets the value of the 'subBusinessUnit' field.
   * @return The value of the 'subBusinessUnit' field.
   */
  public java.lang.CharSequence getSubBusinessUnit() {
    return subBusinessUnit;
  }


  /**
   * Sets the value of the 'subBusinessUnit' field.
   * @param value the value to set.
   */
  public void setSubBusinessUnit(java.lang.CharSequence value) {
    this.subBusinessUnit = value;
  }

  /**
   * Gets the value of the 'fund' field.
   * @return The value of the 'fund' field.
   */
  public java.lang.CharSequence getFund() {
    return fund;
  }


  /**
   * Sets the value of the 'fund' field.
   * @param value the value to set.
   */
  public void setFund(java.lang.CharSequence value) {
    this.fund = value;
  }

  /**
   * Gets the value of the 'autoCreateFlag' field.
   * @return The value of the 'autoCreateFlag' field.
   */
  public int getAutoCreateFlag() {
    return autoCreateFlag;
  }


  /**
   * Sets the value of the 'autoCreateFlag' field.
   * @param value the value to set.
   */
  public void setAutoCreateFlag(int value) {
    this.autoCreateFlag = value;
  }

  /**
   * Gets the value of the 'positionBeforeTrade' field.
   * @return The value of the 'positionBeforeTrade' field.
   */
  public float getPositionBeforeTrade() {
    return positionBeforeTrade;
  }


  /**
   * Sets the value of the 'positionBeforeTrade' field.
   * @param value the value to set.
   */
  public void setPositionBeforeTrade(float value) {
    this.positionBeforeTrade = value;
  }

  /**
   * Gets the value of the 'originalFaceValue' field.
   * @return The value of the 'originalFaceValue' field.
   */
  public float getOriginalFaceValue() {
    return originalFaceValue;
  }


  /**
   * Sets the value of the 'originalFaceValue' field.
   * @param value the value to set.
   */
  public void setOriginalFaceValue(float value) {
    this.originalFaceValue = value;
  }

  /**
   * Gets the value of the 'loanAmount' field.
   * @return The value of the 'loanAmount' field.
   */
  public float getLoanAmount() {
    return loanAmount;
  }


  /**
   * Sets the value of the 'loanAmount' field.
   * @param value the value to set.
   */
  public void setLoanAmount(float value) {
    this.loanAmount = value;
  }

  /**
   * Gets the value of the 'accrualDaysPerMonth' field.
   * @return The value of the 'accrualDaysPerMonth' field.
   */
  public java.lang.CharSequence getAccrualDaysPerMonth() {
    return accrualDaysPerMonth;
  }


  /**
   * Sets the value of the 'accrualDaysPerMonth' field.
   * @param value the value to set.
   */
  public void setAccrualDaysPerMonth(java.lang.CharSequence value) {
    this.accrualDaysPerMonth = value;
  }

  /**
   * Gets the value of the 'accrualDaysPerYear' field.
   * @return The value of the 'accrualDaysPerYear' field.
   */
  public java.lang.CharSequence getAccrualDaysPerYear() {
    return accrualDaysPerYear;
  }


  /**
   * Sets the value of the 'accrualDaysPerYear' field.
   * @param value the value to set.
   */
  public void setAccrualDaysPerYear(java.lang.CharSequence value) {
    this.accrualDaysPerYear = value;
  }

  /**
   * Gets the value of the 'endOfMonth' field.
   * @return The value of the 'endOfMonth' field.
   */
  public java.lang.CharSequence getEndOfMonth() {
    return endOfMonth;
  }


  /**
   * Sets the value of the 'endOfMonth' field.
   * @param value the value to set.
   */
  public void setEndOfMonth(java.lang.CharSequence value) {
    this.endOfMonth = value;
  }

  /**
   * Gets the value of the 'fixingPrivate' field.
   * @return The value of the 'fixingPrivate' field.
   */
  public java.lang.CharSequence getFixingPrivate() {
    return fixingPrivate;
  }


  /**
   * Sets the value of the 'fixingPrivate' field.
   * @param value the value to set.
   */
  public void setFixingPrivate(java.lang.CharSequence value) {
    this.fixingPrivate = value;
  }

  /**
   * Gets the value of the 'currentMargin' field.
   * @return The value of the 'currentMargin' field.
   */
  public java.lang.CharSequence getCurrentMargin() {
    return currentMargin;
  }


  /**
   * Sets the value of the 'currentMargin' field.
   * @param value the value to set.
   */
  public void setCurrentMargin(java.lang.CharSequence value) {
    this.currentMargin = value;
  }

  /**
   * Gets the value of the 'tradeFlat' field.
   * @return The value of the 'tradeFlat' field.
   */
  public java.lang.CharSequence getTradeFlat() {
    return tradeFlat;
  }


  /**
   * Sets the value of the 'tradeFlat' field.
   * @param value the value to set.
   */
  public void setTradeFlat(java.lang.CharSequence value) {
    this.tradeFlat = value;
  }

  /**
   * Gets the value of the 'parentQuantity' field.
   * @return The value of the 'parentQuantity' field.
   */
  public float getParentQuantity() {
    return parentQuantity;
  }


  /**
   * Sets the value of the 'parentQuantity' field.
   * @param value the value to set.
   */
  public void setParentQuantity(float value) {
    this.parentQuantity = value;
  }

  /**
   * Gets the value of the 'underlyingQuantity' field.
   * @return The value of the 'underlyingQuantity' field.
   */
  public float getUnderlyingQuantity() {
    return underlyingQuantity;
  }


  /**
   * Sets the value of the 'underlyingQuantity' field.
   * @param value the value to set.
   */
  public void setUnderlyingQuantity(float value) {
    this.underlyingQuantity = value;
  }

  /**
   * Gets the value of the 'customCrossCurrency' field.
   * @return The value of the 'customCrossCurrency' field.
   */
  public java.lang.CharSequence getCustomCrossCurrency() {
    return customCrossCurrency;
  }


  /**
   * Sets the value of the 'customCrossCurrency' field.
   * @param value the value to set.
   */
  public void setCustomCrossCurrency(java.lang.CharSequence value) {
    this.customCrossCurrency = value;
  }

  /**
   * Gets the value of the 'customProductType' field.
   * @return The value of the 'customProductType' field.
   */
  public java.lang.CharSequence getCustomProductType() {
    return customProductType;
  }


  /**
   * Sets the value of the 'customProductType' field.
   * @param value the value to set.
   */
  public void setCustomProductType(java.lang.CharSequence value) {
    this.customProductType = value;
  }

  /**
   * Gets the value of the 'transactionType' field.
   * @return The value of the 'transactionType' field.
   */
  public java.lang.CharSequence getTransactionType() {
    return transactionType;
  }


  /**
   * Sets the value of the 'transactionType' field.
   * @param value the value to set.
   */
  public void setTransactionType(java.lang.CharSequence value) {
    this.transactionType = value;
  }

  /**
   * Gets the value of the 'newStrategy' field.
   * @return The value of the 'newStrategy' field.
   */
  public java.lang.CharSequence getNewStrategy() {
    return newStrategy;
  }


  /**
   * Sets the value of the 'newStrategy' field.
   * @param value the value to set.
   */
  public void setNewStrategy(java.lang.CharSequence value) {
    this.newStrategy = value;
  }

  /**
   * Gets the value of the 'newPrimeBroker' field.
   * @return The value of the 'newPrimeBroker' field.
   */
  public java.lang.CharSequence getNewPrimeBroker() {
    return newPrimeBroker;
  }


  /**
   * Sets the value of the 'newPrimeBroker' field.
   * @param value the value to set.
   */
  public void setNewPrimeBroker(java.lang.CharSequence value) {
    this.newPrimeBroker = value;
  }

  /**
   * Gets the value of the 'customFundQuantity1' field.
   * @return The value of the 'customFundQuantity1' field.
   */
  public float getCustomFundQuantity1() {
    return customFundQuantity1;
  }


  /**
   * Sets the value of the 'customFundQuantity1' field.
   * @param value the value to set.
   */
  public void setCustomFundQuantity1(float value) {
    this.customFundQuantity1 = value;
  }

  /**
   * Gets the value of the 'customFundSide1' field.
   * @return The value of the 'customFundSide1' field.
   */
  public java.lang.CharSequence getCustomFundSide1() {
    return customFundSide1;
  }


  /**
   * Sets the value of the 'customFundSide1' field.
   * @param value the value to set.
   */
  public void setCustomFundSide1(java.lang.CharSequence value) {
    this.customFundSide1 = value;
  }

  /**
   * Gets the value of the 'customFundQuantity2' field.
   * @return The value of the 'customFundQuantity2' field.
   */
  public float getCustomFundQuantity2() {
    return customFundQuantity2;
  }


  /**
   * Sets the value of the 'customFundQuantity2' field.
   * @param value the value to set.
   */
  public void setCustomFundQuantity2(float value) {
    this.customFundQuantity2 = value;
  }

  /**
   * Gets the value of the 'customFundSide3' field.
   * @return The value of the 'customFundSide3' field.
   */
  public java.lang.CharSequence getCustomFundSide3() {
    return customFundSide3;
  }


  /**
   * Sets the value of the 'customFundSide3' field.
   * @param value the value to set.
   */
  public void setCustomFundSide3(java.lang.CharSequence value) {
    this.customFundSide3 = value;
  }

  /**
   * Creates a new LargeExampleAvro RecordBuilder.
   * @return A new LargeExampleAvro RecordBuilder
   */
  public static org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder newBuilder() {
    return new org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder();
  }

  /**
   * Creates a new LargeExampleAvro RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new LargeExampleAvro RecordBuilder
   */
  public static org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder newBuilder(org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder other) {
    if (other == null) {
      return new org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder();
    } else {
      return new org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder(other);
    }
  }

  /**
   * Creates a new LargeExampleAvro RecordBuilder by copying an existing LargeExampleAvro instance.
   * @param other The existing instance to copy.
   * @return A new LargeExampleAvro RecordBuilder
   */
  public static org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder newBuilder(org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro other) {
    if (other == null) {
      return new org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder();
    } else {
      return new org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder(other);
    }
  }

  /**
   * RecordBuilder for LargeExampleAvro instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<LargeExampleAvro>
    implements org.apache.avro.data.RecordBuilder<LargeExampleAvro> {

    private float avgPx;
    private float comission;
    private java.lang.CharSequence commType;
    private java.lang.CharSequence currency;
    private java.lang.CharSequence execId;
    private java.lang.CharSequence execRefId;
    private java.lang.CharSequence execTransactiontype;
    private java.lang.CharSequence execType;
    private java.lang.CharSequence idSource;
    private java.lang.CharSequence lastCapacity;
    private java.lang.CharSequence lastMkt;
    private float lastPx;
    private float lastShares;
    private int msgSeqNum;
    private java.lang.CharSequence orderId;
    private float orderQuantity;
    private java.lang.CharSequence orderStatus;
    private java.lang.CharSequence origCiOrderId;
    private java.lang.CharSequence posDupFlag;
    private float price;
    private java.lang.CharSequence securityId;
    private java.lang.CharSequence side;
    private java.lang.CharSequence symbol;
    private java.lang.CharSequence text;
    private long transactId;
    private java.lang.CharSequence parentOrderId;
    private java.lang.CharSequence settlementType;
    private java.lang.CharSequence futSettleprivate;
    private java.lang.CharSequence symbolSfx;
    private float parentOrderQuantity;
    private java.lang.CharSequence tradeCurrencyCountry;
    private java.lang.CharSequence tradeprivate;
    private java.lang.CharSequence execBroker;
    private java.lang.CharSequence openClose;
    private java.lang.CharSequence processCode;
    private java.lang.CharSequence origSide;
    private float netPrice;
    private java.lang.CharSequence clientId;
    private boolean reportToExchange;
    private float leavesQuantity;
    private java.lang.CharSequence securityType;
    private java.lang.CharSequence settleBroker;
    private java.util.List<java.lang.CharSequence> securityExchange;
    private java.lang.CharSequence maturityMonthYear;
    private java.lang.CharSequence maturityDay;
    private int putOrCall;
    private float strikePrice;
    private java.lang.CharSequence exerciseType;
    private java.lang.CharSequence ocaInstrumentType;
    private float spread;
    private float contractMultiplier;
    private java.lang.CharSequence underlyingSecurityExchange;
    private java.lang.CharSequence underlyingSymbol;
    private java.lang.CharSequence underlyingMaturityMonthYear;
    private java.lang.CharSequence underlyingMaturityDay;
    private float underlyingContractMultiplier;
    private java.lang.CharSequence trader;
    private java.lang.CharSequence enteredBy;
    private java.lang.CharSequence instrumentCountry;
    private java.lang.CharSequence settleCurrency;
    private java.lang.CharSequence instrumentCurrency;
    private java.lang.CharSequence instrumentName;
    private float instrCurrencyFxRate;
    private java.lang.CharSequence instrCurrencyFxRateCalc;
    private java.lang.CharSequence strategy;
    private java.lang.CharSequence nonDeliverableForward;
    private float mainPrice;
    private long interestRate;
    private long openPrivate;
    private long closePrivate;
    private java.lang.CharSequence customRiskClass;
    private java.lang.CharSequence customSubBook;
    private java.lang.CharSequence customStrategy;
    private java.lang.CharSequence customCountry;
    private java.lang.CharSequence customCounterParty;
    private java.lang.CharSequence customFrm;
    private java.lang.CharSequence customSalesBroker;
    private java.lang.CharSequence commFlag;
    private java.lang.CharSequence initialMargin;
    private java.lang.CharSequence collateralFlag;
    private java.lang.CharSequence fundFamily;
    private java.lang.CharSequence familyAllocInfo;
    private java.lang.CharSequence custodianAccount;
    private java.lang.CharSequence businessUnit;
    private java.lang.CharSequence subBusinessUnit;
    private java.lang.CharSequence fund;
    private int autoCreateFlag;
    private float positionBeforeTrade;
    private float originalFaceValue;
    private float loanAmount;
    private java.lang.CharSequence accrualDaysPerMonth;
    private java.lang.CharSequence accrualDaysPerYear;
    private java.lang.CharSequence endOfMonth;
    private java.lang.CharSequence fixingPrivate;
    private java.lang.CharSequence currentMargin;
    private java.lang.CharSequence tradeFlat;
    private float parentQuantity;
    private float underlyingQuantity;
    private java.lang.CharSequence customCrossCurrency;
    private java.lang.CharSequence customProductType;
    private java.lang.CharSequence transactionType;
    private java.lang.CharSequence newStrategy;
    private java.lang.CharSequence newPrimeBroker;
    private float customFundQuantity1;
    private java.lang.CharSequence customFundSide1;
    private float customFundQuantity2;
    private java.lang.CharSequence customFundSide3;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.avgPx)) {
        this.avgPx = data().deepCopy(fields()[0].schema(), other.avgPx);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.comission)) {
        this.comission = data().deepCopy(fields()[1].schema(), other.comission);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.commType)) {
        this.commType = data().deepCopy(fields()[2].schema(), other.commType);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.currency)) {
        this.currency = data().deepCopy(fields()[3].schema(), other.currency);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.execId)) {
        this.execId = data().deepCopy(fields()[4].schema(), other.execId);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.execRefId)) {
        this.execRefId = data().deepCopy(fields()[5].schema(), other.execRefId);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.execTransactiontype)) {
        this.execTransactiontype = data().deepCopy(fields()[6].schema(), other.execTransactiontype);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.execType)) {
        this.execType = data().deepCopy(fields()[7].schema(), other.execType);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.idSource)) {
        this.idSource = data().deepCopy(fields()[8].schema(), other.idSource);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.lastCapacity)) {
        this.lastCapacity = data().deepCopy(fields()[9].schema(), other.lastCapacity);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.lastMkt)) {
        this.lastMkt = data().deepCopy(fields()[10].schema(), other.lastMkt);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.lastPx)) {
        this.lastPx = data().deepCopy(fields()[11].schema(), other.lastPx);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.lastShares)) {
        this.lastShares = data().deepCopy(fields()[12].schema(), other.lastShares);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
      if (isValidValue(fields()[13], other.msgSeqNum)) {
        this.msgSeqNum = data().deepCopy(fields()[13].schema(), other.msgSeqNum);
        fieldSetFlags()[13] = other.fieldSetFlags()[13];
      }
      if (isValidValue(fields()[14], other.orderId)) {
        this.orderId = data().deepCopy(fields()[14].schema(), other.orderId);
        fieldSetFlags()[14] = other.fieldSetFlags()[14];
      }
      if (isValidValue(fields()[15], other.orderQuantity)) {
        this.orderQuantity = data().deepCopy(fields()[15].schema(), other.orderQuantity);
        fieldSetFlags()[15] = other.fieldSetFlags()[15];
      }
      if (isValidValue(fields()[16], other.orderStatus)) {
        this.orderStatus = data().deepCopy(fields()[16].schema(), other.orderStatus);
        fieldSetFlags()[16] = other.fieldSetFlags()[16];
      }
      if (isValidValue(fields()[17], other.origCiOrderId)) {
        this.origCiOrderId = data().deepCopy(fields()[17].schema(), other.origCiOrderId);
        fieldSetFlags()[17] = other.fieldSetFlags()[17];
      }
      if (isValidValue(fields()[18], other.posDupFlag)) {
        this.posDupFlag = data().deepCopy(fields()[18].schema(), other.posDupFlag);
        fieldSetFlags()[18] = other.fieldSetFlags()[18];
      }
      if (isValidValue(fields()[19], other.price)) {
        this.price = data().deepCopy(fields()[19].schema(), other.price);
        fieldSetFlags()[19] = other.fieldSetFlags()[19];
      }
      if (isValidValue(fields()[20], other.securityId)) {
        this.securityId = data().deepCopy(fields()[20].schema(), other.securityId);
        fieldSetFlags()[20] = other.fieldSetFlags()[20];
      }
      if (isValidValue(fields()[21], other.side)) {
        this.side = data().deepCopy(fields()[21].schema(), other.side);
        fieldSetFlags()[21] = other.fieldSetFlags()[21];
      }
      if (isValidValue(fields()[22], other.symbol)) {
        this.symbol = data().deepCopy(fields()[22].schema(), other.symbol);
        fieldSetFlags()[22] = other.fieldSetFlags()[22];
      }
      if (isValidValue(fields()[23], other.text)) {
        this.text = data().deepCopy(fields()[23].schema(), other.text);
        fieldSetFlags()[23] = other.fieldSetFlags()[23];
      }
      if (isValidValue(fields()[24], other.transactId)) {
        this.transactId = data().deepCopy(fields()[24].schema(), other.transactId);
        fieldSetFlags()[24] = other.fieldSetFlags()[24];
      }
      if (isValidValue(fields()[25], other.parentOrderId)) {
        this.parentOrderId = data().deepCopy(fields()[25].schema(), other.parentOrderId);
        fieldSetFlags()[25] = other.fieldSetFlags()[25];
      }
      if (isValidValue(fields()[26], other.settlementType)) {
        this.settlementType = data().deepCopy(fields()[26].schema(), other.settlementType);
        fieldSetFlags()[26] = other.fieldSetFlags()[26];
      }
      if (isValidValue(fields()[27], other.futSettleprivate)) {
        this.futSettleprivate = data().deepCopy(fields()[27].schema(), other.futSettleprivate);
        fieldSetFlags()[27] = other.fieldSetFlags()[27];
      }
      if (isValidValue(fields()[28], other.symbolSfx)) {
        this.symbolSfx = data().deepCopy(fields()[28].schema(), other.symbolSfx);
        fieldSetFlags()[28] = other.fieldSetFlags()[28];
      }
      if (isValidValue(fields()[29], other.parentOrderQuantity)) {
        this.parentOrderQuantity = data().deepCopy(fields()[29].schema(), other.parentOrderQuantity);
        fieldSetFlags()[29] = other.fieldSetFlags()[29];
      }
      if (isValidValue(fields()[30], other.tradeCurrencyCountry)) {
        this.tradeCurrencyCountry = data().deepCopy(fields()[30].schema(), other.tradeCurrencyCountry);
        fieldSetFlags()[30] = other.fieldSetFlags()[30];
      }
      if (isValidValue(fields()[31], other.tradeprivate)) {
        this.tradeprivate = data().deepCopy(fields()[31].schema(), other.tradeprivate);
        fieldSetFlags()[31] = other.fieldSetFlags()[31];
      }
      if (isValidValue(fields()[32], other.execBroker)) {
        this.execBroker = data().deepCopy(fields()[32].schema(), other.execBroker);
        fieldSetFlags()[32] = other.fieldSetFlags()[32];
      }
      if (isValidValue(fields()[33], other.openClose)) {
        this.openClose = data().deepCopy(fields()[33].schema(), other.openClose);
        fieldSetFlags()[33] = other.fieldSetFlags()[33];
      }
      if (isValidValue(fields()[34], other.processCode)) {
        this.processCode = data().deepCopy(fields()[34].schema(), other.processCode);
        fieldSetFlags()[34] = other.fieldSetFlags()[34];
      }
      if (isValidValue(fields()[35], other.origSide)) {
        this.origSide = data().deepCopy(fields()[35].schema(), other.origSide);
        fieldSetFlags()[35] = other.fieldSetFlags()[35];
      }
      if (isValidValue(fields()[36], other.netPrice)) {
        this.netPrice = data().deepCopy(fields()[36].schema(), other.netPrice);
        fieldSetFlags()[36] = other.fieldSetFlags()[36];
      }
      if (isValidValue(fields()[37], other.clientId)) {
        this.clientId = data().deepCopy(fields()[37].schema(), other.clientId);
        fieldSetFlags()[37] = other.fieldSetFlags()[37];
      }
      if (isValidValue(fields()[38], other.reportToExchange)) {
        this.reportToExchange = data().deepCopy(fields()[38].schema(), other.reportToExchange);
        fieldSetFlags()[38] = other.fieldSetFlags()[38];
      }
      if (isValidValue(fields()[39], other.leavesQuantity)) {
        this.leavesQuantity = data().deepCopy(fields()[39].schema(), other.leavesQuantity);
        fieldSetFlags()[39] = other.fieldSetFlags()[39];
      }
      if (isValidValue(fields()[40], other.securityType)) {
        this.securityType = data().deepCopy(fields()[40].schema(), other.securityType);
        fieldSetFlags()[40] = other.fieldSetFlags()[40];
      }
      if (isValidValue(fields()[41], other.settleBroker)) {
        this.settleBroker = data().deepCopy(fields()[41].schema(), other.settleBroker);
        fieldSetFlags()[41] = other.fieldSetFlags()[41];
      }
      if (isValidValue(fields()[42], other.securityExchange)) {
        this.securityExchange = data().deepCopy(fields()[42].schema(), other.securityExchange);
        fieldSetFlags()[42] = other.fieldSetFlags()[42];
      }
      if (isValidValue(fields()[43], other.maturityMonthYear)) {
        this.maturityMonthYear = data().deepCopy(fields()[43].schema(), other.maturityMonthYear);
        fieldSetFlags()[43] = other.fieldSetFlags()[43];
      }
      if (isValidValue(fields()[44], other.maturityDay)) {
        this.maturityDay = data().deepCopy(fields()[44].schema(), other.maturityDay);
        fieldSetFlags()[44] = other.fieldSetFlags()[44];
      }
      if (isValidValue(fields()[45], other.putOrCall)) {
        this.putOrCall = data().deepCopy(fields()[45].schema(), other.putOrCall);
        fieldSetFlags()[45] = other.fieldSetFlags()[45];
      }
      if (isValidValue(fields()[46], other.strikePrice)) {
        this.strikePrice = data().deepCopy(fields()[46].schema(), other.strikePrice);
        fieldSetFlags()[46] = other.fieldSetFlags()[46];
      }
      if (isValidValue(fields()[47], other.exerciseType)) {
        this.exerciseType = data().deepCopy(fields()[47].schema(), other.exerciseType);
        fieldSetFlags()[47] = other.fieldSetFlags()[47];
      }
      if (isValidValue(fields()[48], other.ocaInstrumentType)) {
        this.ocaInstrumentType = data().deepCopy(fields()[48].schema(), other.ocaInstrumentType);
        fieldSetFlags()[48] = other.fieldSetFlags()[48];
      }
      if (isValidValue(fields()[49], other.spread)) {
        this.spread = data().deepCopy(fields()[49].schema(), other.spread);
        fieldSetFlags()[49] = other.fieldSetFlags()[49];
      }
      if (isValidValue(fields()[50], other.contractMultiplier)) {
        this.contractMultiplier = data().deepCopy(fields()[50].schema(), other.contractMultiplier);
        fieldSetFlags()[50] = other.fieldSetFlags()[50];
      }
      if (isValidValue(fields()[51], other.underlyingSecurityExchange)) {
        this.underlyingSecurityExchange = data().deepCopy(fields()[51].schema(), other.underlyingSecurityExchange);
        fieldSetFlags()[51] = other.fieldSetFlags()[51];
      }
      if (isValidValue(fields()[52], other.underlyingSymbol)) {
        this.underlyingSymbol = data().deepCopy(fields()[52].schema(), other.underlyingSymbol);
        fieldSetFlags()[52] = other.fieldSetFlags()[52];
      }
      if (isValidValue(fields()[53], other.underlyingMaturityMonthYear)) {
        this.underlyingMaturityMonthYear = data().deepCopy(fields()[53].schema(), other.underlyingMaturityMonthYear);
        fieldSetFlags()[53] = other.fieldSetFlags()[53];
      }
      if (isValidValue(fields()[54], other.underlyingMaturityDay)) {
        this.underlyingMaturityDay = data().deepCopy(fields()[54].schema(), other.underlyingMaturityDay);
        fieldSetFlags()[54] = other.fieldSetFlags()[54];
      }
      if (isValidValue(fields()[55], other.underlyingContractMultiplier)) {
        this.underlyingContractMultiplier = data().deepCopy(fields()[55].schema(), other.underlyingContractMultiplier);
        fieldSetFlags()[55] = other.fieldSetFlags()[55];
      }
      if (isValidValue(fields()[56], other.trader)) {
        this.trader = data().deepCopy(fields()[56].schema(), other.trader);
        fieldSetFlags()[56] = other.fieldSetFlags()[56];
      }
      if (isValidValue(fields()[57], other.enteredBy)) {
        this.enteredBy = data().deepCopy(fields()[57].schema(), other.enteredBy);
        fieldSetFlags()[57] = other.fieldSetFlags()[57];
      }
      if (isValidValue(fields()[58], other.instrumentCountry)) {
        this.instrumentCountry = data().deepCopy(fields()[58].schema(), other.instrumentCountry);
        fieldSetFlags()[58] = other.fieldSetFlags()[58];
      }
      if (isValidValue(fields()[59], other.settleCurrency)) {
        this.settleCurrency = data().deepCopy(fields()[59].schema(), other.settleCurrency);
        fieldSetFlags()[59] = other.fieldSetFlags()[59];
      }
      if (isValidValue(fields()[60], other.instrumentCurrency)) {
        this.instrumentCurrency = data().deepCopy(fields()[60].schema(), other.instrumentCurrency);
        fieldSetFlags()[60] = other.fieldSetFlags()[60];
      }
      if (isValidValue(fields()[61], other.instrumentName)) {
        this.instrumentName = data().deepCopy(fields()[61].schema(), other.instrumentName);
        fieldSetFlags()[61] = other.fieldSetFlags()[61];
      }
      if (isValidValue(fields()[62], other.instrCurrencyFxRate)) {
        this.instrCurrencyFxRate = data().deepCopy(fields()[62].schema(), other.instrCurrencyFxRate);
        fieldSetFlags()[62] = other.fieldSetFlags()[62];
      }
      if (isValidValue(fields()[63], other.instrCurrencyFxRateCalc)) {
        this.instrCurrencyFxRateCalc = data().deepCopy(fields()[63].schema(), other.instrCurrencyFxRateCalc);
        fieldSetFlags()[63] = other.fieldSetFlags()[63];
      }
      if (isValidValue(fields()[64], other.strategy)) {
        this.strategy = data().deepCopy(fields()[64].schema(), other.strategy);
        fieldSetFlags()[64] = other.fieldSetFlags()[64];
      }
      if (isValidValue(fields()[65], other.nonDeliverableForward)) {
        this.nonDeliverableForward = data().deepCopy(fields()[65].schema(), other.nonDeliverableForward);
        fieldSetFlags()[65] = other.fieldSetFlags()[65];
      }
      if (isValidValue(fields()[66], other.mainPrice)) {
        this.mainPrice = data().deepCopy(fields()[66].schema(), other.mainPrice);
        fieldSetFlags()[66] = other.fieldSetFlags()[66];
      }
      if (isValidValue(fields()[67], other.interestRate)) {
        this.interestRate = data().deepCopy(fields()[67].schema(), other.interestRate);
        fieldSetFlags()[67] = other.fieldSetFlags()[67];
      }
      if (isValidValue(fields()[68], other.openPrivate)) {
        this.openPrivate = data().deepCopy(fields()[68].schema(), other.openPrivate);
        fieldSetFlags()[68] = other.fieldSetFlags()[68];
      }
      if (isValidValue(fields()[69], other.closePrivate)) {
        this.closePrivate = data().deepCopy(fields()[69].schema(), other.closePrivate);
        fieldSetFlags()[69] = other.fieldSetFlags()[69];
      }
      if (isValidValue(fields()[70], other.customRiskClass)) {
        this.customRiskClass = data().deepCopy(fields()[70].schema(), other.customRiskClass);
        fieldSetFlags()[70] = other.fieldSetFlags()[70];
      }
      if (isValidValue(fields()[71], other.customSubBook)) {
        this.customSubBook = data().deepCopy(fields()[71].schema(), other.customSubBook);
        fieldSetFlags()[71] = other.fieldSetFlags()[71];
      }
      if (isValidValue(fields()[72], other.customStrategy)) {
        this.customStrategy = data().deepCopy(fields()[72].schema(), other.customStrategy);
        fieldSetFlags()[72] = other.fieldSetFlags()[72];
      }
      if (isValidValue(fields()[73], other.customCountry)) {
        this.customCountry = data().deepCopy(fields()[73].schema(), other.customCountry);
        fieldSetFlags()[73] = other.fieldSetFlags()[73];
      }
      if (isValidValue(fields()[74], other.customCounterParty)) {
        this.customCounterParty = data().deepCopy(fields()[74].schema(), other.customCounterParty);
        fieldSetFlags()[74] = other.fieldSetFlags()[74];
      }
      if (isValidValue(fields()[75], other.customFrm)) {
        this.customFrm = data().deepCopy(fields()[75].schema(), other.customFrm);
        fieldSetFlags()[75] = other.fieldSetFlags()[75];
      }
      if (isValidValue(fields()[76], other.customSalesBroker)) {
        this.customSalesBroker = data().deepCopy(fields()[76].schema(), other.customSalesBroker);
        fieldSetFlags()[76] = other.fieldSetFlags()[76];
      }
      if (isValidValue(fields()[77], other.commFlag)) {
        this.commFlag = data().deepCopy(fields()[77].schema(), other.commFlag);
        fieldSetFlags()[77] = other.fieldSetFlags()[77];
      }
      if (isValidValue(fields()[78], other.initialMargin)) {
        this.initialMargin = data().deepCopy(fields()[78].schema(), other.initialMargin);
        fieldSetFlags()[78] = other.fieldSetFlags()[78];
      }
      if (isValidValue(fields()[79], other.collateralFlag)) {
        this.collateralFlag = data().deepCopy(fields()[79].schema(), other.collateralFlag);
        fieldSetFlags()[79] = other.fieldSetFlags()[79];
      }
      if (isValidValue(fields()[80], other.fundFamily)) {
        this.fundFamily = data().deepCopy(fields()[80].schema(), other.fundFamily);
        fieldSetFlags()[80] = other.fieldSetFlags()[80];
      }
      if (isValidValue(fields()[81], other.familyAllocInfo)) {
        this.familyAllocInfo = data().deepCopy(fields()[81].schema(), other.familyAllocInfo);
        fieldSetFlags()[81] = other.fieldSetFlags()[81];
      }
      if (isValidValue(fields()[82], other.custodianAccount)) {
        this.custodianAccount = data().deepCopy(fields()[82].schema(), other.custodianAccount);
        fieldSetFlags()[82] = other.fieldSetFlags()[82];
      }
      if (isValidValue(fields()[83], other.businessUnit)) {
        this.businessUnit = data().deepCopy(fields()[83].schema(), other.businessUnit);
        fieldSetFlags()[83] = other.fieldSetFlags()[83];
      }
      if (isValidValue(fields()[84], other.subBusinessUnit)) {
        this.subBusinessUnit = data().deepCopy(fields()[84].schema(), other.subBusinessUnit);
        fieldSetFlags()[84] = other.fieldSetFlags()[84];
      }
      if (isValidValue(fields()[85], other.fund)) {
        this.fund = data().deepCopy(fields()[85].schema(), other.fund);
        fieldSetFlags()[85] = other.fieldSetFlags()[85];
      }
      if (isValidValue(fields()[86], other.autoCreateFlag)) {
        this.autoCreateFlag = data().deepCopy(fields()[86].schema(), other.autoCreateFlag);
        fieldSetFlags()[86] = other.fieldSetFlags()[86];
      }
      if (isValidValue(fields()[87], other.positionBeforeTrade)) {
        this.positionBeforeTrade = data().deepCopy(fields()[87].schema(), other.positionBeforeTrade);
        fieldSetFlags()[87] = other.fieldSetFlags()[87];
      }
      if (isValidValue(fields()[88], other.originalFaceValue)) {
        this.originalFaceValue = data().deepCopy(fields()[88].schema(), other.originalFaceValue);
        fieldSetFlags()[88] = other.fieldSetFlags()[88];
      }
      if (isValidValue(fields()[89], other.loanAmount)) {
        this.loanAmount = data().deepCopy(fields()[89].schema(), other.loanAmount);
        fieldSetFlags()[89] = other.fieldSetFlags()[89];
      }
      if (isValidValue(fields()[90], other.accrualDaysPerMonth)) {
        this.accrualDaysPerMonth = data().deepCopy(fields()[90].schema(), other.accrualDaysPerMonth);
        fieldSetFlags()[90] = other.fieldSetFlags()[90];
      }
      if (isValidValue(fields()[91], other.accrualDaysPerYear)) {
        this.accrualDaysPerYear = data().deepCopy(fields()[91].schema(), other.accrualDaysPerYear);
        fieldSetFlags()[91] = other.fieldSetFlags()[91];
      }
      if (isValidValue(fields()[92], other.endOfMonth)) {
        this.endOfMonth = data().deepCopy(fields()[92].schema(), other.endOfMonth);
        fieldSetFlags()[92] = other.fieldSetFlags()[92];
      }
      if (isValidValue(fields()[93], other.fixingPrivate)) {
        this.fixingPrivate = data().deepCopy(fields()[93].schema(), other.fixingPrivate);
        fieldSetFlags()[93] = other.fieldSetFlags()[93];
      }
      if (isValidValue(fields()[94], other.currentMargin)) {
        this.currentMargin = data().deepCopy(fields()[94].schema(), other.currentMargin);
        fieldSetFlags()[94] = other.fieldSetFlags()[94];
      }
      if (isValidValue(fields()[95], other.tradeFlat)) {
        this.tradeFlat = data().deepCopy(fields()[95].schema(), other.tradeFlat);
        fieldSetFlags()[95] = other.fieldSetFlags()[95];
      }
      if (isValidValue(fields()[96], other.parentQuantity)) {
        this.parentQuantity = data().deepCopy(fields()[96].schema(), other.parentQuantity);
        fieldSetFlags()[96] = other.fieldSetFlags()[96];
      }
      if (isValidValue(fields()[97], other.underlyingQuantity)) {
        this.underlyingQuantity = data().deepCopy(fields()[97].schema(), other.underlyingQuantity);
        fieldSetFlags()[97] = other.fieldSetFlags()[97];
      }
      if (isValidValue(fields()[98], other.customCrossCurrency)) {
        this.customCrossCurrency = data().deepCopy(fields()[98].schema(), other.customCrossCurrency);
        fieldSetFlags()[98] = other.fieldSetFlags()[98];
      }
      if (isValidValue(fields()[99], other.customProductType)) {
        this.customProductType = data().deepCopy(fields()[99].schema(), other.customProductType);
        fieldSetFlags()[99] = other.fieldSetFlags()[99];
      }
      if (isValidValue(fields()[100], other.transactionType)) {
        this.transactionType = data().deepCopy(fields()[100].schema(), other.transactionType);
        fieldSetFlags()[100] = other.fieldSetFlags()[100];
      }
      if (isValidValue(fields()[101], other.newStrategy)) {
        this.newStrategy = data().deepCopy(fields()[101].schema(), other.newStrategy);
        fieldSetFlags()[101] = other.fieldSetFlags()[101];
      }
      if (isValidValue(fields()[102], other.newPrimeBroker)) {
        this.newPrimeBroker = data().deepCopy(fields()[102].schema(), other.newPrimeBroker);
        fieldSetFlags()[102] = other.fieldSetFlags()[102];
      }
      if (isValidValue(fields()[103], other.customFundQuantity1)) {
        this.customFundQuantity1 = data().deepCopy(fields()[103].schema(), other.customFundQuantity1);
        fieldSetFlags()[103] = other.fieldSetFlags()[103];
      }
      if (isValidValue(fields()[104], other.customFundSide1)) {
        this.customFundSide1 = data().deepCopy(fields()[104].schema(), other.customFundSide1);
        fieldSetFlags()[104] = other.fieldSetFlags()[104];
      }
      if (isValidValue(fields()[105], other.customFundQuantity2)) {
        this.customFundQuantity2 = data().deepCopy(fields()[105].schema(), other.customFundQuantity2);
        fieldSetFlags()[105] = other.fieldSetFlags()[105];
      }
      if (isValidValue(fields()[106], other.customFundSide3)) {
        this.customFundSide3 = data().deepCopy(fields()[106].schema(), other.customFundSide3);
        fieldSetFlags()[106] = other.fieldSetFlags()[106];
      }
    }

    /**
     * Creates a Builder by copying an existing LargeExampleAvro instance
     * @param other The existing instance to copy.
     */
    private Builder(org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.avgPx)) {
        this.avgPx = data().deepCopy(fields()[0].schema(), other.avgPx);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.comission)) {
        this.comission = data().deepCopy(fields()[1].schema(), other.comission);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.commType)) {
        this.commType = data().deepCopy(fields()[2].schema(), other.commType);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.currency)) {
        this.currency = data().deepCopy(fields()[3].schema(), other.currency);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.execId)) {
        this.execId = data().deepCopy(fields()[4].schema(), other.execId);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.execRefId)) {
        this.execRefId = data().deepCopy(fields()[5].schema(), other.execRefId);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.execTransactiontype)) {
        this.execTransactiontype = data().deepCopy(fields()[6].schema(), other.execTransactiontype);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.execType)) {
        this.execType = data().deepCopy(fields()[7].schema(), other.execType);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.idSource)) {
        this.idSource = data().deepCopy(fields()[8].schema(), other.idSource);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.lastCapacity)) {
        this.lastCapacity = data().deepCopy(fields()[9].schema(), other.lastCapacity);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.lastMkt)) {
        this.lastMkt = data().deepCopy(fields()[10].schema(), other.lastMkt);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.lastPx)) {
        this.lastPx = data().deepCopy(fields()[11].schema(), other.lastPx);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.lastShares)) {
        this.lastShares = data().deepCopy(fields()[12].schema(), other.lastShares);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.msgSeqNum)) {
        this.msgSeqNum = data().deepCopy(fields()[13].schema(), other.msgSeqNum);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.orderId)) {
        this.orderId = data().deepCopy(fields()[14].schema(), other.orderId);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.orderQuantity)) {
        this.orderQuantity = data().deepCopy(fields()[15].schema(), other.orderQuantity);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.orderStatus)) {
        this.orderStatus = data().deepCopy(fields()[16].schema(), other.orderStatus);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.origCiOrderId)) {
        this.origCiOrderId = data().deepCopy(fields()[17].schema(), other.origCiOrderId);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.posDupFlag)) {
        this.posDupFlag = data().deepCopy(fields()[18].schema(), other.posDupFlag);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.price)) {
        this.price = data().deepCopy(fields()[19].schema(), other.price);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.securityId)) {
        this.securityId = data().deepCopy(fields()[20].schema(), other.securityId);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.side)) {
        this.side = data().deepCopy(fields()[21].schema(), other.side);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.symbol)) {
        this.symbol = data().deepCopy(fields()[22].schema(), other.symbol);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.text)) {
        this.text = data().deepCopy(fields()[23].schema(), other.text);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.transactId)) {
        this.transactId = data().deepCopy(fields()[24].schema(), other.transactId);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.parentOrderId)) {
        this.parentOrderId = data().deepCopy(fields()[25].schema(), other.parentOrderId);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.settlementType)) {
        this.settlementType = data().deepCopy(fields()[26].schema(), other.settlementType);
        fieldSetFlags()[26] = true;
      }
      if (isValidValue(fields()[27], other.futSettleprivate)) {
        this.futSettleprivate = data().deepCopy(fields()[27].schema(), other.futSettleprivate);
        fieldSetFlags()[27] = true;
      }
      if (isValidValue(fields()[28], other.symbolSfx)) {
        this.symbolSfx = data().deepCopy(fields()[28].schema(), other.symbolSfx);
        fieldSetFlags()[28] = true;
      }
      if (isValidValue(fields()[29], other.parentOrderQuantity)) {
        this.parentOrderQuantity = data().deepCopy(fields()[29].schema(), other.parentOrderQuantity);
        fieldSetFlags()[29] = true;
      }
      if (isValidValue(fields()[30], other.tradeCurrencyCountry)) {
        this.tradeCurrencyCountry = data().deepCopy(fields()[30].schema(), other.tradeCurrencyCountry);
        fieldSetFlags()[30] = true;
      }
      if (isValidValue(fields()[31], other.tradeprivate)) {
        this.tradeprivate = data().deepCopy(fields()[31].schema(), other.tradeprivate);
        fieldSetFlags()[31] = true;
      }
      if (isValidValue(fields()[32], other.execBroker)) {
        this.execBroker = data().deepCopy(fields()[32].schema(), other.execBroker);
        fieldSetFlags()[32] = true;
      }
      if (isValidValue(fields()[33], other.openClose)) {
        this.openClose = data().deepCopy(fields()[33].schema(), other.openClose);
        fieldSetFlags()[33] = true;
      }
      if (isValidValue(fields()[34], other.processCode)) {
        this.processCode = data().deepCopy(fields()[34].schema(), other.processCode);
        fieldSetFlags()[34] = true;
      }
      if (isValidValue(fields()[35], other.origSide)) {
        this.origSide = data().deepCopy(fields()[35].schema(), other.origSide);
        fieldSetFlags()[35] = true;
      }
      if (isValidValue(fields()[36], other.netPrice)) {
        this.netPrice = data().deepCopy(fields()[36].schema(), other.netPrice);
        fieldSetFlags()[36] = true;
      }
      if (isValidValue(fields()[37], other.clientId)) {
        this.clientId = data().deepCopy(fields()[37].schema(), other.clientId);
        fieldSetFlags()[37] = true;
      }
      if (isValidValue(fields()[38], other.reportToExchange)) {
        this.reportToExchange = data().deepCopy(fields()[38].schema(), other.reportToExchange);
        fieldSetFlags()[38] = true;
      }
      if (isValidValue(fields()[39], other.leavesQuantity)) {
        this.leavesQuantity = data().deepCopy(fields()[39].schema(), other.leavesQuantity);
        fieldSetFlags()[39] = true;
      }
      if (isValidValue(fields()[40], other.securityType)) {
        this.securityType = data().deepCopy(fields()[40].schema(), other.securityType);
        fieldSetFlags()[40] = true;
      }
      if (isValidValue(fields()[41], other.settleBroker)) {
        this.settleBroker = data().deepCopy(fields()[41].schema(), other.settleBroker);
        fieldSetFlags()[41] = true;
      }
      if (isValidValue(fields()[42], other.securityExchange)) {
        this.securityExchange = data().deepCopy(fields()[42].schema(), other.securityExchange);
        fieldSetFlags()[42] = true;
      }
      if (isValidValue(fields()[43], other.maturityMonthYear)) {
        this.maturityMonthYear = data().deepCopy(fields()[43].schema(), other.maturityMonthYear);
        fieldSetFlags()[43] = true;
      }
      if (isValidValue(fields()[44], other.maturityDay)) {
        this.maturityDay = data().deepCopy(fields()[44].schema(), other.maturityDay);
        fieldSetFlags()[44] = true;
      }
      if (isValidValue(fields()[45], other.putOrCall)) {
        this.putOrCall = data().deepCopy(fields()[45].schema(), other.putOrCall);
        fieldSetFlags()[45] = true;
      }
      if (isValidValue(fields()[46], other.strikePrice)) {
        this.strikePrice = data().deepCopy(fields()[46].schema(), other.strikePrice);
        fieldSetFlags()[46] = true;
      }
      if (isValidValue(fields()[47], other.exerciseType)) {
        this.exerciseType = data().deepCopy(fields()[47].schema(), other.exerciseType);
        fieldSetFlags()[47] = true;
      }
      if (isValidValue(fields()[48], other.ocaInstrumentType)) {
        this.ocaInstrumentType = data().deepCopy(fields()[48].schema(), other.ocaInstrumentType);
        fieldSetFlags()[48] = true;
      }
      if (isValidValue(fields()[49], other.spread)) {
        this.spread = data().deepCopy(fields()[49].schema(), other.spread);
        fieldSetFlags()[49] = true;
      }
      if (isValidValue(fields()[50], other.contractMultiplier)) {
        this.contractMultiplier = data().deepCopy(fields()[50].schema(), other.contractMultiplier);
        fieldSetFlags()[50] = true;
      }
      if (isValidValue(fields()[51], other.underlyingSecurityExchange)) {
        this.underlyingSecurityExchange = data().deepCopy(fields()[51].schema(), other.underlyingSecurityExchange);
        fieldSetFlags()[51] = true;
      }
      if (isValidValue(fields()[52], other.underlyingSymbol)) {
        this.underlyingSymbol = data().deepCopy(fields()[52].schema(), other.underlyingSymbol);
        fieldSetFlags()[52] = true;
      }
      if (isValidValue(fields()[53], other.underlyingMaturityMonthYear)) {
        this.underlyingMaturityMonthYear = data().deepCopy(fields()[53].schema(), other.underlyingMaturityMonthYear);
        fieldSetFlags()[53] = true;
      }
      if (isValidValue(fields()[54], other.underlyingMaturityDay)) {
        this.underlyingMaturityDay = data().deepCopy(fields()[54].schema(), other.underlyingMaturityDay);
        fieldSetFlags()[54] = true;
      }
      if (isValidValue(fields()[55], other.underlyingContractMultiplier)) {
        this.underlyingContractMultiplier = data().deepCopy(fields()[55].schema(), other.underlyingContractMultiplier);
        fieldSetFlags()[55] = true;
      }
      if (isValidValue(fields()[56], other.trader)) {
        this.trader = data().deepCopy(fields()[56].schema(), other.trader);
        fieldSetFlags()[56] = true;
      }
      if (isValidValue(fields()[57], other.enteredBy)) {
        this.enteredBy = data().deepCopy(fields()[57].schema(), other.enteredBy);
        fieldSetFlags()[57] = true;
      }
      if (isValidValue(fields()[58], other.instrumentCountry)) {
        this.instrumentCountry = data().deepCopy(fields()[58].schema(), other.instrumentCountry);
        fieldSetFlags()[58] = true;
      }
      if (isValidValue(fields()[59], other.settleCurrency)) {
        this.settleCurrency = data().deepCopy(fields()[59].schema(), other.settleCurrency);
        fieldSetFlags()[59] = true;
      }
      if (isValidValue(fields()[60], other.instrumentCurrency)) {
        this.instrumentCurrency = data().deepCopy(fields()[60].schema(), other.instrumentCurrency);
        fieldSetFlags()[60] = true;
      }
      if (isValidValue(fields()[61], other.instrumentName)) {
        this.instrumentName = data().deepCopy(fields()[61].schema(), other.instrumentName);
        fieldSetFlags()[61] = true;
      }
      if (isValidValue(fields()[62], other.instrCurrencyFxRate)) {
        this.instrCurrencyFxRate = data().deepCopy(fields()[62].schema(), other.instrCurrencyFxRate);
        fieldSetFlags()[62] = true;
      }
      if (isValidValue(fields()[63], other.instrCurrencyFxRateCalc)) {
        this.instrCurrencyFxRateCalc = data().deepCopy(fields()[63].schema(), other.instrCurrencyFxRateCalc);
        fieldSetFlags()[63] = true;
      }
      if (isValidValue(fields()[64], other.strategy)) {
        this.strategy = data().deepCopy(fields()[64].schema(), other.strategy);
        fieldSetFlags()[64] = true;
      }
      if (isValidValue(fields()[65], other.nonDeliverableForward)) {
        this.nonDeliverableForward = data().deepCopy(fields()[65].schema(), other.nonDeliverableForward);
        fieldSetFlags()[65] = true;
      }
      if (isValidValue(fields()[66], other.mainPrice)) {
        this.mainPrice = data().deepCopy(fields()[66].schema(), other.mainPrice);
        fieldSetFlags()[66] = true;
      }
      if (isValidValue(fields()[67], other.interestRate)) {
        this.interestRate = data().deepCopy(fields()[67].schema(), other.interestRate);
        fieldSetFlags()[67] = true;
      }
      if (isValidValue(fields()[68], other.openPrivate)) {
        this.openPrivate = data().deepCopy(fields()[68].schema(), other.openPrivate);
        fieldSetFlags()[68] = true;
      }
      if (isValidValue(fields()[69], other.closePrivate)) {
        this.closePrivate = data().deepCopy(fields()[69].schema(), other.closePrivate);
        fieldSetFlags()[69] = true;
      }
      if (isValidValue(fields()[70], other.customRiskClass)) {
        this.customRiskClass = data().deepCopy(fields()[70].schema(), other.customRiskClass);
        fieldSetFlags()[70] = true;
      }
      if (isValidValue(fields()[71], other.customSubBook)) {
        this.customSubBook = data().deepCopy(fields()[71].schema(), other.customSubBook);
        fieldSetFlags()[71] = true;
      }
      if (isValidValue(fields()[72], other.customStrategy)) {
        this.customStrategy = data().deepCopy(fields()[72].schema(), other.customStrategy);
        fieldSetFlags()[72] = true;
      }
      if (isValidValue(fields()[73], other.customCountry)) {
        this.customCountry = data().deepCopy(fields()[73].schema(), other.customCountry);
        fieldSetFlags()[73] = true;
      }
      if (isValidValue(fields()[74], other.customCounterParty)) {
        this.customCounterParty = data().deepCopy(fields()[74].schema(), other.customCounterParty);
        fieldSetFlags()[74] = true;
      }
      if (isValidValue(fields()[75], other.customFrm)) {
        this.customFrm = data().deepCopy(fields()[75].schema(), other.customFrm);
        fieldSetFlags()[75] = true;
      }
      if (isValidValue(fields()[76], other.customSalesBroker)) {
        this.customSalesBroker = data().deepCopy(fields()[76].schema(), other.customSalesBroker);
        fieldSetFlags()[76] = true;
      }
      if (isValidValue(fields()[77], other.commFlag)) {
        this.commFlag = data().deepCopy(fields()[77].schema(), other.commFlag);
        fieldSetFlags()[77] = true;
      }
      if (isValidValue(fields()[78], other.initialMargin)) {
        this.initialMargin = data().deepCopy(fields()[78].schema(), other.initialMargin);
        fieldSetFlags()[78] = true;
      }
      if (isValidValue(fields()[79], other.collateralFlag)) {
        this.collateralFlag = data().deepCopy(fields()[79].schema(), other.collateralFlag);
        fieldSetFlags()[79] = true;
      }
      if (isValidValue(fields()[80], other.fundFamily)) {
        this.fundFamily = data().deepCopy(fields()[80].schema(), other.fundFamily);
        fieldSetFlags()[80] = true;
      }
      if (isValidValue(fields()[81], other.familyAllocInfo)) {
        this.familyAllocInfo = data().deepCopy(fields()[81].schema(), other.familyAllocInfo);
        fieldSetFlags()[81] = true;
      }
      if (isValidValue(fields()[82], other.custodianAccount)) {
        this.custodianAccount = data().deepCopy(fields()[82].schema(), other.custodianAccount);
        fieldSetFlags()[82] = true;
      }
      if (isValidValue(fields()[83], other.businessUnit)) {
        this.businessUnit = data().deepCopy(fields()[83].schema(), other.businessUnit);
        fieldSetFlags()[83] = true;
      }
      if (isValidValue(fields()[84], other.subBusinessUnit)) {
        this.subBusinessUnit = data().deepCopy(fields()[84].schema(), other.subBusinessUnit);
        fieldSetFlags()[84] = true;
      }
      if (isValidValue(fields()[85], other.fund)) {
        this.fund = data().deepCopy(fields()[85].schema(), other.fund);
        fieldSetFlags()[85] = true;
      }
      if (isValidValue(fields()[86], other.autoCreateFlag)) {
        this.autoCreateFlag = data().deepCopy(fields()[86].schema(), other.autoCreateFlag);
        fieldSetFlags()[86] = true;
      }
      if (isValidValue(fields()[87], other.positionBeforeTrade)) {
        this.positionBeforeTrade = data().deepCopy(fields()[87].schema(), other.positionBeforeTrade);
        fieldSetFlags()[87] = true;
      }
      if (isValidValue(fields()[88], other.originalFaceValue)) {
        this.originalFaceValue = data().deepCopy(fields()[88].schema(), other.originalFaceValue);
        fieldSetFlags()[88] = true;
      }
      if (isValidValue(fields()[89], other.loanAmount)) {
        this.loanAmount = data().deepCopy(fields()[89].schema(), other.loanAmount);
        fieldSetFlags()[89] = true;
      }
      if (isValidValue(fields()[90], other.accrualDaysPerMonth)) {
        this.accrualDaysPerMonth = data().deepCopy(fields()[90].schema(), other.accrualDaysPerMonth);
        fieldSetFlags()[90] = true;
      }
      if (isValidValue(fields()[91], other.accrualDaysPerYear)) {
        this.accrualDaysPerYear = data().deepCopy(fields()[91].schema(), other.accrualDaysPerYear);
        fieldSetFlags()[91] = true;
      }
      if (isValidValue(fields()[92], other.endOfMonth)) {
        this.endOfMonth = data().deepCopy(fields()[92].schema(), other.endOfMonth);
        fieldSetFlags()[92] = true;
      }
      if (isValidValue(fields()[93], other.fixingPrivate)) {
        this.fixingPrivate = data().deepCopy(fields()[93].schema(), other.fixingPrivate);
        fieldSetFlags()[93] = true;
      }
      if (isValidValue(fields()[94], other.currentMargin)) {
        this.currentMargin = data().deepCopy(fields()[94].schema(), other.currentMargin);
        fieldSetFlags()[94] = true;
      }
      if (isValidValue(fields()[95], other.tradeFlat)) {
        this.tradeFlat = data().deepCopy(fields()[95].schema(), other.tradeFlat);
        fieldSetFlags()[95] = true;
      }
      if (isValidValue(fields()[96], other.parentQuantity)) {
        this.parentQuantity = data().deepCopy(fields()[96].schema(), other.parentQuantity);
        fieldSetFlags()[96] = true;
      }
      if (isValidValue(fields()[97], other.underlyingQuantity)) {
        this.underlyingQuantity = data().deepCopy(fields()[97].schema(), other.underlyingQuantity);
        fieldSetFlags()[97] = true;
      }
      if (isValidValue(fields()[98], other.customCrossCurrency)) {
        this.customCrossCurrency = data().deepCopy(fields()[98].schema(), other.customCrossCurrency);
        fieldSetFlags()[98] = true;
      }
      if (isValidValue(fields()[99], other.customProductType)) {
        this.customProductType = data().deepCopy(fields()[99].schema(), other.customProductType);
        fieldSetFlags()[99] = true;
      }
      if (isValidValue(fields()[100], other.transactionType)) {
        this.transactionType = data().deepCopy(fields()[100].schema(), other.transactionType);
        fieldSetFlags()[100] = true;
      }
      if (isValidValue(fields()[101], other.newStrategy)) {
        this.newStrategy = data().deepCopy(fields()[101].schema(), other.newStrategy);
        fieldSetFlags()[101] = true;
      }
      if (isValidValue(fields()[102], other.newPrimeBroker)) {
        this.newPrimeBroker = data().deepCopy(fields()[102].schema(), other.newPrimeBroker);
        fieldSetFlags()[102] = true;
      }
      if (isValidValue(fields()[103], other.customFundQuantity1)) {
        this.customFundQuantity1 = data().deepCopy(fields()[103].schema(), other.customFundQuantity1);
        fieldSetFlags()[103] = true;
      }
      if (isValidValue(fields()[104], other.customFundSide1)) {
        this.customFundSide1 = data().deepCopy(fields()[104].schema(), other.customFundSide1);
        fieldSetFlags()[104] = true;
      }
      if (isValidValue(fields()[105], other.customFundQuantity2)) {
        this.customFundQuantity2 = data().deepCopy(fields()[105].schema(), other.customFundQuantity2);
        fieldSetFlags()[105] = true;
      }
      if (isValidValue(fields()[106], other.customFundSide3)) {
        this.customFundSide3 = data().deepCopy(fields()[106].schema(), other.customFundSide3);
        fieldSetFlags()[106] = true;
      }
    }

    /**
      * Gets the value of the 'avgPx' field.
      * @return The value.
      */
    public float getAvgPx() {
      return avgPx;
    }


    /**
      * Sets the value of the 'avgPx' field.
      * @param value The value of 'avgPx'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setAvgPx(float value) {
      validate(fields()[0], value);
      this.avgPx = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'avgPx' field has been set.
      * @return True if the 'avgPx' field has been set, false otherwise.
      */
    public boolean hasAvgPx() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'avgPx' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearAvgPx() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'comission' field.
      * @return The value.
      */
    public float getComission() {
      return comission;
    }


    /**
      * Sets the value of the 'comission' field.
      * @param value The value of 'comission'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setComission(float value) {
      validate(fields()[1], value);
      this.comission = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'comission' field has been set.
      * @return True if the 'comission' field has been set, false otherwise.
      */
    public boolean hasComission() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'comission' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearComission() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'commType' field.
      * @return The value.
      */
    public java.lang.CharSequence getCommType() {
      return commType;
    }


    /**
      * Sets the value of the 'commType' field.
      * @param value The value of 'commType'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setCommType(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.commType = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'commType' field has been set.
      * @return True if the 'commType' field has been set, false otherwise.
      */
    public boolean hasCommType() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'commType' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearCommType() {
      commType = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'currency' field.
      * @return The value.
      */
    public java.lang.CharSequence getCurrency() {
      return currency;
    }


    /**
      * Sets the value of the 'currency' field.
      * @param value The value of 'currency'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setCurrency(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.currency = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'currency' field has been set.
      * @return True if the 'currency' field has been set, false otherwise.
      */
    public boolean hasCurrency() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'currency' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearCurrency() {
      currency = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'execId' field.
      * @return The value.
      */
    public java.lang.CharSequence getExecId() {
      return execId;
    }


    /**
      * Sets the value of the 'execId' field.
      * @param value The value of 'execId'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setExecId(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.execId = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'execId' field has been set.
      * @return True if the 'execId' field has been set, false otherwise.
      */
    public boolean hasExecId() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'execId' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearExecId() {
      execId = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'execRefId' field.
      * @return The value.
      */
    public java.lang.CharSequence getExecRefId() {
      return execRefId;
    }


    /**
      * Sets the value of the 'execRefId' field.
      * @param value The value of 'execRefId'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setExecRefId(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.execRefId = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'execRefId' field has been set.
      * @return True if the 'execRefId' field has been set, false otherwise.
      */
    public boolean hasExecRefId() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'execRefId' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearExecRefId() {
      execRefId = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'execTransactiontype' field.
      * @return The value.
      */
    public java.lang.CharSequence getExecTransactiontype() {
      return execTransactiontype;
    }


    /**
      * Sets the value of the 'execTransactiontype' field.
      * @param value The value of 'execTransactiontype'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setExecTransactiontype(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.execTransactiontype = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'execTransactiontype' field has been set.
      * @return True if the 'execTransactiontype' field has been set, false otherwise.
      */
    public boolean hasExecTransactiontype() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'execTransactiontype' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearExecTransactiontype() {
      execTransactiontype = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'execType' field.
      * @return The value.
      */
    public java.lang.CharSequence getExecType() {
      return execType;
    }


    /**
      * Sets the value of the 'execType' field.
      * @param value The value of 'execType'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setExecType(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.execType = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'execType' field has been set.
      * @return True if the 'execType' field has been set, false otherwise.
      */
    public boolean hasExecType() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'execType' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearExecType() {
      execType = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'idSource' field.
      * @return The value.
      */
    public java.lang.CharSequence getIdSource() {
      return idSource;
    }


    /**
      * Sets the value of the 'idSource' field.
      * @param value The value of 'idSource'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setIdSource(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.idSource = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'idSource' field has been set.
      * @return True if the 'idSource' field has been set, false otherwise.
      */
    public boolean hasIdSource() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'idSource' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearIdSource() {
      idSource = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'lastCapacity' field.
      * @return The value.
      */
    public java.lang.CharSequence getLastCapacity() {
      return lastCapacity;
    }


    /**
      * Sets the value of the 'lastCapacity' field.
      * @param value The value of 'lastCapacity'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setLastCapacity(java.lang.CharSequence value) {
      validate(fields()[9], value);
      this.lastCapacity = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'lastCapacity' field has been set.
      * @return True if the 'lastCapacity' field has been set, false otherwise.
      */
    public boolean hasLastCapacity() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'lastCapacity' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearLastCapacity() {
      lastCapacity = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'lastMkt' field.
      * @return The value.
      */
    public java.lang.CharSequence getLastMkt() {
      return lastMkt;
    }


    /**
      * Sets the value of the 'lastMkt' field.
      * @param value The value of 'lastMkt'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setLastMkt(java.lang.CharSequence value) {
      validate(fields()[10], value);
      this.lastMkt = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'lastMkt' field has been set.
      * @return True if the 'lastMkt' field has been set, false otherwise.
      */
    public boolean hasLastMkt() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'lastMkt' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearLastMkt() {
      lastMkt = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'lastPx' field.
      * @return The value.
      */
    public float getLastPx() {
      return lastPx;
    }


    /**
      * Sets the value of the 'lastPx' field.
      * @param value The value of 'lastPx'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setLastPx(float value) {
      validate(fields()[11], value);
      this.lastPx = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'lastPx' field has been set.
      * @return True if the 'lastPx' field has been set, false otherwise.
      */
    public boolean hasLastPx() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'lastPx' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearLastPx() {
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'lastShares' field.
      * @return The value.
      */
    public float getLastShares() {
      return lastShares;
    }


    /**
      * Sets the value of the 'lastShares' field.
      * @param value The value of 'lastShares'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setLastShares(float value) {
      validate(fields()[12], value);
      this.lastShares = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'lastShares' field has been set.
      * @return True if the 'lastShares' field has been set, false otherwise.
      */
    public boolean hasLastShares() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'lastShares' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearLastShares() {
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'msgSeqNum' field.
      * @return The value.
      */
    public int getMsgSeqNum() {
      return msgSeqNum;
    }


    /**
      * Sets the value of the 'msgSeqNum' field.
      * @param value The value of 'msgSeqNum'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setMsgSeqNum(int value) {
      validate(fields()[13], value);
      this.msgSeqNum = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'msgSeqNum' field has been set.
      * @return True if the 'msgSeqNum' field has been set, false otherwise.
      */
    public boolean hasMsgSeqNum() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'msgSeqNum' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearMsgSeqNum() {
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'orderId' field.
      * @return The value.
      */
    public java.lang.CharSequence getOrderId() {
      return orderId;
    }


    /**
      * Sets the value of the 'orderId' field.
      * @param value The value of 'orderId'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setOrderId(java.lang.CharSequence value) {
      validate(fields()[14], value);
      this.orderId = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'orderId' field has been set.
      * @return True if the 'orderId' field has been set, false otherwise.
      */
    public boolean hasOrderId() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'orderId' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearOrderId() {
      orderId = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'orderQuantity' field.
      * @return The value.
      */
    public float getOrderQuantity() {
      return orderQuantity;
    }


    /**
      * Sets the value of the 'orderQuantity' field.
      * @param value The value of 'orderQuantity'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setOrderQuantity(float value) {
      validate(fields()[15], value);
      this.orderQuantity = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'orderQuantity' field has been set.
      * @return True if the 'orderQuantity' field has been set, false otherwise.
      */
    public boolean hasOrderQuantity() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'orderQuantity' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearOrderQuantity() {
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'orderStatus' field.
      * @return The value.
      */
    public java.lang.CharSequence getOrderStatus() {
      return orderStatus;
    }


    /**
      * Sets the value of the 'orderStatus' field.
      * @param value The value of 'orderStatus'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setOrderStatus(java.lang.CharSequence value) {
      validate(fields()[16], value);
      this.orderStatus = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'orderStatus' field has been set.
      * @return True if the 'orderStatus' field has been set, false otherwise.
      */
    public boolean hasOrderStatus() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'orderStatus' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearOrderStatus() {
      orderStatus = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'origCiOrderId' field.
      * @return The value.
      */
    public java.lang.CharSequence getOrigCiOrderId() {
      return origCiOrderId;
    }


    /**
      * Sets the value of the 'origCiOrderId' field.
      * @param value The value of 'origCiOrderId'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setOrigCiOrderId(java.lang.CharSequence value) {
      validate(fields()[17], value);
      this.origCiOrderId = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'origCiOrderId' field has been set.
      * @return True if the 'origCiOrderId' field has been set, false otherwise.
      */
    public boolean hasOrigCiOrderId() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'origCiOrderId' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearOrigCiOrderId() {
      origCiOrderId = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'posDupFlag' field.
      * @return The value.
      */
    public java.lang.CharSequence getPosDupFlag() {
      return posDupFlag;
    }


    /**
      * Sets the value of the 'posDupFlag' field.
      * @param value The value of 'posDupFlag'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setPosDupFlag(java.lang.CharSequence value) {
      validate(fields()[18], value);
      this.posDupFlag = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'posDupFlag' field has been set.
      * @return True if the 'posDupFlag' field has been set, false otherwise.
      */
    public boolean hasPosDupFlag() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'posDupFlag' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearPosDupFlag() {
      posDupFlag = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'price' field.
      * @return The value.
      */
    public float getPrice() {
      return price;
    }


    /**
      * Sets the value of the 'price' field.
      * @param value The value of 'price'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setPrice(float value) {
      validate(fields()[19], value);
      this.price = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
      * Checks whether the 'price' field has been set.
      * @return True if the 'price' field has been set, false otherwise.
      */
    public boolean hasPrice() {
      return fieldSetFlags()[19];
    }


    /**
      * Clears the value of the 'price' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearPrice() {
      fieldSetFlags()[19] = false;
      return this;
    }

    /**
      * Gets the value of the 'securityId' field.
      * @return The value.
      */
    public java.lang.CharSequence getSecurityId() {
      return securityId;
    }


    /**
      * Sets the value of the 'securityId' field.
      * @param value The value of 'securityId'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setSecurityId(java.lang.CharSequence value) {
      validate(fields()[20], value);
      this.securityId = value;
      fieldSetFlags()[20] = true;
      return this;
    }

    /**
      * Checks whether the 'securityId' field has been set.
      * @return True if the 'securityId' field has been set, false otherwise.
      */
    public boolean hasSecurityId() {
      return fieldSetFlags()[20];
    }


    /**
      * Clears the value of the 'securityId' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearSecurityId() {
      securityId = null;
      fieldSetFlags()[20] = false;
      return this;
    }

    /**
      * Gets the value of the 'side' field.
      * @return The value.
      */
    public java.lang.CharSequence getSide() {
      return side;
    }


    /**
      * Sets the value of the 'side' field.
      * @param value The value of 'side'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setSide(java.lang.CharSequence value) {
      validate(fields()[21], value);
      this.side = value;
      fieldSetFlags()[21] = true;
      return this;
    }

    /**
      * Checks whether the 'side' field has been set.
      * @return True if the 'side' field has been set, false otherwise.
      */
    public boolean hasSide() {
      return fieldSetFlags()[21];
    }


    /**
      * Clears the value of the 'side' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearSide() {
      side = null;
      fieldSetFlags()[21] = false;
      return this;
    }

    /**
      * Gets the value of the 'symbol' field.
      * @return The value.
      */
    public java.lang.CharSequence getSymbol() {
      return symbol;
    }


    /**
      * Sets the value of the 'symbol' field.
      * @param value The value of 'symbol'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setSymbol(java.lang.CharSequence value) {
      validate(fields()[22], value);
      this.symbol = value;
      fieldSetFlags()[22] = true;
      return this;
    }

    /**
      * Checks whether the 'symbol' field has been set.
      * @return True if the 'symbol' field has been set, false otherwise.
      */
    public boolean hasSymbol() {
      return fieldSetFlags()[22];
    }


    /**
      * Clears the value of the 'symbol' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearSymbol() {
      symbol = null;
      fieldSetFlags()[22] = false;
      return this;
    }

    /**
      * Gets the value of the 'text' field.
      * @return The value.
      */
    public java.lang.CharSequence getText() {
      return text;
    }


    /**
      * Sets the value of the 'text' field.
      * @param value The value of 'text'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setText(java.lang.CharSequence value) {
      validate(fields()[23], value);
      this.text = value;
      fieldSetFlags()[23] = true;
      return this;
    }

    /**
      * Checks whether the 'text' field has been set.
      * @return True if the 'text' field has been set, false otherwise.
      */
    public boolean hasText() {
      return fieldSetFlags()[23];
    }


    /**
      * Clears the value of the 'text' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearText() {
      text = null;
      fieldSetFlags()[23] = false;
      return this;
    }

    /**
      * Gets the value of the 'transactId' field.
      * @return The value.
      */
    public long getTransactId() {
      return transactId;
    }


    /**
      * Sets the value of the 'transactId' field.
      * @param value The value of 'transactId'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setTransactId(long value) {
      validate(fields()[24], value);
      this.transactId = value;
      fieldSetFlags()[24] = true;
      return this;
    }

    /**
      * Checks whether the 'transactId' field has been set.
      * @return True if the 'transactId' field has been set, false otherwise.
      */
    public boolean hasTransactId() {
      return fieldSetFlags()[24];
    }


    /**
      * Clears the value of the 'transactId' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearTransactId() {
      fieldSetFlags()[24] = false;
      return this;
    }

    /**
      * Gets the value of the 'parentOrderId' field.
      * @return The value.
      */
    public java.lang.CharSequence getParentOrderId() {
      return parentOrderId;
    }


    /**
      * Sets the value of the 'parentOrderId' field.
      * @param value The value of 'parentOrderId'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setParentOrderId(java.lang.CharSequence value) {
      validate(fields()[25], value);
      this.parentOrderId = value;
      fieldSetFlags()[25] = true;
      return this;
    }

    /**
      * Checks whether the 'parentOrderId' field has been set.
      * @return True if the 'parentOrderId' field has been set, false otherwise.
      */
    public boolean hasParentOrderId() {
      return fieldSetFlags()[25];
    }


    /**
      * Clears the value of the 'parentOrderId' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearParentOrderId() {
      parentOrderId = null;
      fieldSetFlags()[25] = false;
      return this;
    }

    /**
      * Gets the value of the 'settlementType' field.
      * @return The value.
      */
    public java.lang.CharSequence getSettlementType() {
      return settlementType;
    }


    /**
      * Sets the value of the 'settlementType' field.
      * @param value The value of 'settlementType'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setSettlementType(java.lang.CharSequence value) {
      validate(fields()[26], value);
      this.settlementType = value;
      fieldSetFlags()[26] = true;
      return this;
    }

    /**
      * Checks whether the 'settlementType' field has been set.
      * @return True if the 'settlementType' field has been set, false otherwise.
      */
    public boolean hasSettlementType() {
      return fieldSetFlags()[26];
    }


    /**
      * Clears the value of the 'settlementType' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearSettlementType() {
      settlementType = null;
      fieldSetFlags()[26] = false;
      return this;
    }

    /**
      * Gets the value of the 'futSettleprivate' field.
      * @return The value.
      */
    public java.lang.CharSequence getFutSettleprivate() {
      return futSettleprivate;
    }


    /**
      * Sets the value of the 'futSettleprivate' field.
      * @param value The value of 'futSettleprivate'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setFutSettleprivate(java.lang.CharSequence value) {
      validate(fields()[27], value);
      this.futSettleprivate = value;
      fieldSetFlags()[27] = true;
      return this;
    }

    /**
      * Checks whether the 'futSettleprivate' field has been set.
      * @return True if the 'futSettleprivate' field has been set, false otherwise.
      */
    public boolean hasFutSettleprivate() {
      return fieldSetFlags()[27];
    }


    /**
      * Clears the value of the 'futSettleprivate' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearFutSettleprivate() {
      futSettleprivate = null;
      fieldSetFlags()[27] = false;
      return this;
    }

    /**
      * Gets the value of the 'symbolSfx' field.
      * @return The value.
      */
    public java.lang.CharSequence getSymbolSfx() {
      return symbolSfx;
    }


    /**
      * Sets the value of the 'symbolSfx' field.
      * @param value The value of 'symbolSfx'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setSymbolSfx(java.lang.CharSequence value) {
      validate(fields()[28], value);
      this.symbolSfx = value;
      fieldSetFlags()[28] = true;
      return this;
    }

    /**
      * Checks whether the 'symbolSfx' field has been set.
      * @return True if the 'symbolSfx' field has been set, false otherwise.
      */
    public boolean hasSymbolSfx() {
      return fieldSetFlags()[28];
    }


    /**
      * Clears the value of the 'symbolSfx' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearSymbolSfx() {
      symbolSfx = null;
      fieldSetFlags()[28] = false;
      return this;
    }

    /**
      * Gets the value of the 'parentOrderQuantity' field.
      * @return The value.
      */
    public float getParentOrderQuantity() {
      return parentOrderQuantity;
    }


    /**
      * Sets the value of the 'parentOrderQuantity' field.
      * @param value The value of 'parentOrderQuantity'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setParentOrderQuantity(float value) {
      validate(fields()[29], value);
      this.parentOrderQuantity = value;
      fieldSetFlags()[29] = true;
      return this;
    }

    /**
      * Checks whether the 'parentOrderQuantity' field has been set.
      * @return True if the 'parentOrderQuantity' field has been set, false otherwise.
      */
    public boolean hasParentOrderQuantity() {
      return fieldSetFlags()[29];
    }


    /**
      * Clears the value of the 'parentOrderQuantity' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearParentOrderQuantity() {
      fieldSetFlags()[29] = false;
      return this;
    }

    /**
      * Gets the value of the 'tradeCurrencyCountry' field.
      * @return The value.
      */
    public java.lang.CharSequence getTradeCurrencyCountry() {
      return tradeCurrencyCountry;
    }


    /**
      * Sets the value of the 'tradeCurrencyCountry' field.
      * @param value The value of 'tradeCurrencyCountry'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setTradeCurrencyCountry(java.lang.CharSequence value) {
      validate(fields()[30], value);
      this.tradeCurrencyCountry = value;
      fieldSetFlags()[30] = true;
      return this;
    }

    /**
      * Checks whether the 'tradeCurrencyCountry' field has been set.
      * @return True if the 'tradeCurrencyCountry' field has been set, false otherwise.
      */
    public boolean hasTradeCurrencyCountry() {
      return fieldSetFlags()[30];
    }


    /**
      * Clears the value of the 'tradeCurrencyCountry' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearTradeCurrencyCountry() {
      tradeCurrencyCountry = null;
      fieldSetFlags()[30] = false;
      return this;
    }

    /**
      * Gets the value of the 'tradeprivate' field.
      * @return The value.
      */
    public java.lang.CharSequence getTradeprivate() {
      return tradeprivate;
    }


    /**
      * Sets the value of the 'tradeprivate' field.
      * @param value The value of 'tradeprivate'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setTradeprivate(java.lang.CharSequence value) {
      validate(fields()[31], value);
      this.tradeprivate = value;
      fieldSetFlags()[31] = true;
      return this;
    }

    /**
      * Checks whether the 'tradeprivate' field has been set.
      * @return True if the 'tradeprivate' field has been set, false otherwise.
      */
    public boolean hasTradeprivate() {
      return fieldSetFlags()[31];
    }


    /**
      * Clears the value of the 'tradeprivate' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearTradeprivate() {
      tradeprivate = null;
      fieldSetFlags()[31] = false;
      return this;
    }

    /**
      * Gets the value of the 'execBroker' field.
      * @return The value.
      */
    public java.lang.CharSequence getExecBroker() {
      return execBroker;
    }


    /**
      * Sets the value of the 'execBroker' field.
      * @param value The value of 'execBroker'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setExecBroker(java.lang.CharSequence value) {
      validate(fields()[32], value);
      this.execBroker = value;
      fieldSetFlags()[32] = true;
      return this;
    }

    /**
      * Checks whether the 'execBroker' field has been set.
      * @return True if the 'execBroker' field has been set, false otherwise.
      */
    public boolean hasExecBroker() {
      return fieldSetFlags()[32];
    }


    /**
      * Clears the value of the 'execBroker' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearExecBroker() {
      execBroker = null;
      fieldSetFlags()[32] = false;
      return this;
    }

    /**
      * Gets the value of the 'openClose' field.
      * @return The value.
      */
    public java.lang.CharSequence getOpenClose() {
      return openClose;
    }


    /**
      * Sets the value of the 'openClose' field.
      * @param value The value of 'openClose'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setOpenClose(java.lang.CharSequence value) {
      validate(fields()[33], value);
      this.openClose = value;
      fieldSetFlags()[33] = true;
      return this;
    }

    /**
      * Checks whether the 'openClose' field has been set.
      * @return True if the 'openClose' field has been set, false otherwise.
      */
    public boolean hasOpenClose() {
      return fieldSetFlags()[33];
    }


    /**
      * Clears the value of the 'openClose' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearOpenClose() {
      openClose = null;
      fieldSetFlags()[33] = false;
      return this;
    }

    /**
      * Gets the value of the 'processCode' field.
      * @return The value.
      */
    public java.lang.CharSequence getProcessCode() {
      return processCode;
    }


    /**
      * Sets the value of the 'processCode' field.
      * @param value The value of 'processCode'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setProcessCode(java.lang.CharSequence value) {
      validate(fields()[34], value);
      this.processCode = value;
      fieldSetFlags()[34] = true;
      return this;
    }

    /**
      * Checks whether the 'processCode' field has been set.
      * @return True if the 'processCode' field has been set, false otherwise.
      */
    public boolean hasProcessCode() {
      return fieldSetFlags()[34];
    }


    /**
      * Clears the value of the 'processCode' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearProcessCode() {
      processCode = null;
      fieldSetFlags()[34] = false;
      return this;
    }

    /**
      * Gets the value of the 'origSide' field.
      * @return The value.
      */
    public java.lang.CharSequence getOrigSide() {
      return origSide;
    }


    /**
      * Sets the value of the 'origSide' field.
      * @param value The value of 'origSide'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setOrigSide(java.lang.CharSequence value) {
      validate(fields()[35], value);
      this.origSide = value;
      fieldSetFlags()[35] = true;
      return this;
    }

    /**
      * Checks whether the 'origSide' field has been set.
      * @return True if the 'origSide' field has been set, false otherwise.
      */
    public boolean hasOrigSide() {
      return fieldSetFlags()[35];
    }


    /**
      * Clears the value of the 'origSide' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearOrigSide() {
      origSide = null;
      fieldSetFlags()[35] = false;
      return this;
    }

    /**
      * Gets the value of the 'netPrice' field.
      * @return The value.
      */
    public float getNetPrice() {
      return netPrice;
    }


    /**
      * Sets the value of the 'netPrice' field.
      * @param value The value of 'netPrice'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setNetPrice(float value) {
      validate(fields()[36], value);
      this.netPrice = value;
      fieldSetFlags()[36] = true;
      return this;
    }

    /**
      * Checks whether the 'netPrice' field has been set.
      * @return True if the 'netPrice' field has been set, false otherwise.
      */
    public boolean hasNetPrice() {
      return fieldSetFlags()[36];
    }


    /**
      * Clears the value of the 'netPrice' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearNetPrice() {
      fieldSetFlags()[36] = false;
      return this;
    }

    /**
      * Gets the value of the 'clientId' field.
      * @return The value.
      */
    public java.lang.CharSequence getClientId() {
      return clientId;
    }


    /**
      * Sets the value of the 'clientId' field.
      * @param value The value of 'clientId'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setClientId(java.lang.CharSequence value) {
      validate(fields()[37], value);
      this.clientId = value;
      fieldSetFlags()[37] = true;
      return this;
    }

    /**
      * Checks whether the 'clientId' field has been set.
      * @return True if the 'clientId' field has been set, false otherwise.
      */
    public boolean hasClientId() {
      return fieldSetFlags()[37];
    }


    /**
      * Clears the value of the 'clientId' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearClientId() {
      clientId = null;
      fieldSetFlags()[37] = false;
      return this;
    }

    /**
      * Gets the value of the 'reportToExchange' field.
      * @return The value.
      */
    public boolean getReportToExchange() {
      return reportToExchange;
    }


    /**
      * Sets the value of the 'reportToExchange' field.
      * @param value The value of 'reportToExchange'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setReportToExchange(boolean value) {
      validate(fields()[38], value);
      this.reportToExchange = value;
      fieldSetFlags()[38] = true;
      return this;
    }

    /**
      * Checks whether the 'reportToExchange' field has been set.
      * @return True if the 'reportToExchange' field has been set, false otherwise.
      */
    public boolean hasReportToExchange() {
      return fieldSetFlags()[38];
    }


    /**
      * Clears the value of the 'reportToExchange' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearReportToExchange() {
      fieldSetFlags()[38] = false;
      return this;
    }

    /**
      * Gets the value of the 'leavesQuantity' field.
      * @return The value.
      */
    public float getLeavesQuantity() {
      return leavesQuantity;
    }


    /**
      * Sets the value of the 'leavesQuantity' field.
      * @param value The value of 'leavesQuantity'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setLeavesQuantity(float value) {
      validate(fields()[39], value);
      this.leavesQuantity = value;
      fieldSetFlags()[39] = true;
      return this;
    }

    /**
      * Checks whether the 'leavesQuantity' field has been set.
      * @return True if the 'leavesQuantity' field has been set, false otherwise.
      */
    public boolean hasLeavesQuantity() {
      return fieldSetFlags()[39];
    }


    /**
      * Clears the value of the 'leavesQuantity' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearLeavesQuantity() {
      fieldSetFlags()[39] = false;
      return this;
    }

    /**
      * Gets the value of the 'securityType' field.
      * @return The value.
      */
    public java.lang.CharSequence getSecurityType() {
      return securityType;
    }


    /**
      * Sets the value of the 'securityType' field.
      * @param value The value of 'securityType'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setSecurityType(java.lang.CharSequence value) {
      validate(fields()[40], value);
      this.securityType = value;
      fieldSetFlags()[40] = true;
      return this;
    }

    /**
      * Checks whether the 'securityType' field has been set.
      * @return True if the 'securityType' field has been set, false otherwise.
      */
    public boolean hasSecurityType() {
      return fieldSetFlags()[40];
    }


    /**
      * Clears the value of the 'securityType' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearSecurityType() {
      securityType = null;
      fieldSetFlags()[40] = false;
      return this;
    }

    /**
      * Gets the value of the 'settleBroker' field.
      * @return The value.
      */
    public java.lang.CharSequence getSettleBroker() {
      return settleBroker;
    }


    /**
      * Sets the value of the 'settleBroker' field.
      * @param value The value of 'settleBroker'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setSettleBroker(java.lang.CharSequence value) {
      validate(fields()[41], value);
      this.settleBroker = value;
      fieldSetFlags()[41] = true;
      return this;
    }

    /**
      * Checks whether the 'settleBroker' field has been set.
      * @return True if the 'settleBroker' field has been set, false otherwise.
      */
    public boolean hasSettleBroker() {
      return fieldSetFlags()[41];
    }


    /**
      * Clears the value of the 'settleBroker' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearSettleBroker() {
      settleBroker = null;
      fieldSetFlags()[41] = false;
      return this;
    }

    /**
      * Gets the value of the 'securityExchange' field.
      * @return The value.
      */
    public java.util.List<java.lang.CharSequence> getSecurityExchange() {
      return securityExchange;
    }


    /**
      * Sets the value of the 'securityExchange' field.
      * @param value The value of 'securityExchange'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setSecurityExchange(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[42], value);
      this.securityExchange = value;
      fieldSetFlags()[42] = true;
      return this;
    }

    /**
      * Checks whether the 'securityExchange' field has been set.
      * @return True if the 'securityExchange' field has been set, false otherwise.
      */
    public boolean hasSecurityExchange() {
      return fieldSetFlags()[42];
    }


    /**
      * Clears the value of the 'securityExchange' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearSecurityExchange() {
      securityExchange = null;
      fieldSetFlags()[42] = false;
      return this;
    }

    /**
      * Gets the value of the 'maturityMonthYear' field.
      * @return The value.
      */
    public java.lang.CharSequence getMaturityMonthYear() {
      return maturityMonthYear;
    }


    /**
      * Sets the value of the 'maturityMonthYear' field.
      * @param value The value of 'maturityMonthYear'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setMaturityMonthYear(java.lang.CharSequence value) {
      validate(fields()[43], value);
      this.maturityMonthYear = value;
      fieldSetFlags()[43] = true;
      return this;
    }

    /**
      * Checks whether the 'maturityMonthYear' field has been set.
      * @return True if the 'maturityMonthYear' field has been set, false otherwise.
      */
    public boolean hasMaturityMonthYear() {
      return fieldSetFlags()[43];
    }


    /**
      * Clears the value of the 'maturityMonthYear' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearMaturityMonthYear() {
      maturityMonthYear = null;
      fieldSetFlags()[43] = false;
      return this;
    }

    /**
      * Gets the value of the 'maturityDay' field.
      * @return The value.
      */
    public java.lang.CharSequence getMaturityDay() {
      return maturityDay;
    }


    /**
      * Sets the value of the 'maturityDay' field.
      * @param value The value of 'maturityDay'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setMaturityDay(java.lang.CharSequence value) {
      validate(fields()[44], value);
      this.maturityDay = value;
      fieldSetFlags()[44] = true;
      return this;
    }

    /**
      * Checks whether the 'maturityDay' field has been set.
      * @return True if the 'maturityDay' field has been set, false otherwise.
      */
    public boolean hasMaturityDay() {
      return fieldSetFlags()[44];
    }


    /**
      * Clears the value of the 'maturityDay' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearMaturityDay() {
      maturityDay = null;
      fieldSetFlags()[44] = false;
      return this;
    }

    /**
      * Gets the value of the 'putOrCall' field.
      * @return The value.
      */
    public int getPutOrCall() {
      return putOrCall;
    }


    /**
      * Sets the value of the 'putOrCall' field.
      * @param value The value of 'putOrCall'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setPutOrCall(int value) {
      validate(fields()[45], value);
      this.putOrCall = value;
      fieldSetFlags()[45] = true;
      return this;
    }

    /**
      * Checks whether the 'putOrCall' field has been set.
      * @return True if the 'putOrCall' field has been set, false otherwise.
      */
    public boolean hasPutOrCall() {
      return fieldSetFlags()[45];
    }


    /**
      * Clears the value of the 'putOrCall' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearPutOrCall() {
      fieldSetFlags()[45] = false;
      return this;
    }

    /**
      * Gets the value of the 'strikePrice' field.
      * @return The value.
      */
    public float getStrikePrice() {
      return strikePrice;
    }


    /**
      * Sets the value of the 'strikePrice' field.
      * @param value The value of 'strikePrice'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setStrikePrice(float value) {
      validate(fields()[46], value);
      this.strikePrice = value;
      fieldSetFlags()[46] = true;
      return this;
    }

    /**
      * Checks whether the 'strikePrice' field has been set.
      * @return True if the 'strikePrice' field has been set, false otherwise.
      */
    public boolean hasStrikePrice() {
      return fieldSetFlags()[46];
    }


    /**
      * Clears the value of the 'strikePrice' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearStrikePrice() {
      fieldSetFlags()[46] = false;
      return this;
    }

    /**
      * Gets the value of the 'exerciseType' field.
      * @return The value.
      */
    public java.lang.CharSequence getExerciseType() {
      return exerciseType;
    }


    /**
      * Sets the value of the 'exerciseType' field.
      * @param value The value of 'exerciseType'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setExerciseType(java.lang.CharSequence value) {
      validate(fields()[47], value);
      this.exerciseType = value;
      fieldSetFlags()[47] = true;
      return this;
    }

    /**
      * Checks whether the 'exerciseType' field has been set.
      * @return True if the 'exerciseType' field has been set, false otherwise.
      */
    public boolean hasExerciseType() {
      return fieldSetFlags()[47];
    }


    /**
      * Clears the value of the 'exerciseType' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearExerciseType() {
      exerciseType = null;
      fieldSetFlags()[47] = false;
      return this;
    }

    /**
      * Gets the value of the 'ocaInstrumentType' field.
      * @return The value.
      */
    public java.lang.CharSequence getOcaInstrumentType() {
      return ocaInstrumentType;
    }


    /**
      * Sets the value of the 'ocaInstrumentType' field.
      * @param value The value of 'ocaInstrumentType'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setOcaInstrumentType(java.lang.CharSequence value) {
      validate(fields()[48], value);
      this.ocaInstrumentType = value;
      fieldSetFlags()[48] = true;
      return this;
    }

    /**
      * Checks whether the 'ocaInstrumentType' field has been set.
      * @return True if the 'ocaInstrumentType' field has been set, false otherwise.
      */
    public boolean hasOcaInstrumentType() {
      return fieldSetFlags()[48];
    }


    /**
      * Clears the value of the 'ocaInstrumentType' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearOcaInstrumentType() {
      ocaInstrumentType = null;
      fieldSetFlags()[48] = false;
      return this;
    }

    /**
      * Gets the value of the 'spread' field.
      * @return The value.
      */
    public float getSpread() {
      return spread;
    }


    /**
      * Sets the value of the 'spread' field.
      * @param value The value of 'spread'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setSpread(float value) {
      validate(fields()[49], value);
      this.spread = value;
      fieldSetFlags()[49] = true;
      return this;
    }

    /**
      * Checks whether the 'spread' field has been set.
      * @return True if the 'spread' field has been set, false otherwise.
      */
    public boolean hasSpread() {
      return fieldSetFlags()[49];
    }


    /**
      * Clears the value of the 'spread' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearSpread() {
      fieldSetFlags()[49] = false;
      return this;
    }

    /**
      * Gets the value of the 'contractMultiplier' field.
      * @return The value.
      */
    public float getContractMultiplier() {
      return contractMultiplier;
    }


    /**
      * Sets the value of the 'contractMultiplier' field.
      * @param value The value of 'contractMultiplier'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setContractMultiplier(float value) {
      validate(fields()[50], value);
      this.contractMultiplier = value;
      fieldSetFlags()[50] = true;
      return this;
    }

    /**
      * Checks whether the 'contractMultiplier' field has been set.
      * @return True if the 'contractMultiplier' field has been set, false otherwise.
      */
    public boolean hasContractMultiplier() {
      return fieldSetFlags()[50];
    }


    /**
      * Clears the value of the 'contractMultiplier' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearContractMultiplier() {
      fieldSetFlags()[50] = false;
      return this;
    }

    /**
      * Gets the value of the 'underlyingSecurityExchange' field.
      * @return The value.
      */
    public java.lang.CharSequence getUnderlyingSecurityExchange() {
      return underlyingSecurityExchange;
    }


    /**
      * Sets the value of the 'underlyingSecurityExchange' field.
      * @param value The value of 'underlyingSecurityExchange'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setUnderlyingSecurityExchange(java.lang.CharSequence value) {
      validate(fields()[51], value);
      this.underlyingSecurityExchange = value;
      fieldSetFlags()[51] = true;
      return this;
    }

    /**
      * Checks whether the 'underlyingSecurityExchange' field has been set.
      * @return True if the 'underlyingSecurityExchange' field has been set, false otherwise.
      */
    public boolean hasUnderlyingSecurityExchange() {
      return fieldSetFlags()[51];
    }


    /**
      * Clears the value of the 'underlyingSecurityExchange' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearUnderlyingSecurityExchange() {
      underlyingSecurityExchange = null;
      fieldSetFlags()[51] = false;
      return this;
    }

    /**
      * Gets the value of the 'underlyingSymbol' field.
      * @return The value.
      */
    public java.lang.CharSequence getUnderlyingSymbol() {
      return underlyingSymbol;
    }


    /**
      * Sets the value of the 'underlyingSymbol' field.
      * @param value The value of 'underlyingSymbol'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setUnderlyingSymbol(java.lang.CharSequence value) {
      validate(fields()[52], value);
      this.underlyingSymbol = value;
      fieldSetFlags()[52] = true;
      return this;
    }

    /**
      * Checks whether the 'underlyingSymbol' field has been set.
      * @return True if the 'underlyingSymbol' field has been set, false otherwise.
      */
    public boolean hasUnderlyingSymbol() {
      return fieldSetFlags()[52];
    }


    /**
      * Clears the value of the 'underlyingSymbol' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearUnderlyingSymbol() {
      underlyingSymbol = null;
      fieldSetFlags()[52] = false;
      return this;
    }

    /**
      * Gets the value of the 'underlyingMaturityMonthYear' field.
      * @return The value.
      */
    public java.lang.CharSequence getUnderlyingMaturityMonthYear() {
      return underlyingMaturityMonthYear;
    }


    /**
      * Sets the value of the 'underlyingMaturityMonthYear' field.
      * @param value The value of 'underlyingMaturityMonthYear'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setUnderlyingMaturityMonthYear(java.lang.CharSequence value) {
      validate(fields()[53], value);
      this.underlyingMaturityMonthYear = value;
      fieldSetFlags()[53] = true;
      return this;
    }

    /**
      * Checks whether the 'underlyingMaturityMonthYear' field has been set.
      * @return True if the 'underlyingMaturityMonthYear' field has been set, false otherwise.
      */
    public boolean hasUnderlyingMaturityMonthYear() {
      return fieldSetFlags()[53];
    }


    /**
      * Clears the value of the 'underlyingMaturityMonthYear' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearUnderlyingMaturityMonthYear() {
      underlyingMaturityMonthYear = null;
      fieldSetFlags()[53] = false;
      return this;
    }

    /**
      * Gets the value of the 'underlyingMaturityDay' field.
      * @return The value.
      */
    public java.lang.CharSequence getUnderlyingMaturityDay() {
      return underlyingMaturityDay;
    }


    /**
      * Sets the value of the 'underlyingMaturityDay' field.
      * @param value The value of 'underlyingMaturityDay'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setUnderlyingMaturityDay(java.lang.CharSequence value) {
      validate(fields()[54], value);
      this.underlyingMaturityDay = value;
      fieldSetFlags()[54] = true;
      return this;
    }

    /**
      * Checks whether the 'underlyingMaturityDay' field has been set.
      * @return True if the 'underlyingMaturityDay' field has been set, false otherwise.
      */
    public boolean hasUnderlyingMaturityDay() {
      return fieldSetFlags()[54];
    }


    /**
      * Clears the value of the 'underlyingMaturityDay' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearUnderlyingMaturityDay() {
      underlyingMaturityDay = null;
      fieldSetFlags()[54] = false;
      return this;
    }

    /**
      * Gets the value of the 'underlyingContractMultiplier' field.
      * @return The value.
      */
    public float getUnderlyingContractMultiplier() {
      return underlyingContractMultiplier;
    }


    /**
      * Sets the value of the 'underlyingContractMultiplier' field.
      * @param value The value of 'underlyingContractMultiplier'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setUnderlyingContractMultiplier(float value) {
      validate(fields()[55], value);
      this.underlyingContractMultiplier = value;
      fieldSetFlags()[55] = true;
      return this;
    }

    /**
      * Checks whether the 'underlyingContractMultiplier' field has been set.
      * @return True if the 'underlyingContractMultiplier' field has been set, false otherwise.
      */
    public boolean hasUnderlyingContractMultiplier() {
      return fieldSetFlags()[55];
    }


    /**
      * Clears the value of the 'underlyingContractMultiplier' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearUnderlyingContractMultiplier() {
      fieldSetFlags()[55] = false;
      return this;
    }

    /**
      * Gets the value of the 'trader' field.
      * @return The value.
      */
    public java.lang.CharSequence getTrader() {
      return trader;
    }


    /**
      * Sets the value of the 'trader' field.
      * @param value The value of 'trader'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setTrader(java.lang.CharSequence value) {
      validate(fields()[56], value);
      this.trader = value;
      fieldSetFlags()[56] = true;
      return this;
    }

    /**
      * Checks whether the 'trader' field has been set.
      * @return True if the 'trader' field has been set, false otherwise.
      */
    public boolean hasTrader() {
      return fieldSetFlags()[56];
    }


    /**
      * Clears the value of the 'trader' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearTrader() {
      trader = null;
      fieldSetFlags()[56] = false;
      return this;
    }

    /**
      * Gets the value of the 'enteredBy' field.
      * @return The value.
      */
    public java.lang.CharSequence getEnteredBy() {
      return enteredBy;
    }


    /**
      * Sets the value of the 'enteredBy' field.
      * @param value The value of 'enteredBy'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setEnteredBy(java.lang.CharSequence value) {
      validate(fields()[57], value);
      this.enteredBy = value;
      fieldSetFlags()[57] = true;
      return this;
    }

    /**
      * Checks whether the 'enteredBy' field has been set.
      * @return True if the 'enteredBy' field has been set, false otherwise.
      */
    public boolean hasEnteredBy() {
      return fieldSetFlags()[57];
    }


    /**
      * Clears the value of the 'enteredBy' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearEnteredBy() {
      enteredBy = null;
      fieldSetFlags()[57] = false;
      return this;
    }

    /**
      * Gets the value of the 'instrumentCountry' field.
      * @return The value.
      */
    public java.lang.CharSequence getInstrumentCountry() {
      return instrumentCountry;
    }


    /**
      * Sets the value of the 'instrumentCountry' field.
      * @param value The value of 'instrumentCountry'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setInstrumentCountry(java.lang.CharSequence value) {
      validate(fields()[58], value);
      this.instrumentCountry = value;
      fieldSetFlags()[58] = true;
      return this;
    }

    /**
      * Checks whether the 'instrumentCountry' field has been set.
      * @return True if the 'instrumentCountry' field has been set, false otherwise.
      */
    public boolean hasInstrumentCountry() {
      return fieldSetFlags()[58];
    }


    /**
      * Clears the value of the 'instrumentCountry' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearInstrumentCountry() {
      instrumentCountry = null;
      fieldSetFlags()[58] = false;
      return this;
    }

    /**
      * Gets the value of the 'settleCurrency' field.
      * @return The value.
      */
    public java.lang.CharSequence getSettleCurrency() {
      return settleCurrency;
    }


    /**
      * Sets the value of the 'settleCurrency' field.
      * @param value The value of 'settleCurrency'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setSettleCurrency(java.lang.CharSequence value) {
      validate(fields()[59], value);
      this.settleCurrency = value;
      fieldSetFlags()[59] = true;
      return this;
    }

    /**
      * Checks whether the 'settleCurrency' field has been set.
      * @return True if the 'settleCurrency' field has been set, false otherwise.
      */
    public boolean hasSettleCurrency() {
      return fieldSetFlags()[59];
    }


    /**
      * Clears the value of the 'settleCurrency' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearSettleCurrency() {
      settleCurrency = null;
      fieldSetFlags()[59] = false;
      return this;
    }

    /**
      * Gets the value of the 'instrumentCurrency' field.
      * @return The value.
      */
    public java.lang.CharSequence getInstrumentCurrency() {
      return instrumentCurrency;
    }


    /**
      * Sets the value of the 'instrumentCurrency' field.
      * @param value The value of 'instrumentCurrency'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setInstrumentCurrency(java.lang.CharSequence value) {
      validate(fields()[60], value);
      this.instrumentCurrency = value;
      fieldSetFlags()[60] = true;
      return this;
    }

    /**
      * Checks whether the 'instrumentCurrency' field has been set.
      * @return True if the 'instrumentCurrency' field has been set, false otherwise.
      */
    public boolean hasInstrumentCurrency() {
      return fieldSetFlags()[60];
    }


    /**
      * Clears the value of the 'instrumentCurrency' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearInstrumentCurrency() {
      instrumentCurrency = null;
      fieldSetFlags()[60] = false;
      return this;
    }

    /**
      * Gets the value of the 'instrumentName' field.
      * @return The value.
      */
    public java.lang.CharSequence getInstrumentName() {
      return instrumentName;
    }


    /**
      * Sets the value of the 'instrumentName' field.
      * @param value The value of 'instrumentName'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setInstrumentName(java.lang.CharSequence value) {
      validate(fields()[61], value);
      this.instrumentName = value;
      fieldSetFlags()[61] = true;
      return this;
    }

    /**
      * Checks whether the 'instrumentName' field has been set.
      * @return True if the 'instrumentName' field has been set, false otherwise.
      */
    public boolean hasInstrumentName() {
      return fieldSetFlags()[61];
    }


    /**
      * Clears the value of the 'instrumentName' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearInstrumentName() {
      instrumentName = null;
      fieldSetFlags()[61] = false;
      return this;
    }

    /**
      * Gets the value of the 'instrCurrencyFxRate' field.
      * @return The value.
      */
    public float getInstrCurrencyFxRate() {
      return instrCurrencyFxRate;
    }


    /**
      * Sets the value of the 'instrCurrencyFxRate' field.
      * @param value The value of 'instrCurrencyFxRate'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setInstrCurrencyFxRate(float value) {
      validate(fields()[62], value);
      this.instrCurrencyFxRate = value;
      fieldSetFlags()[62] = true;
      return this;
    }

    /**
      * Checks whether the 'instrCurrencyFxRate' field has been set.
      * @return True if the 'instrCurrencyFxRate' field has been set, false otherwise.
      */
    public boolean hasInstrCurrencyFxRate() {
      return fieldSetFlags()[62];
    }


    /**
      * Clears the value of the 'instrCurrencyFxRate' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearInstrCurrencyFxRate() {
      fieldSetFlags()[62] = false;
      return this;
    }

    /**
      * Gets the value of the 'instrCurrencyFxRateCalc' field.
      * @return The value.
      */
    public java.lang.CharSequence getInstrCurrencyFxRateCalc() {
      return instrCurrencyFxRateCalc;
    }


    /**
      * Sets the value of the 'instrCurrencyFxRateCalc' field.
      * @param value The value of 'instrCurrencyFxRateCalc'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setInstrCurrencyFxRateCalc(java.lang.CharSequence value) {
      validate(fields()[63], value);
      this.instrCurrencyFxRateCalc = value;
      fieldSetFlags()[63] = true;
      return this;
    }

    /**
      * Checks whether the 'instrCurrencyFxRateCalc' field has been set.
      * @return True if the 'instrCurrencyFxRateCalc' field has been set, false otherwise.
      */
    public boolean hasInstrCurrencyFxRateCalc() {
      return fieldSetFlags()[63];
    }


    /**
      * Clears the value of the 'instrCurrencyFxRateCalc' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearInstrCurrencyFxRateCalc() {
      instrCurrencyFxRateCalc = null;
      fieldSetFlags()[63] = false;
      return this;
    }

    /**
      * Gets the value of the 'strategy' field.
      * @return The value.
      */
    public java.lang.CharSequence getStrategy() {
      return strategy;
    }


    /**
      * Sets the value of the 'strategy' field.
      * @param value The value of 'strategy'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setStrategy(java.lang.CharSequence value) {
      validate(fields()[64], value);
      this.strategy = value;
      fieldSetFlags()[64] = true;
      return this;
    }

    /**
      * Checks whether the 'strategy' field has been set.
      * @return True if the 'strategy' field has been set, false otherwise.
      */
    public boolean hasStrategy() {
      return fieldSetFlags()[64];
    }


    /**
      * Clears the value of the 'strategy' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearStrategy() {
      strategy = null;
      fieldSetFlags()[64] = false;
      return this;
    }

    /**
      * Gets the value of the 'nonDeliverableForward' field.
      * @return The value.
      */
    public java.lang.CharSequence getNonDeliverableForward() {
      return nonDeliverableForward;
    }


    /**
      * Sets the value of the 'nonDeliverableForward' field.
      * @param value The value of 'nonDeliverableForward'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setNonDeliverableForward(java.lang.CharSequence value) {
      validate(fields()[65], value);
      this.nonDeliverableForward = value;
      fieldSetFlags()[65] = true;
      return this;
    }

    /**
      * Checks whether the 'nonDeliverableForward' field has been set.
      * @return True if the 'nonDeliverableForward' field has been set, false otherwise.
      */
    public boolean hasNonDeliverableForward() {
      return fieldSetFlags()[65];
    }


    /**
      * Clears the value of the 'nonDeliverableForward' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearNonDeliverableForward() {
      nonDeliverableForward = null;
      fieldSetFlags()[65] = false;
      return this;
    }

    /**
      * Gets the value of the 'mainPrice' field.
      * @return The value.
      */
    public float getMainPrice() {
      return mainPrice;
    }


    /**
      * Sets the value of the 'mainPrice' field.
      * @param value The value of 'mainPrice'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setMainPrice(float value) {
      validate(fields()[66], value);
      this.mainPrice = value;
      fieldSetFlags()[66] = true;
      return this;
    }

    /**
      * Checks whether the 'mainPrice' field has been set.
      * @return True if the 'mainPrice' field has been set, false otherwise.
      */
    public boolean hasMainPrice() {
      return fieldSetFlags()[66];
    }


    /**
      * Clears the value of the 'mainPrice' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearMainPrice() {
      fieldSetFlags()[66] = false;
      return this;
    }

    /**
      * Gets the value of the 'interestRate' field.
      * @return The value.
      */
    public long getInterestRate() {
      return interestRate;
    }


    /**
      * Sets the value of the 'interestRate' field.
      * @param value The value of 'interestRate'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setInterestRate(long value) {
      validate(fields()[67], value);
      this.interestRate = value;
      fieldSetFlags()[67] = true;
      return this;
    }

    /**
      * Checks whether the 'interestRate' field has been set.
      * @return True if the 'interestRate' field has been set, false otherwise.
      */
    public boolean hasInterestRate() {
      return fieldSetFlags()[67];
    }


    /**
      * Clears the value of the 'interestRate' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearInterestRate() {
      fieldSetFlags()[67] = false;
      return this;
    }

    /**
      * Gets the value of the 'openPrivate' field.
      * @return The value.
      */
    public long getOpenPrivate() {
      return openPrivate;
    }


    /**
      * Sets the value of the 'openPrivate' field.
      * @param value The value of 'openPrivate'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setOpenPrivate(long value) {
      validate(fields()[68], value);
      this.openPrivate = value;
      fieldSetFlags()[68] = true;
      return this;
    }

    /**
      * Checks whether the 'openPrivate' field has been set.
      * @return True if the 'openPrivate' field has been set, false otherwise.
      */
    public boolean hasOpenPrivate() {
      return fieldSetFlags()[68];
    }


    /**
      * Clears the value of the 'openPrivate' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearOpenPrivate() {
      fieldSetFlags()[68] = false;
      return this;
    }

    /**
      * Gets the value of the 'closePrivate' field.
      * @return The value.
      */
    public long getClosePrivate() {
      return closePrivate;
    }


    /**
      * Sets the value of the 'closePrivate' field.
      * @param value The value of 'closePrivate'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setClosePrivate(long value) {
      validate(fields()[69], value);
      this.closePrivate = value;
      fieldSetFlags()[69] = true;
      return this;
    }

    /**
      * Checks whether the 'closePrivate' field has been set.
      * @return True if the 'closePrivate' field has been set, false otherwise.
      */
    public boolean hasClosePrivate() {
      return fieldSetFlags()[69];
    }


    /**
      * Clears the value of the 'closePrivate' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearClosePrivate() {
      fieldSetFlags()[69] = false;
      return this;
    }

    /**
      * Gets the value of the 'customRiskClass' field.
      * @return The value.
      */
    public java.lang.CharSequence getCustomRiskClass() {
      return customRiskClass;
    }


    /**
      * Sets the value of the 'customRiskClass' field.
      * @param value The value of 'customRiskClass'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setCustomRiskClass(java.lang.CharSequence value) {
      validate(fields()[70], value);
      this.customRiskClass = value;
      fieldSetFlags()[70] = true;
      return this;
    }

    /**
      * Checks whether the 'customRiskClass' field has been set.
      * @return True if the 'customRiskClass' field has been set, false otherwise.
      */
    public boolean hasCustomRiskClass() {
      return fieldSetFlags()[70];
    }


    /**
      * Clears the value of the 'customRiskClass' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearCustomRiskClass() {
      customRiskClass = null;
      fieldSetFlags()[70] = false;
      return this;
    }

    /**
      * Gets the value of the 'customSubBook' field.
      * @return The value.
      */
    public java.lang.CharSequence getCustomSubBook() {
      return customSubBook;
    }


    /**
      * Sets the value of the 'customSubBook' field.
      * @param value The value of 'customSubBook'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setCustomSubBook(java.lang.CharSequence value) {
      validate(fields()[71], value);
      this.customSubBook = value;
      fieldSetFlags()[71] = true;
      return this;
    }

    /**
      * Checks whether the 'customSubBook' field has been set.
      * @return True if the 'customSubBook' field has been set, false otherwise.
      */
    public boolean hasCustomSubBook() {
      return fieldSetFlags()[71];
    }


    /**
      * Clears the value of the 'customSubBook' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearCustomSubBook() {
      customSubBook = null;
      fieldSetFlags()[71] = false;
      return this;
    }

    /**
      * Gets the value of the 'customStrategy' field.
      * @return The value.
      */
    public java.lang.CharSequence getCustomStrategy() {
      return customStrategy;
    }


    /**
      * Sets the value of the 'customStrategy' field.
      * @param value The value of 'customStrategy'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setCustomStrategy(java.lang.CharSequence value) {
      validate(fields()[72], value);
      this.customStrategy = value;
      fieldSetFlags()[72] = true;
      return this;
    }

    /**
      * Checks whether the 'customStrategy' field has been set.
      * @return True if the 'customStrategy' field has been set, false otherwise.
      */
    public boolean hasCustomStrategy() {
      return fieldSetFlags()[72];
    }


    /**
      * Clears the value of the 'customStrategy' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearCustomStrategy() {
      customStrategy = null;
      fieldSetFlags()[72] = false;
      return this;
    }

    /**
      * Gets the value of the 'customCountry' field.
      * @return The value.
      */
    public java.lang.CharSequence getCustomCountry() {
      return customCountry;
    }


    /**
      * Sets the value of the 'customCountry' field.
      * @param value The value of 'customCountry'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setCustomCountry(java.lang.CharSequence value) {
      validate(fields()[73], value);
      this.customCountry = value;
      fieldSetFlags()[73] = true;
      return this;
    }

    /**
      * Checks whether the 'customCountry' field has been set.
      * @return True if the 'customCountry' field has been set, false otherwise.
      */
    public boolean hasCustomCountry() {
      return fieldSetFlags()[73];
    }


    /**
      * Clears the value of the 'customCountry' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearCustomCountry() {
      customCountry = null;
      fieldSetFlags()[73] = false;
      return this;
    }

    /**
      * Gets the value of the 'customCounterParty' field.
      * @return The value.
      */
    public java.lang.CharSequence getCustomCounterParty() {
      return customCounterParty;
    }


    /**
      * Sets the value of the 'customCounterParty' field.
      * @param value The value of 'customCounterParty'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setCustomCounterParty(java.lang.CharSequence value) {
      validate(fields()[74], value);
      this.customCounterParty = value;
      fieldSetFlags()[74] = true;
      return this;
    }

    /**
      * Checks whether the 'customCounterParty' field has been set.
      * @return True if the 'customCounterParty' field has been set, false otherwise.
      */
    public boolean hasCustomCounterParty() {
      return fieldSetFlags()[74];
    }


    /**
      * Clears the value of the 'customCounterParty' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearCustomCounterParty() {
      customCounterParty = null;
      fieldSetFlags()[74] = false;
      return this;
    }

    /**
      * Gets the value of the 'customFrm' field.
      * @return The value.
      */
    public java.lang.CharSequence getCustomFrm() {
      return customFrm;
    }


    /**
      * Sets the value of the 'customFrm' field.
      * @param value The value of 'customFrm'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setCustomFrm(java.lang.CharSequence value) {
      validate(fields()[75], value);
      this.customFrm = value;
      fieldSetFlags()[75] = true;
      return this;
    }

    /**
      * Checks whether the 'customFrm' field has been set.
      * @return True if the 'customFrm' field has been set, false otherwise.
      */
    public boolean hasCustomFrm() {
      return fieldSetFlags()[75];
    }


    /**
      * Clears the value of the 'customFrm' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearCustomFrm() {
      customFrm = null;
      fieldSetFlags()[75] = false;
      return this;
    }

    /**
      * Gets the value of the 'customSalesBroker' field.
      * @return The value.
      */
    public java.lang.CharSequence getCustomSalesBroker() {
      return customSalesBroker;
    }


    /**
      * Sets the value of the 'customSalesBroker' field.
      * @param value The value of 'customSalesBroker'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setCustomSalesBroker(java.lang.CharSequence value) {
      validate(fields()[76], value);
      this.customSalesBroker = value;
      fieldSetFlags()[76] = true;
      return this;
    }

    /**
      * Checks whether the 'customSalesBroker' field has been set.
      * @return True if the 'customSalesBroker' field has been set, false otherwise.
      */
    public boolean hasCustomSalesBroker() {
      return fieldSetFlags()[76];
    }


    /**
      * Clears the value of the 'customSalesBroker' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearCustomSalesBroker() {
      customSalesBroker = null;
      fieldSetFlags()[76] = false;
      return this;
    }

    /**
      * Gets the value of the 'commFlag' field.
      * @return The value.
      */
    public java.lang.CharSequence getCommFlag() {
      return commFlag;
    }


    /**
      * Sets the value of the 'commFlag' field.
      * @param value The value of 'commFlag'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setCommFlag(java.lang.CharSequence value) {
      validate(fields()[77], value);
      this.commFlag = value;
      fieldSetFlags()[77] = true;
      return this;
    }

    /**
      * Checks whether the 'commFlag' field has been set.
      * @return True if the 'commFlag' field has been set, false otherwise.
      */
    public boolean hasCommFlag() {
      return fieldSetFlags()[77];
    }


    /**
      * Clears the value of the 'commFlag' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearCommFlag() {
      commFlag = null;
      fieldSetFlags()[77] = false;
      return this;
    }

    /**
      * Gets the value of the 'initialMargin' field.
      * @return The value.
      */
    public java.lang.CharSequence getInitialMargin() {
      return initialMargin;
    }


    /**
      * Sets the value of the 'initialMargin' field.
      * @param value The value of 'initialMargin'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setInitialMargin(java.lang.CharSequence value) {
      validate(fields()[78], value);
      this.initialMargin = value;
      fieldSetFlags()[78] = true;
      return this;
    }

    /**
      * Checks whether the 'initialMargin' field has been set.
      * @return True if the 'initialMargin' field has been set, false otherwise.
      */
    public boolean hasInitialMargin() {
      return fieldSetFlags()[78];
    }


    /**
      * Clears the value of the 'initialMargin' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearInitialMargin() {
      initialMargin = null;
      fieldSetFlags()[78] = false;
      return this;
    }

    /**
      * Gets the value of the 'collateralFlag' field.
      * @return The value.
      */
    public java.lang.CharSequence getCollateralFlag() {
      return collateralFlag;
    }


    /**
      * Sets the value of the 'collateralFlag' field.
      * @param value The value of 'collateralFlag'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setCollateralFlag(java.lang.CharSequence value) {
      validate(fields()[79], value);
      this.collateralFlag = value;
      fieldSetFlags()[79] = true;
      return this;
    }

    /**
      * Checks whether the 'collateralFlag' field has been set.
      * @return True if the 'collateralFlag' field has been set, false otherwise.
      */
    public boolean hasCollateralFlag() {
      return fieldSetFlags()[79];
    }


    /**
      * Clears the value of the 'collateralFlag' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearCollateralFlag() {
      collateralFlag = null;
      fieldSetFlags()[79] = false;
      return this;
    }

    /**
      * Gets the value of the 'fundFamily' field.
      * @return The value.
      */
    public java.lang.CharSequence getFundFamily() {
      return fundFamily;
    }


    /**
      * Sets the value of the 'fundFamily' field.
      * @param value The value of 'fundFamily'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setFundFamily(java.lang.CharSequence value) {
      validate(fields()[80], value);
      this.fundFamily = value;
      fieldSetFlags()[80] = true;
      return this;
    }

    /**
      * Checks whether the 'fundFamily' field has been set.
      * @return True if the 'fundFamily' field has been set, false otherwise.
      */
    public boolean hasFundFamily() {
      return fieldSetFlags()[80];
    }


    /**
      * Clears the value of the 'fundFamily' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearFundFamily() {
      fundFamily = null;
      fieldSetFlags()[80] = false;
      return this;
    }

    /**
      * Gets the value of the 'familyAllocInfo' field.
      * @return The value.
      */
    public java.lang.CharSequence getFamilyAllocInfo() {
      return familyAllocInfo;
    }


    /**
      * Sets the value of the 'familyAllocInfo' field.
      * @param value The value of 'familyAllocInfo'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setFamilyAllocInfo(java.lang.CharSequence value) {
      validate(fields()[81], value);
      this.familyAllocInfo = value;
      fieldSetFlags()[81] = true;
      return this;
    }

    /**
      * Checks whether the 'familyAllocInfo' field has been set.
      * @return True if the 'familyAllocInfo' field has been set, false otherwise.
      */
    public boolean hasFamilyAllocInfo() {
      return fieldSetFlags()[81];
    }


    /**
      * Clears the value of the 'familyAllocInfo' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearFamilyAllocInfo() {
      familyAllocInfo = null;
      fieldSetFlags()[81] = false;
      return this;
    }

    /**
      * Gets the value of the 'custodianAccount' field.
      * @return The value.
      */
    public java.lang.CharSequence getCustodianAccount() {
      return custodianAccount;
    }


    /**
      * Sets the value of the 'custodianAccount' field.
      * @param value The value of 'custodianAccount'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setCustodianAccount(java.lang.CharSequence value) {
      validate(fields()[82], value);
      this.custodianAccount = value;
      fieldSetFlags()[82] = true;
      return this;
    }

    /**
      * Checks whether the 'custodianAccount' field has been set.
      * @return True if the 'custodianAccount' field has been set, false otherwise.
      */
    public boolean hasCustodianAccount() {
      return fieldSetFlags()[82];
    }


    /**
      * Clears the value of the 'custodianAccount' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearCustodianAccount() {
      custodianAccount = null;
      fieldSetFlags()[82] = false;
      return this;
    }

    /**
      * Gets the value of the 'businessUnit' field.
      * @return The value.
      */
    public java.lang.CharSequence getBusinessUnit() {
      return businessUnit;
    }


    /**
      * Sets the value of the 'businessUnit' field.
      * @param value The value of 'businessUnit'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setBusinessUnit(java.lang.CharSequence value) {
      validate(fields()[83], value);
      this.businessUnit = value;
      fieldSetFlags()[83] = true;
      return this;
    }

    /**
      * Checks whether the 'businessUnit' field has been set.
      * @return True if the 'businessUnit' field has been set, false otherwise.
      */
    public boolean hasBusinessUnit() {
      return fieldSetFlags()[83];
    }


    /**
      * Clears the value of the 'businessUnit' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearBusinessUnit() {
      businessUnit = null;
      fieldSetFlags()[83] = false;
      return this;
    }

    /**
      * Gets the value of the 'subBusinessUnit' field.
      * @return The value.
      */
    public java.lang.CharSequence getSubBusinessUnit() {
      return subBusinessUnit;
    }


    /**
      * Sets the value of the 'subBusinessUnit' field.
      * @param value The value of 'subBusinessUnit'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setSubBusinessUnit(java.lang.CharSequence value) {
      validate(fields()[84], value);
      this.subBusinessUnit = value;
      fieldSetFlags()[84] = true;
      return this;
    }

    /**
      * Checks whether the 'subBusinessUnit' field has been set.
      * @return True if the 'subBusinessUnit' field has been set, false otherwise.
      */
    public boolean hasSubBusinessUnit() {
      return fieldSetFlags()[84];
    }


    /**
      * Clears the value of the 'subBusinessUnit' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearSubBusinessUnit() {
      subBusinessUnit = null;
      fieldSetFlags()[84] = false;
      return this;
    }

    /**
      * Gets the value of the 'fund' field.
      * @return The value.
      */
    public java.lang.CharSequence getFund() {
      return fund;
    }


    /**
      * Sets the value of the 'fund' field.
      * @param value The value of 'fund'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setFund(java.lang.CharSequence value) {
      validate(fields()[85], value);
      this.fund = value;
      fieldSetFlags()[85] = true;
      return this;
    }

    /**
      * Checks whether the 'fund' field has been set.
      * @return True if the 'fund' field has been set, false otherwise.
      */
    public boolean hasFund() {
      return fieldSetFlags()[85];
    }


    /**
      * Clears the value of the 'fund' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearFund() {
      fund = null;
      fieldSetFlags()[85] = false;
      return this;
    }

    /**
      * Gets the value of the 'autoCreateFlag' field.
      * @return The value.
      */
    public int getAutoCreateFlag() {
      return autoCreateFlag;
    }


    /**
      * Sets the value of the 'autoCreateFlag' field.
      * @param value The value of 'autoCreateFlag'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setAutoCreateFlag(int value) {
      validate(fields()[86], value);
      this.autoCreateFlag = value;
      fieldSetFlags()[86] = true;
      return this;
    }

    /**
      * Checks whether the 'autoCreateFlag' field has been set.
      * @return True if the 'autoCreateFlag' field has been set, false otherwise.
      */
    public boolean hasAutoCreateFlag() {
      return fieldSetFlags()[86];
    }


    /**
      * Clears the value of the 'autoCreateFlag' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearAutoCreateFlag() {
      fieldSetFlags()[86] = false;
      return this;
    }

    /**
      * Gets the value of the 'positionBeforeTrade' field.
      * @return The value.
      */
    public float getPositionBeforeTrade() {
      return positionBeforeTrade;
    }


    /**
      * Sets the value of the 'positionBeforeTrade' field.
      * @param value The value of 'positionBeforeTrade'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setPositionBeforeTrade(float value) {
      validate(fields()[87], value);
      this.positionBeforeTrade = value;
      fieldSetFlags()[87] = true;
      return this;
    }

    /**
      * Checks whether the 'positionBeforeTrade' field has been set.
      * @return True if the 'positionBeforeTrade' field has been set, false otherwise.
      */
    public boolean hasPositionBeforeTrade() {
      return fieldSetFlags()[87];
    }


    /**
      * Clears the value of the 'positionBeforeTrade' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearPositionBeforeTrade() {
      fieldSetFlags()[87] = false;
      return this;
    }

    /**
      * Gets the value of the 'originalFaceValue' field.
      * @return The value.
      */
    public float getOriginalFaceValue() {
      return originalFaceValue;
    }


    /**
      * Sets the value of the 'originalFaceValue' field.
      * @param value The value of 'originalFaceValue'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setOriginalFaceValue(float value) {
      validate(fields()[88], value);
      this.originalFaceValue = value;
      fieldSetFlags()[88] = true;
      return this;
    }

    /**
      * Checks whether the 'originalFaceValue' field has been set.
      * @return True if the 'originalFaceValue' field has been set, false otherwise.
      */
    public boolean hasOriginalFaceValue() {
      return fieldSetFlags()[88];
    }


    /**
      * Clears the value of the 'originalFaceValue' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearOriginalFaceValue() {
      fieldSetFlags()[88] = false;
      return this;
    }

    /**
      * Gets the value of the 'loanAmount' field.
      * @return The value.
      */
    public float getLoanAmount() {
      return loanAmount;
    }


    /**
      * Sets the value of the 'loanAmount' field.
      * @param value The value of 'loanAmount'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setLoanAmount(float value) {
      validate(fields()[89], value);
      this.loanAmount = value;
      fieldSetFlags()[89] = true;
      return this;
    }

    /**
      * Checks whether the 'loanAmount' field has been set.
      * @return True if the 'loanAmount' field has been set, false otherwise.
      */
    public boolean hasLoanAmount() {
      return fieldSetFlags()[89];
    }


    /**
      * Clears the value of the 'loanAmount' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearLoanAmount() {
      fieldSetFlags()[89] = false;
      return this;
    }

    /**
      * Gets the value of the 'accrualDaysPerMonth' field.
      * @return The value.
      */
    public java.lang.CharSequence getAccrualDaysPerMonth() {
      return accrualDaysPerMonth;
    }


    /**
      * Sets the value of the 'accrualDaysPerMonth' field.
      * @param value The value of 'accrualDaysPerMonth'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setAccrualDaysPerMonth(java.lang.CharSequence value) {
      validate(fields()[90], value);
      this.accrualDaysPerMonth = value;
      fieldSetFlags()[90] = true;
      return this;
    }

    /**
      * Checks whether the 'accrualDaysPerMonth' field has been set.
      * @return True if the 'accrualDaysPerMonth' field has been set, false otherwise.
      */
    public boolean hasAccrualDaysPerMonth() {
      return fieldSetFlags()[90];
    }


    /**
      * Clears the value of the 'accrualDaysPerMonth' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearAccrualDaysPerMonth() {
      accrualDaysPerMonth = null;
      fieldSetFlags()[90] = false;
      return this;
    }

    /**
      * Gets the value of the 'accrualDaysPerYear' field.
      * @return The value.
      */
    public java.lang.CharSequence getAccrualDaysPerYear() {
      return accrualDaysPerYear;
    }


    /**
      * Sets the value of the 'accrualDaysPerYear' field.
      * @param value The value of 'accrualDaysPerYear'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setAccrualDaysPerYear(java.lang.CharSequence value) {
      validate(fields()[91], value);
      this.accrualDaysPerYear = value;
      fieldSetFlags()[91] = true;
      return this;
    }

    /**
      * Checks whether the 'accrualDaysPerYear' field has been set.
      * @return True if the 'accrualDaysPerYear' field has been set, false otherwise.
      */
    public boolean hasAccrualDaysPerYear() {
      return fieldSetFlags()[91];
    }


    /**
      * Clears the value of the 'accrualDaysPerYear' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearAccrualDaysPerYear() {
      accrualDaysPerYear = null;
      fieldSetFlags()[91] = false;
      return this;
    }

    /**
      * Gets the value of the 'endOfMonth' field.
      * @return The value.
      */
    public java.lang.CharSequence getEndOfMonth() {
      return endOfMonth;
    }


    /**
      * Sets the value of the 'endOfMonth' field.
      * @param value The value of 'endOfMonth'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setEndOfMonth(java.lang.CharSequence value) {
      validate(fields()[92], value);
      this.endOfMonth = value;
      fieldSetFlags()[92] = true;
      return this;
    }

    /**
      * Checks whether the 'endOfMonth' field has been set.
      * @return True if the 'endOfMonth' field has been set, false otherwise.
      */
    public boolean hasEndOfMonth() {
      return fieldSetFlags()[92];
    }


    /**
      * Clears the value of the 'endOfMonth' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearEndOfMonth() {
      endOfMonth = null;
      fieldSetFlags()[92] = false;
      return this;
    }

    /**
      * Gets the value of the 'fixingPrivate' field.
      * @return The value.
      */
    public java.lang.CharSequence getFixingPrivate() {
      return fixingPrivate;
    }


    /**
      * Sets the value of the 'fixingPrivate' field.
      * @param value The value of 'fixingPrivate'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setFixingPrivate(java.lang.CharSequence value) {
      validate(fields()[93], value);
      this.fixingPrivate = value;
      fieldSetFlags()[93] = true;
      return this;
    }

    /**
      * Checks whether the 'fixingPrivate' field has been set.
      * @return True if the 'fixingPrivate' field has been set, false otherwise.
      */
    public boolean hasFixingPrivate() {
      return fieldSetFlags()[93];
    }


    /**
      * Clears the value of the 'fixingPrivate' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearFixingPrivate() {
      fixingPrivate = null;
      fieldSetFlags()[93] = false;
      return this;
    }

    /**
      * Gets the value of the 'currentMargin' field.
      * @return The value.
      */
    public java.lang.CharSequence getCurrentMargin() {
      return currentMargin;
    }


    /**
      * Sets the value of the 'currentMargin' field.
      * @param value The value of 'currentMargin'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setCurrentMargin(java.lang.CharSequence value) {
      validate(fields()[94], value);
      this.currentMargin = value;
      fieldSetFlags()[94] = true;
      return this;
    }

    /**
      * Checks whether the 'currentMargin' field has been set.
      * @return True if the 'currentMargin' field has been set, false otherwise.
      */
    public boolean hasCurrentMargin() {
      return fieldSetFlags()[94];
    }


    /**
      * Clears the value of the 'currentMargin' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearCurrentMargin() {
      currentMargin = null;
      fieldSetFlags()[94] = false;
      return this;
    }

    /**
      * Gets the value of the 'tradeFlat' field.
      * @return The value.
      */
    public java.lang.CharSequence getTradeFlat() {
      return tradeFlat;
    }


    /**
      * Sets the value of the 'tradeFlat' field.
      * @param value The value of 'tradeFlat'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setTradeFlat(java.lang.CharSequence value) {
      validate(fields()[95], value);
      this.tradeFlat = value;
      fieldSetFlags()[95] = true;
      return this;
    }

    /**
      * Checks whether the 'tradeFlat' field has been set.
      * @return True if the 'tradeFlat' field has been set, false otherwise.
      */
    public boolean hasTradeFlat() {
      return fieldSetFlags()[95];
    }


    /**
      * Clears the value of the 'tradeFlat' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearTradeFlat() {
      tradeFlat = null;
      fieldSetFlags()[95] = false;
      return this;
    }

    /**
      * Gets the value of the 'parentQuantity' field.
      * @return The value.
      */
    public float getParentQuantity() {
      return parentQuantity;
    }


    /**
      * Sets the value of the 'parentQuantity' field.
      * @param value The value of 'parentQuantity'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setParentQuantity(float value) {
      validate(fields()[96], value);
      this.parentQuantity = value;
      fieldSetFlags()[96] = true;
      return this;
    }

    /**
      * Checks whether the 'parentQuantity' field has been set.
      * @return True if the 'parentQuantity' field has been set, false otherwise.
      */
    public boolean hasParentQuantity() {
      return fieldSetFlags()[96];
    }


    /**
      * Clears the value of the 'parentQuantity' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearParentQuantity() {
      fieldSetFlags()[96] = false;
      return this;
    }

    /**
      * Gets the value of the 'underlyingQuantity' field.
      * @return The value.
      */
    public float getUnderlyingQuantity() {
      return underlyingQuantity;
    }


    /**
      * Sets the value of the 'underlyingQuantity' field.
      * @param value The value of 'underlyingQuantity'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setUnderlyingQuantity(float value) {
      validate(fields()[97], value);
      this.underlyingQuantity = value;
      fieldSetFlags()[97] = true;
      return this;
    }

    /**
      * Checks whether the 'underlyingQuantity' field has been set.
      * @return True if the 'underlyingQuantity' field has been set, false otherwise.
      */
    public boolean hasUnderlyingQuantity() {
      return fieldSetFlags()[97];
    }


    /**
      * Clears the value of the 'underlyingQuantity' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearUnderlyingQuantity() {
      fieldSetFlags()[97] = false;
      return this;
    }

    /**
      * Gets the value of the 'customCrossCurrency' field.
      * @return The value.
      */
    public java.lang.CharSequence getCustomCrossCurrency() {
      return customCrossCurrency;
    }


    /**
      * Sets the value of the 'customCrossCurrency' field.
      * @param value The value of 'customCrossCurrency'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setCustomCrossCurrency(java.lang.CharSequence value) {
      validate(fields()[98], value);
      this.customCrossCurrency = value;
      fieldSetFlags()[98] = true;
      return this;
    }

    /**
      * Checks whether the 'customCrossCurrency' field has been set.
      * @return True if the 'customCrossCurrency' field has been set, false otherwise.
      */
    public boolean hasCustomCrossCurrency() {
      return fieldSetFlags()[98];
    }


    /**
      * Clears the value of the 'customCrossCurrency' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearCustomCrossCurrency() {
      customCrossCurrency = null;
      fieldSetFlags()[98] = false;
      return this;
    }

    /**
      * Gets the value of the 'customProductType' field.
      * @return The value.
      */
    public java.lang.CharSequence getCustomProductType() {
      return customProductType;
    }


    /**
      * Sets the value of the 'customProductType' field.
      * @param value The value of 'customProductType'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setCustomProductType(java.lang.CharSequence value) {
      validate(fields()[99], value);
      this.customProductType = value;
      fieldSetFlags()[99] = true;
      return this;
    }

    /**
      * Checks whether the 'customProductType' field has been set.
      * @return True if the 'customProductType' field has been set, false otherwise.
      */
    public boolean hasCustomProductType() {
      return fieldSetFlags()[99];
    }


    /**
      * Clears the value of the 'customProductType' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearCustomProductType() {
      customProductType = null;
      fieldSetFlags()[99] = false;
      return this;
    }

    /**
      * Gets the value of the 'transactionType' field.
      * @return The value.
      */
    public java.lang.CharSequence getTransactionType() {
      return transactionType;
    }


    /**
      * Sets the value of the 'transactionType' field.
      * @param value The value of 'transactionType'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setTransactionType(java.lang.CharSequence value) {
      validate(fields()[100], value);
      this.transactionType = value;
      fieldSetFlags()[100] = true;
      return this;
    }

    /**
      * Checks whether the 'transactionType' field has been set.
      * @return True if the 'transactionType' field has been set, false otherwise.
      */
    public boolean hasTransactionType() {
      return fieldSetFlags()[100];
    }


    /**
      * Clears the value of the 'transactionType' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearTransactionType() {
      transactionType = null;
      fieldSetFlags()[100] = false;
      return this;
    }

    /**
      * Gets the value of the 'newStrategy' field.
      * @return The value.
      */
    public java.lang.CharSequence getNewStrategy() {
      return newStrategy;
    }


    /**
      * Sets the value of the 'newStrategy' field.
      * @param value The value of 'newStrategy'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setNewStrategy(java.lang.CharSequence value) {
      validate(fields()[101], value);
      this.newStrategy = value;
      fieldSetFlags()[101] = true;
      return this;
    }

    /**
      * Checks whether the 'newStrategy' field has been set.
      * @return True if the 'newStrategy' field has been set, false otherwise.
      */
    public boolean hasNewStrategy() {
      return fieldSetFlags()[101];
    }


    /**
      * Clears the value of the 'newStrategy' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearNewStrategy() {
      newStrategy = null;
      fieldSetFlags()[101] = false;
      return this;
    }

    /**
      * Gets the value of the 'newPrimeBroker' field.
      * @return The value.
      */
    public java.lang.CharSequence getNewPrimeBroker() {
      return newPrimeBroker;
    }


    /**
      * Sets the value of the 'newPrimeBroker' field.
      * @param value The value of 'newPrimeBroker'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setNewPrimeBroker(java.lang.CharSequence value) {
      validate(fields()[102], value);
      this.newPrimeBroker = value;
      fieldSetFlags()[102] = true;
      return this;
    }

    /**
      * Checks whether the 'newPrimeBroker' field has been set.
      * @return True if the 'newPrimeBroker' field has been set, false otherwise.
      */
    public boolean hasNewPrimeBroker() {
      return fieldSetFlags()[102];
    }


    /**
      * Clears the value of the 'newPrimeBroker' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearNewPrimeBroker() {
      newPrimeBroker = null;
      fieldSetFlags()[102] = false;
      return this;
    }

    /**
      * Gets the value of the 'customFundQuantity1' field.
      * @return The value.
      */
    public float getCustomFundQuantity1() {
      return customFundQuantity1;
    }


    /**
      * Sets the value of the 'customFundQuantity1' field.
      * @param value The value of 'customFundQuantity1'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setCustomFundQuantity1(float value) {
      validate(fields()[103], value);
      this.customFundQuantity1 = value;
      fieldSetFlags()[103] = true;
      return this;
    }

    /**
      * Checks whether the 'customFundQuantity1' field has been set.
      * @return True if the 'customFundQuantity1' field has been set, false otherwise.
      */
    public boolean hasCustomFundQuantity1() {
      return fieldSetFlags()[103];
    }


    /**
      * Clears the value of the 'customFundQuantity1' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearCustomFundQuantity1() {
      fieldSetFlags()[103] = false;
      return this;
    }

    /**
      * Gets the value of the 'customFundSide1' field.
      * @return The value.
      */
    public java.lang.CharSequence getCustomFundSide1() {
      return customFundSide1;
    }


    /**
      * Sets the value of the 'customFundSide1' field.
      * @param value The value of 'customFundSide1'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setCustomFundSide1(java.lang.CharSequence value) {
      validate(fields()[104], value);
      this.customFundSide1 = value;
      fieldSetFlags()[104] = true;
      return this;
    }

    /**
      * Checks whether the 'customFundSide1' field has been set.
      * @return True if the 'customFundSide1' field has been set, false otherwise.
      */
    public boolean hasCustomFundSide1() {
      return fieldSetFlags()[104];
    }


    /**
      * Clears the value of the 'customFundSide1' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearCustomFundSide1() {
      customFundSide1 = null;
      fieldSetFlags()[104] = false;
      return this;
    }

    /**
      * Gets the value of the 'customFundQuantity2' field.
      * @return The value.
      */
    public float getCustomFundQuantity2() {
      return customFundQuantity2;
    }


    /**
      * Sets the value of the 'customFundQuantity2' field.
      * @param value The value of 'customFundQuantity2'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setCustomFundQuantity2(float value) {
      validate(fields()[105], value);
      this.customFundQuantity2 = value;
      fieldSetFlags()[105] = true;
      return this;
    }

    /**
      * Checks whether the 'customFundQuantity2' field has been set.
      * @return True if the 'customFundQuantity2' field has been set, false otherwise.
      */
    public boolean hasCustomFundQuantity2() {
      return fieldSetFlags()[105];
    }


    /**
      * Clears the value of the 'customFundQuantity2' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearCustomFundQuantity2() {
      fieldSetFlags()[105] = false;
      return this;
    }

    /**
      * Gets the value of the 'customFundSide3' field.
      * @return The value.
      */
    public java.lang.CharSequence getCustomFundSide3() {
      return customFundSide3;
    }


    /**
      * Sets the value of the 'customFundSide3' field.
      * @param value The value of 'customFundSide3'.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder setCustomFundSide3(java.lang.CharSequence value) {
      validate(fields()[106], value);
      this.customFundSide3 = value;
      fieldSetFlags()[106] = true;
      return this;
    }

    /**
      * Checks whether the 'customFundSide3' field has been set.
      * @return True if the 'customFundSide3' field has been set, false otherwise.
      */
    public boolean hasCustomFundSide3() {
      return fieldSetFlags()[106];
    }


    /**
      * Clears the value of the 'customFundSide3' field.
      * @return This builder.
      */
    public org.greencoding.showcase.serialization.avro.testdata.LargeExampleAvro.Builder clearCustomFundSide3() {
      customFundSide3 = null;
      fieldSetFlags()[106] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public LargeExampleAvro build() {
      try {
        LargeExampleAvro record = new LargeExampleAvro();
        record.avgPx = fieldSetFlags()[0] ? this.avgPx : (java.lang.Float) defaultValue(fields()[0]);
        record.comission = fieldSetFlags()[1] ? this.comission : (java.lang.Float) defaultValue(fields()[1]);
        record.commType = fieldSetFlags()[2] ? this.commType : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.currency = fieldSetFlags()[3] ? this.currency : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.execId = fieldSetFlags()[4] ? this.execId : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.execRefId = fieldSetFlags()[5] ? this.execRefId : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.execTransactiontype = fieldSetFlags()[6] ? this.execTransactiontype : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.execType = fieldSetFlags()[7] ? this.execType : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.idSource = fieldSetFlags()[8] ? this.idSource : (java.lang.CharSequence) defaultValue(fields()[8]);
        record.lastCapacity = fieldSetFlags()[9] ? this.lastCapacity : (java.lang.CharSequence) defaultValue(fields()[9]);
        record.lastMkt = fieldSetFlags()[10] ? this.lastMkt : (java.lang.CharSequence) defaultValue(fields()[10]);
        record.lastPx = fieldSetFlags()[11] ? this.lastPx : (java.lang.Float) defaultValue(fields()[11]);
        record.lastShares = fieldSetFlags()[12] ? this.lastShares : (java.lang.Float) defaultValue(fields()[12]);
        record.msgSeqNum = fieldSetFlags()[13] ? this.msgSeqNum : (java.lang.Integer) defaultValue(fields()[13]);
        record.orderId = fieldSetFlags()[14] ? this.orderId : (java.lang.CharSequence) defaultValue(fields()[14]);
        record.orderQuantity = fieldSetFlags()[15] ? this.orderQuantity : (java.lang.Float) defaultValue(fields()[15]);
        record.orderStatus = fieldSetFlags()[16] ? this.orderStatus : (java.lang.CharSequence) defaultValue(fields()[16]);
        record.origCiOrderId = fieldSetFlags()[17] ? this.origCiOrderId : (java.lang.CharSequence) defaultValue(fields()[17]);
        record.posDupFlag = fieldSetFlags()[18] ? this.posDupFlag : (java.lang.CharSequence) defaultValue(fields()[18]);
        record.price = fieldSetFlags()[19] ? this.price : (java.lang.Float) defaultValue(fields()[19]);
        record.securityId = fieldSetFlags()[20] ? this.securityId : (java.lang.CharSequence) defaultValue(fields()[20]);
        record.side = fieldSetFlags()[21] ? this.side : (java.lang.CharSequence) defaultValue(fields()[21]);
        record.symbol = fieldSetFlags()[22] ? this.symbol : (java.lang.CharSequence) defaultValue(fields()[22]);
        record.text = fieldSetFlags()[23] ? this.text : (java.lang.CharSequence) defaultValue(fields()[23]);
        record.transactId = fieldSetFlags()[24] ? this.transactId : (java.lang.Long) defaultValue(fields()[24]);
        record.parentOrderId = fieldSetFlags()[25] ? this.parentOrderId : (java.lang.CharSequence) defaultValue(fields()[25]);
        record.settlementType = fieldSetFlags()[26] ? this.settlementType : (java.lang.CharSequence) defaultValue(fields()[26]);
        record.futSettleprivate = fieldSetFlags()[27] ? this.futSettleprivate : (java.lang.CharSequence) defaultValue(fields()[27]);
        record.symbolSfx = fieldSetFlags()[28] ? this.symbolSfx : (java.lang.CharSequence) defaultValue(fields()[28]);
        record.parentOrderQuantity = fieldSetFlags()[29] ? this.parentOrderQuantity : (java.lang.Float) defaultValue(fields()[29]);
        record.tradeCurrencyCountry = fieldSetFlags()[30] ? this.tradeCurrencyCountry : (java.lang.CharSequence) defaultValue(fields()[30]);
        record.tradeprivate = fieldSetFlags()[31] ? this.tradeprivate : (java.lang.CharSequence) defaultValue(fields()[31]);
        record.execBroker = fieldSetFlags()[32] ? this.execBroker : (java.lang.CharSequence) defaultValue(fields()[32]);
        record.openClose = fieldSetFlags()[33] ? this.openClose : (java.lang.CharSequence) defaultValue(fields()[33]);
        record.processCode = fieldSetFlags()[34] ? this.processCode : (java.lang.CharSequence) defaultValue(fields()[34]);
        record.origSide = fieldSetFlags()[35] ? this.origSide : (java.lang.CharSequence) defaultValue(fields()[35]);
        record.netPrice = fieldSetFlags()[36] ? this.netPrice : (java.lang.Float) defaultValue(fields()[36]);
        record.clientId = fieldSetFlags()[37] ? this.clientId : (java.lang.CharSequence) defaultValue(fields()[37]);
        record.reportToExchange = fieldSetFlags()[38] ? this.reportToExchange : (java.lang.Boolean) defaultValue(fields()[38]);
        record.leavesQuantity = fieldSetFlags()[39] ? this.leavesQuantity : (java.lang.Float) defaultValue(fields()[39]);
        record.securityType = fieldSetFlags()[40] ? this.securityType : (java.lang.CharSequence) defaultValue(fields()[40]);
        record.settleBroker = fieldSetFlags()[41] ? this.settleBroker : (java.lang.CharSequence) defaultValue(fields()[41]);
        record.securityExchange = fieldSetFlags()[42] ? this.securityExchange : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[42]);
        record.maturityMonthYear = fieldSetFlags()[43] ? this.maturityMonthYear : (java.lang.CharSequence) defaultValue(fields()[43]);
        record.maturityDay = fieldSetFlags()[44] ? this.maturityDay : (java.lang.CharSequence) defaultValue(fields()[44]);
        record.putOrCall = fieldSetFlags()[45] ? this.putOrCall : (java.lang.Integer) defaultValue(fields()[45]);
        record.strikePrice = fieldSetFlags()[46] ? this.strikePrice : (java.lang.Float) defaultValue(fields()[46]);
        record.exerciseType = fieldSetFlags()[47] ? this.exerciseType : (java.lang.CharSequence) defaultValue(fields()[47]);
        record.ocaInstrumentType = fieldSetFlags()[48] ? this.ocaInstrumentType : (java.lang.CharSequence) defaultValue(fields()[48]);
        record.spread = fieldSetFlags()[49] ? this.spread : (java.lang.Float) defaultValue(fields()[49]);
        record.contractMultiplier = fieldSetFlags()[50] ? this.contractMultiplier : (java.lang.Float) defaultValue(fields()[50]);
        record.underlyingSecurityExchange = fieldSetFlags()[51] ? this.underlyingSecurityExchange : (java.lang.CharSequence) defaultValue(fields()[51]);
        record.underlyingSymbol = fieldSetFlags()[52] ? this.underlyingSymbol : (java.lang.CharSequence) defaultValue(fields()[52]);
        record.underlyingMaturityMonthYear = fieldSetFlags()[53] ? this.underlyingMaturityMonthYear : (java.lang.CharSequence) defaultValue(fields()[53]);
        record.underlyingMaturityDay = fieldSetFlags()[54] ? this.underlyingMaturityDay : (java.lang.CharSequence) defaultValue(fields()[54]);
        record.underlyingContractMultiplier = fieldSetFlags()[55] ? this.underlyingContractMultiplier : (java.lang.Float) defaultValue(fields()[55]);
        record.trader = fieldSetFlags()[56] ? this.trader : (java.lang.CharSequence) defaultValue(fields()[56]);
        record.enteredBy = fieldSetFlags()[57] ? this.enteredBy : (java.lang.CharSequence) defaultValue(fields()[57]);
        record.instrumentCountry = fieldSetFlags()[58] ? this.instrumentCountry : (java.lang.CharSequence) defaultValue(fields()[58]);
        record.settleCurrency = fieldSetFlags()[59] ? this.settleCurrency : (java.lang.CharSequence) defaultValue(fields()[59]);
        record.instrumentCurrency = fieldSetFlags()[60] ? this.instrumentCurrency : (java.lang.CharSequence) defaultValue(fields()[60]);
        record.instrumentName = fieldSetFlags()[61] ? this.instrumentName : (java.lang.CharSequence) defaultValue(fields()[61]);
        record.instrCurrencyFxRate = fieldSetFlags()[62] ? this.instrCurrencyFxRate : (java.lang.Float) defaultValue(fields()[62]);
        record.instrCurrencyFxRateCalc = fieldSetFlags()[63] ? this.instrCurrencyFxRateCalc : (java.lang.CharSequence) defaultValue(fields()[63]);
        record.strategy = fieldSetFlags()[64] ? this.strategy : (java.lang.CharSequence) defaultValue(fields()[64]);
        record.nonDeliverableForward = fieldSetFlags()[65] ? this.nonDeliverableForward : (java.lang.CharSequence) defaultValue(fields()[65]);
        record.mainPrice = fieldSetFlags()[66] ? this.mainPrice : (java.lang.Float) defaultValue(fields()[66]);
        record.interestRate = fieldSetFlags()[67] ? this.interestRate : (java.lang.Long) defaultValue(fields()[67]);
        record.openPrivate = fieldSetFlags()[68] ? this.openPrivate : (java.lang.Long) defaultValue(fields()[68]);
        record.closePrivate = fieldSetFlags()[69] ? this.closePrivate : (java.lang.Long) defaultValue(fields()[69]);
        record.customRiskClass = fieldSetFlags()[70] ? this.customRiskClass : (java.lang.CharSequence) defaultValue(fields()[70]);
        record.customSubBook = fieldSetFlags()[71] ? this.customSubBook : (java.lang.CharSequence) defaultValue(fields()[71]);
        record.customStrategy = fieldSetFlags()[72] ? this.customStrategy : (java.lang.CharSequence) defaultValue(fields()[72]);
        record.customCountry = fieldSetFlags()[73] ? this.customCountry : (java.lang.CharSequence) defaultValue(fields()[73]);
        record.customCounterParty = fieldSetFlags()[74] ? this.customCounterParty : (java.lang.CharSequence) defaultValue(fields()[74]);
        record.customFrm = fieldSetFlags()[75] ? this.customFrm : (java.lang.CharSequence) defaultValue(fields()[75]);
        record.customSalesBroker = fieldSetFlags()[76] ? this.customSalesBroker : (java.lang.CharSequence) defaultValue(fields()[76]);
        record.commFlag = fieldSetFlags()[77] ? this.commFlag : (java.lang.CharSequence) defaultValue(fields()[77]);
        record.initialMargin = fieldSetFlags()[78] ? this.initialMargin : (java.lang.CharSequence) defaultValue(fields()[78]);
        record.collateralFlag = fieldSetFlags()[79] ? this.collateralFlag : (java.lang.CharSequence) defaultValue(fields()[79]);
        record.fundFamily = fieldSetFlags()[80] ? this.fundFamily : (java.lang.CharSequence) defaultValue(fields()[80]);
        record.familyAllocInfo = fieldSetFlags()[81] ? this.familyAllocInfo : (java.lang.CharSequence) defaultValue(fields()[81]);
        record.custodianAccount = fieldSetFlags()[82] ? this.custodianAccount : (java.lang.CharSequence) defaultValue(fields()[82]);
        record.businessUnit = fieldSetFlags()[83] ? this.businessUnit : (java.lang.CharSequence) defaultValue(fields()[83]);
        record.subBusinessUnit = fieldSetFlags()[84] ? this.subBusinessUnit : (java.lang.CharSequence) defaultValue(fields()[84]);
        record.fund = fieldSetFlags()[85] ? this.fund : (java.lang.CharSequence) defaultValue(fields()[85]);
        record.autoCreateFlag = fieldSetFlags()[86] ? this.autoCreateFlag : (java.lang.Integer) defaultValue(fields()[86]);
        record.positionBeforeTrade = fieldSetFlags()[87] ? this.positionBeforeTrade : (java.lang.Float) defaultValue(fields()[87]);
        record.originalFaceValue = fieldSetFlags()[88] ? this.originalFaceValue : (java.lang.Float) defaultValue(fields()[88]);
        record.loanAmount = fieldSetFlags()[89] ? this.loanAmount : (java.lang.Float) defaultValue(fields()[89]);
        record.accrualDaysPerMonth = fieldSetFlags()[90] ? this.accrualDaysPerMonth : (java.lang.CharSequence) defaultValue(fields()[90]);
        record.accrualDaysPerYear = fieldSetFlags()[91] ? this.accrualDaysPerYear : (java.lang.CharSequence) defaultValue(fields()[91]);
        record.endOfMonth = fieldSetFlags()[92] ? this.endOfMonth : (java.lang.CharSequence) defaultValue(fields()[92]);
        record.fixingPrivate = fieldSetFlags()[93] ? this.fixingPrivate : (java.lang.CharSequence) defaultValue(fields()[93]);
        record.currentMargin = fieldSetFlags()[94] ? this.currentMargin : (java.lang.CharSequence) defaultValue(fields()[94]);
        record.tradeFlat = fieldSetFlags()[95] ? this.tradeFlat : (java.lang.CharSequence) defaultValue(fields()[95]);
        record.parentQuantity = fieldSetFlags()[96] ? this.parentQuantity : (java.lang.Float) defaultValue(fields()[96]);
        record.underlyingQuantity = fieldSetFlags()[97] ? this.underlyingQuantity : (java.lang.Float) defaultValue(fields()[97]);
        record.customCrossCurrency = fieldSetFlags()[98] ? this.customCrossCurrency : (java.lang.CharSequence) defaultValue(fields()[98]);
        record.customProductType = fieldSetFlags()[99] ? this.customProductType : (java.lang.CharSequence) defaultValue(fields()[99]);
        record.transactionType = fieldSetFlags()[100] ? this.transactionType : (java.lang.CharSequence) defaultValue(fields()[100]);
        record.newStrategy = fieldSetFlags()[101] ? this.newStrategy : (java.lang.CharSequence) defaultValue(fields()[101]);
        record.newPrimeBroker = fieldSetFlags()[102] ? this.newPrimeBroker : (java.lang.CharSequence) defaultValue(fields()[102]);
        record.customFundQuantity1 = fieldSetFlags()[103] ? this.customFundQuantity1 : (java.lang.Float) defaultValue(fields()[103]);
        record.customFundSide1 = fieldSetFlags()[104] ? this.customFundSide1 : (java.lang.CharSequence) defaultValue(fields()[104]);
        record.customFundQuantity2 = fieldSetFlags()[105] ? this.customFundQuantity2 : (java.lang.Float) defaultValue(fields()[105]);
        record.customFundSide3 = fieldSetFlags()[106] ? this.customFundSide3 : (java.lang.CharSequence) defaultValue(fields()[106]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<LargeExampleAvro>
    WRITER$ = (org.apache.avro.io.DatumWriter<LargeExampleAvro>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<LargeExampleAvro>
    READER$ = (org.apache.avro.io.DatumReader<LargeExampleAvro>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeFloat(this.avgPx);

    out.writeFloat(this.comission);

    out.writeString(this.commType);

    out.writeString(this.currency);

    out.writeString(this.execId);

    out.writeString(this.execRefId);

    out.writeString(this.execTransactiontype);

    out.writeString(this.execType);

    out.writeString(this.idSource);

    out.writeString(this.lastCapacity);

    out.writeString(this.lastMkt);

    out.writeFloat(this.lastPx);

    out.writeFloat(this.lastShares);

    out.writeInt(this.msgSeqNum);

    out.writeString(this.orderId);

    out.writeFloat(this.orderQuantity);

    out.writeString(this.orderStatus);

    out.writeString(this.origCiOrderId);

    out.writeString(this.posDupFlag);

    out.writeFloat(this.price);

    out.writeString(this.securityId);

    out.writeString(this.side);

    out.writeString(this.symbol);

    out.writeString(this.text);

    out.writeLong(this.transactId);

    out.writeString(this.parentOrderId);

    out.writeString(this.settlementType);

    out.writeString(this.futSettleprivate);

    out.writeString(this.symbolSfx);

    out.writeFloat(this.parentOrderQuantity);

    out.writeString(this.tradeCurrencyCountry);

    out.writeString(this.tradeprivate);

    out.writeString(this.execBroker);

    out.writeString(this.openClose);

    out.writeString(this.processCode);

    out.writeString(this.origSide);

    out.writeFloat(this.netPrice);

    out.writeString(this.clientId);

    out.writeBoolean(this.reportToExchange);

    out.writeFloat(this.leavesQuantity);

    out.writeString(this.securityType);

    out.writeString(this.settleBroker);

    long size0 = this.securityExchange.size();
    out.writeArrayStart();
    out.setItemCount(size0);
    long actualSize0 = 0;
    for (java.lang.CharSequence e0: this.securityExchange) {
      actualSize0++;
      out.startItem();
      out.writeString(e0);
    }
    out.writeArrayEnd();
    if (actualSize0 != size0)
      throw new java.util.ConcurrentModificationException("Array-size written was " + size0 + ", but element count was " + actualSize0 + ".");

    out.writeString(this.maturityMonthYear);

    out.writeString(this.maturityDay);

    out.writeInt(this.putOrCall);

    out.writeFloat(this.strikePrice);

    out.writeString(this.exerciseType);

    out.writeString(this.ocaInstrumentType);

    out.writeFloat(this.spread);

    out.writeFloat(this.contractMultiplier);

    out.writeString(this.underlyingSecurityExchange);

    out.writeString(this.underlyingSymbol);

    out.writeString(this.underlyingMaturityMonthYear);

    out.writeString(this.underlyingMaturityDay);

    out.writeFloat(this.underlyingContractMultiplier);

    out.writeString(this.trader);

    out.writeString(this.enteredBy);

    out.writeString(this.instrumentCountry);

    out.writeString(this.settleCurrency);

    out.writeString(this.instrumentCurrency);

    out.writeString(this.instrumentName);

    out.writeFloat(this.instrCurrencyFxRate);

    out.writeString(this.instrCurrencyFxRateCalc);

    out.writeString(this.strategy);

    out.writeString(this.nonDeliverableForward);

    out.writeFloat(this.mainPrice);

    out.writeLong(this.interestRate);

    out.writeLong(this.openPrivate);

    out.writeLong(this.closePrivate);

    out.writeString(this.customRiskClass);

    out.writeString(this.customSubBook);

    out.writeString(this.customStrategy);

    out.writeString(this.customCountry);

    out.writeString(this.customCounterParty);

    out.writeString(this.customFrm);

    out.writeString(this.customSalesBroker);

    out.writeString(this.commFlag);

    out.writeString(this.initialMargin);

    out.writeString(this.collateralFlag);

    out.writeString(this.fundFamily);

    out.writeString(this.familyAllocInfo);

    out.writeString(this.custodianAccount);

    out.writeString(this.businessUnit);

    out.writeString(this.subBusinessUnit);

    out.writeString(this.fund);

    out.writeInt(this.autoCreateFlag);

    out.writeFloat(this.positionBeforeTrade);

    out.writeFloat(this.originalFaceValue);

    out.writeFloat(this.loanAmount);

    out.writeString(this.accrualDaysPerMonth);

    out.writeString(this.accrualDaysPerYear);

    out.writeString(this.endOfMonth);

    out.writeString(this.fixingPrivate);

    out.writeString(this.currentMargin);

    out.writeString(this.tradeFlat);

    out.writeFloat(this.parentQuantity);

    out.writeFloat(this.underlyingQuantity);

    out.writeString(this.customCrossCurrency);

    out.writeString(this.customProductType);

    out.writeString(this.transactionType);

    out.writeString(this.newStrategy);

    out.writeString(this.newPrimeBroker);

    out.writeFloat(this.customFundQuantity1);

    out.writeString(this.customFundSide1);

    out.writeFloat(this.customFundQuantity2);

    out.writeString(this.customFundSide3);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.avgPx = in.readFloat();

      this.comission = in.readFloat();

      this.commType = in.readString(this.commType instanceof Utf8 ? (Utf8)this.commType : null);

      this.currency = in.readString(this.currency instanceof Utf8 ? (Utf8)this.currency : null);

      this.execId = in.readString(this.execId instanceof Utf8 ? (Utf8)this.execId : null);

      this.execRefId = in.readString(this.execRefId instanceof Utf8 ? (Utf8)this.execRefId : null);

      this.execTransactiontype = in.readString(this.execTransactiontype instanceof Utf8 ? (Utf8)this.execTransactiontype : null);

      this.execType = in.readString(this.execType instanceof Utf8 ? (Utf8)this.execType : null);

      this.idSource = in.readString(this.idSource instanceof Utf8 ? (Utf8)this.idSource : null);

      this.lastCapacity = in.readString(this.lastCapacity instanceof Utf8 ? (Utf8)this.lastCapacity : null);

      this.lastMkt = in.readString(this.lastMkt instanceof Utf8 ? (Utf8)this.lastMkt : null);

      this.lastPx = in.readFloat();

      this.lastShares = in.readFloat();

      this.msgSeqNum = in.readInt();

      this.orderId = in.readString(this.orderId instanceof Utf8 ? (Utf8)this.orderId : null);

      this.orderQuantity = in.readFloat();

      this.orderStatus = in.readString(this.orderStatus instanceof Utf8 ? (Utf8)this.orderStatus : null);

      this.origCiOrderId = in.readString(this.origCiOrderId instanceof Utf8 ? (Utf8)this.origCiOrderId : null);

      this.posDupFlag = in.readString(this.posDupFlag instanceof Utf8 ? (Utf8)this.posDupFlag : null);

      this.price = in.readFloat();

      this.securityId = in.readString(this.securityId instanceof Utf8 ? (Utf8)this.securityId : null);

      this.side = in.readString(this.side instanceof Utf8 ? (Utf8)this.side : null);

      this.symbol = in.readString(this.symbol instanceof Utf8 ? (Utf8)this.symbol : null);

      this.text = in.readString(this.text instanceof Utf8 ? (Utf8)this.text : null);

      this.transactId = in.readLong();

      this.parentOrderId = in.readString(this.parentOrderId instanceof Utf8 ? (Utf8)this.parentOrderId : null);

      this.settlementType = in.readString(this.settlementType instanceof Utf8 ? (Utf8)this.settlementType : null);

      this.futSettleprivate = in.readString(this.futSettleprivate instanceof Utf8 ? (Utf8)this.futSettleprivate : null);

      this.symbolSfx = in.readString(this.symbolSfx instanceof Utf8 ? (Utf8)this.symbolSfx : null);

      this.parentOrderQuantity = in.readFloat();

      this.tradeCurrencyCountry = in.readString(this.tradeCurrencyCountry instanceof Utf8 ? (Utf8)this.tradeCurrencyCountry : null);

      this.tradeprivate = in.readString(this.tradeprivate instanceof Utf8 ? (Utf8)this.tradeprivate : null);

      this.execBroker = in.readString(this.execBroker instanceof Utf8 ? (Utf8)this.execBroker : null);

      this.openClose = in.readString(this.openClose instanceof Utf8 ? (Utf8)this.openClose : null);

      this.processCode = in.readString(this.processCode instanceof Utf8 ? (Utf8)this.processCode : null);

      this.origSide = in.readString(this.origSide instanceof Utf8 ? (Utf8)this.origSide : null);

      this.netPrice = in.readFloat();

      this.clientId = in.readString(this.clientId instanceof Utf8 ? (Utf8)this.clientId : null);

      this.reportToExchange = in.readBoolean();

      this.leavesQuantity = in.readFloat();

      this.securityType = in.readString(this.securityType instanceof Utf8 ? (Utf8)this.securityType : null);

      this.settleBroker = in.readString(this.settleBroker instanceof Utf8 ? (Utf8)this.settleBroker : null);

      long size0 = in.readArrayStart();
      java.util.List<java.lang.CharSequence> a0 = this.securityExchange;
      if (a0 == null) {
        a0 = new SpecificData.Array<java.lang.CharSequence>((int)size0, SCHEMA$.getField("securityExchange").schema());
        this.securityExchange = a0;
      } else a0.clear();
      SpecificData.Array<java.lang.CharSequence> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.CharSequence>)a0 : null);
      for ( ; 0 < size0; size0 = in.arrayNext()) {
        for ( ; size0 != 0; size0--) {
          java.lang.CharSequence e0 = (ga0 != null ? ga0.peek() : null);
          e0 = in.readString(e0 instanceof Utf8 ? (Utf8)e0 : null);
          a0.add(e0);
        }
      }

      this.maturityMonthYear = in.readString(this.maturityMonthYear instanceof Utf8 ? (Utf8)this.maturityMonthYear : null);

      this.maturityDay = in.readString(this.maturityDay instanceof Utf8 ? (Utf8)this.maturityDay : null);

      this.putOrCall = in.readInt();

      this.strikePrice = in.readFloat();

      this.exerciseType = in.readString(this.exerciseType instanceof Utf8 ? (Utf8)this.exerciseType : null);

      this.ocaInstrumentType = in.readString(this.ocaInstrumentType instanceof Utf8 ? (Utf8)this.ocaInstrumentType : null);

      this.spread = in.readFloat();

      this.contractMultiplier = in.readFloat();

      this.underlyingSecurityExchange = in.readString(this.underlyingSecurityExchange instanceof Utf8 ? (Utf8)this.underlyingSecurityExchange : null);

      this.underlyingSymbol = in.readString(this.underlyingSymbol instanceof Utf8 ? (Utf8)this.underlyingSymbol : null);

      this.underlyingMaturityMonthYear = in.readString(this.underlyingMaturityMonthYear instanceof Utf8 ? (Utf8)this.underlyingMaturityMonthYear : null);

      this.underlyingMaturityDay = in.readString(this.underlyingMaturityDay instanceof Utf8 ? (Utf8)this.underlyingMaturityDay : null);

      this.underlyingContractMultiplier = in.readFloat();

      this.trader = in.readString(this.trader instanceof Utf8 ? (Utf8)this.trader : null);

      this.enteredBy = in.readString(this.enteredBy instanceof Utf8 ? (Utf8)this.enteredBy : null);

      this.instrumentCountry = in.readString(this.instrumentCountry instanceof Utf8 ? (Utf8)this.instrumentCountry : null);

      this.settleCurrency = in.readString(this.settleCurrency instanceof Utf8 ? (Utf8)this.settleCurrency : null);

      this.instrumentCurrency = in.readString(this.instrumentCurrency instanceof Utf8 ? (Utf8)this.instrumentCurrency : null);

      this.instrumentName = in.readString(this.instrumentName instanceof Utf8 ? (Utf8)this.instrumentName : null);

      this.instrCurrencyFxRate = in.readFloat();

      this.instrCurrencyFxRateCalc = in.readString(this.instrCurrencyFxRateCalc instanceof Utf8 ? (Utf8)this.instrCurrencyFxRateCalc : null);

      this.strategy = in.readString(this.strategy instanceof Utf8 ? (Utf8)this.strategy : null);

      this.nonDeliverableForward = in.readString(this.nonDeliverableForward instanceof Utf8 ? (Utf8)this.nonDeliverableForward : null);

      this.mainPrice = in.readFloat();

      this.interestRate = in.readLong();

      this.openPrivate = in.readLong();

      this.closePrivate = in.readLong();

      this.customRiskClass = in.readString(this.customRiskClass instanceof Utf8 ? (Utf8)this.customRiskClass : null);

      this.customSubBook = in.readString(this.customSubBook instanceof Utf8 ? (Utf8)this.customSubBook : null);

      this.customStrategy = in.readString(this.customStrategy instanceof Utf8 ? (Utf8)this.customStrategy : null);

      this.customCountry = in.readString(this.customCountry instanceof Utf8 ? (Utf8)this.customCountry : null);

      this.customCounterParty = in.readString(this.customCounterParty instanceof Utf8 ? (Utf8)this.customCounterParty : null);

      this.customFrm = in.readString(this.customFrm instanceof Utf8 ? (Utf8)this.customFrm : null);

      this.customSalesBroker = in.readString(this.customSalesBroker instanceof Utf8 ? (Utf8)this.customSalesBroker : null);

      this.commFlag = in.readString(this.commFlag instanceof Utf8 ? (Utf8)this.commFlag : null);

      this.initialMargin = in.readString(this.initialMargin instanceof Utf8 ? (Utf8)this.initialMargin : null);

      this.collateralFlag = in.readString(this.collateralFlag instanceof Utf8 ? (Utf8)this.collateralFlag : null);

      this.fundFamily = in.readString(this.fundFamily instanceof Utf8 ? (Utf8)this.fundFamily : null);

      this.familyAllocInfo = in.readString(this.familyAllocInfo instanceof Utf8 ? (Utf8)this.familyAllocInfo : null);

      this.custodianAccount = in.readString(this.custodianAccount instanceof Utf8 ? (Utf8)this.custodianAccount : null);

      this.businessUnit = in.readString(this.businessUnit instanceof Utf8 ? (Utf8)this.businessUnit : null);

      this.subBusinessUnit = in.readString(this.subBusinessUnit instanceof Utf8 ? (Utf8)this.subBusinessUnit : null);

      this.fund = in.readString(this.fund instanceof Utf8 ? (Utf8)this.fund : null);

      this.autoCreateFlag = in.readInt();

      this.positionBeforeTrade = in.readFloat();

      this.originalFaceValue = in.readFloat();

      this.loanAmount = in.readFloat();

      this.accrualDaysPerMonth = in.readString(this.accrualDaysPerMonth instanceof Utf8 ? (Utf8)this.accrualDaysPerMonth : null);

      this.accrualDaysPerYear = in.readString(this.accrualDaysPerYear instanceof Utf8 ? (Utf8)this.accrualDaysPerYear : null);

      this.endOfMonth = in.readString(this.endOfMonth instanceof Utf8 ? (Utf8)this.endOfMonth : null);

      this.fixingPrivate = in.readString(this.fixingPrivate instanceof Utf8 ? (Utf8)this.fixingPrivate : null);

      this.currentMargin = in.readString(this.currentMargin instanceof Utf8 ? (Utf8)this.currentMargin : null);

      this.tradeFlat = in.readString(this.tradeFlat instanceof Utf8 ? (Utf8)this.tradeFlat : null);

      this.parentQuantity = in.readFloat();

      this.underlyingQuantity = in.readFloat();

      this.customCrossCurrency = in.readString(this.customCrossCurrency instanceof Utf8 ? (Utf8)this.customCrossCurrency : null);

      this.customProductType = in.readString(this.customProductType instanceof Utf8 ? (Utf8)this.customProductType : null);

      this.transactionType = in.readString(this.transactionType instanceof Utf8 ? (Utf8)this.transactionType : null);

      this.newStrategy = in.readString(this.newStrategy instanceof Utf8 ? (Utf8)this.newStrategy : null);

      this.newPrimeBroker = in.readString(this.newPrimeBroker instanceof Utf8 ? (Utf8)this.newPrimeBroker : null);

      this.customFundQuantity1 = in.readFloat();

      this.customFundSide1 = in.readString(this.customFundSide1 instanceof Utf8 ? (Utf8)this.customFundSide1 : null);

      this.customFundQuantity2 = in.readFloat();

      this.customFundSide3 = in.readString(this.customFundSide3 instanceof Utf8 ? (Utf8)this.customFundSide3 : null);

    } else {
      for (int i = 0; i < 107; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.avgPx = in.readFloat();
          break;

        case 1:
          this.comission = in.readFloat();
          break;

        case 2:
          this.commType = in.readString(this.commType instanceof Utf8 ? (Utf8)this.commType : null);
          break;

        case 3:
          this.currency = in.readString(this.currency instanceof Utf8 ? (Utf8)this.currency : null);
          break;

        case 4:
          this.execId = in.readString(this.execId instanceof Utf8 ? (Utf8)this.execId : null);
          break;

        case 5:
          this.execRefId = in.readString(this.execRefId instanceof Utf8 ? (Utf8)this.execRefId : null);
          break;

        case 6:
          this.execTransactiontype = in.readString(this.execTransactiontype instanceof Utf8 ? (Utf8)this.execTransactiontype : null);
          break;

        case 7:
          this.execType = in.readString(this.execType instanceof Utf8 ? (Utf8)this.execType : null);
          break;

        case 8:
          this.idSource = in.readString(this.idSource instanceof Utf8 ? (Utf8)this.idSource : null);
          break;

        case 9:
          this.lastCapacity = in.readString(this.lastCapacity instanceof Utf8 ? (Utf8)this.lastCapacity : null);
          break;

        case 10:
          this.lastMkt = in.readString(this.lastMkt instanceof Utf8 ? (Utf8)this.lastMkt : null);
          break;

        case 11:
          this.lastPx = in.readFloat();
          break;

        case 12:
          this.lastShares = in.readFloat();
          break;

        case 13:
          this.msgSeqNum = in.readInt();
          break;

        case 14:
          this.orderId = in.readString(this.orderId instanceof Utf8 ? (Utf8)this.orderId : null);
          break;

        case 15:
          this.orderQuantity = in.readFloat();
          break;

        case 16:
          this.orderStatus = in.readString(this.orderStatus instanceof Utf8 ? (Utf8)this.orderStatus : null);
          break;

        case 17:
          this.origCiOrderId = in.readString(this.origCiOrderId instanceof Utf8 ? (Utf8)this.origCiOrderId : null);
          break;

        case 18:
          this.posDupFlag = in.readString(this.posDupFlag instanceof Utf8 ? (Utf8)this.posDupFlag : null);
          break;

        case 19:
          this.price = in.readFloat();
          break;

        case 20:
          this.securityId = in.readString(this.securityId instanceof Utf8 ? (Utf8)this.securityId : null);
          break;

        case 21:
          this.side = in.readString(this.side instanceof Utf8 ? (Utf8)this.side : null);
          break;

        case 22:
          this.symbol = in.readString(this.symbol instanceof Utf8 ? (Utf8)this.symbol : null);
          break;

        case 23:
          this.text = in.readString(this.text instanceof Utf8 ? (Utf8)this.text : null);
          break;

        case 24:
          this.transactId = in.readLong();
          break;

        case 25:
          this.parentOrderId = in.readString(this.parentOrderId instanceof Utf8 ? (Utf8)this.parentOrderId : null);
          break;

        case 26:
          this.settlementType = in.readString(this.settlementType instanceof Utf8 ? (Utf8)this.settlementType : null);
          break;

        case 27:
          this.futSettleprivate = in.readString(this.futSettleprivate instanceof Utf8 ? (Utf8)this.futSettleprivate : null);
          break;

        case 28:
          this.symbolSfx = in.readString(this.symbolSfx instanceof Utf8 ? (Utf8)this.symbolSfx : null);
          break;

        case 29:
          this.parentOrderQuantity = in.readFloat();
          break;

        case 30:
          this.tradeCurrencyCountry = in.readString(this.tradeCurrencyCountry instanceof Utf8 ? (Utf8)this.tradeCurrencyCountry : null);
          break;

        case 31:
          this.tradeprivate = in.readString(this.tradeprivate instanceof Utf8 ? (Utf8)this.tradeprivate : null);
          break;

        case 32:
          this.execBroker = in.readString(this.execBroker instanceof Utf8 ? (Utf8)this.execBroker : null);
          break;

        case 33:
          this.openClose = in.readString(this.openClose instanceof Utf8 ? (Utf8)this.openClose : null);
          break;

        case 34:
          this.processCode = in.readString(this.processCode instanceof Utf8 ? (Utf8)this.processCode : null);
          break;

        case 35:
          this.origSide = in.readString(this.origSide instanceof Utf8 ? (Utf8)this.origSide : null);
          break;

        case 36:
          this.netPrice = in.readFloat();
          break;

        case 37:
          this.clientId = in.readString(this.clientId instanceof Utf8 ? (Utf8)this.clientId : null);
          break;

        case 38:
          this.reportToExchange = in.readBoolean();
          break;

        case 39:
          this.leavesQuantity = in.readFloat();
          break;

        case 40:
          this.securityType = in.readString(this.securityType instanceof Utf8 ? (Utf8)this.securityType : null);
          break;

        case 41:
          this.settleBroker = in.readString(this.settleBroker instanceof Utf8 ? (Utf8)this.settleBroker : null);
          break;

        case 42:
          long size0 = in.readArrayStart();
          java.util.List<java.lang.CharSequence> a0 = this.securityExchange;
          if (a0 == null) {
            a0 = new SpecificData.Array<java.lang.CharSequence>((int)size0, SCHEMA$.getField("securityExchange").schema());
            this.securityExchange = a0;
          } else a0.clear();
          SpecificData.Array<java.lang.CharSequence> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.CharSequence>)a0 : null);
          for ( ; 0 < size0; size0 = in.arrayNext()) {
            for ( ; size0 != 0; size0--) {
              java.lang.CharSequence e0 = (ga0 != null ? ga0.peek() : null);
              e0 = in.readString(e0 instanceof Utf8 ? (Utf8)e0 : null);
              a0.add(e0);
            }
          }
          break;

        case 43:
          this.maturityMonthYear = in.readString(this.maturityMonthYear instanceof Utf8 ? (Utf8)this.maturityMonthYear : null);
          break;

        case 44:
          this.maturityDay = in.readString(this.maturityDay instanceof Utf8 ? (Utf8)this.maturityDay : null);
          break;

        case 45:
          this.putOrCall = in.readInt();
          break;

        case 46:
          this.strikePrice = in.readFloat();
          break;

        case 47:
          this.exerciseType = in.readString(this.exerciseType instanceof Utf8 ? (Utf8)this.exerciseType : null);
          break;

        case 48:
          this.ocaInstrumentType = in.readString(this.ocaInstrumentType instanceof Utf8 ? (Utf8)this.ocaInstrumentType : null);
          break;

        case 49:
          this.spread = in.readFloat();
          break;

        case 50:
          this.contractMultiplier = in.readFloat();
          break;

        case 51:
          this.underlyingSecurityExchange = in.readString(this.underlyingSecurityExchange instanceof Utf8 ? (Utf8)this.underlyingSecurityExchange : null);
          break;

        case 52:
          this.underlyingSymbol = in.readString(this.underlyingSymbol instanceof Utf8 ? (Utf8)this.underlyingSymbol : null);
          break;

        case 53:
          this.underlyingMaturityMonthYear = in.readString(this.underlyingMaturityMonthYear instanceof Utf8 ? (Utf8)this.underlyingMaturityMonthYear : null);
          break;

        case 54:
          this.underlyingMaturityDay = in.readString(this.underlyingMaturityDay instanceof Utf8 ? (Utf8)this.underlyingMaturityDay : null);
          break;

        case 55:
          this.underlyingContractMultiplier = in.readFloat();
          break;

        case 56:
          this.trader = in.readString(this.trader instanceof Utf8 ? (Utf8)this.trader : null);
          break;

        case 57:
          this.enteredBy = in.readString(this.enteredBy instanceof Utf8 ? (Utf8)this.enteredBy : null);
          break;

        case 58:
          this.instrumentCountry = in.readString(this.instrumentCountry instanceof Utf8 ? (Utf8)this.instrumentCountry : null);
          break;

        case 59:
          this.settleCurrency = in.readString(this.settleCurrency instanceof Utf8 ? (Utf8)this.settleCurrency : null);
          break;

        case 60:
          this.instrumentCurrency = in.readString(this.instrumentCurrency instanceof Utf8 ? (Utf8)this.instrumentCurrency : null);
          break;

        case 61:
          this.instrumentName = in.readString(this.instrumentName instanceof Utf8 ? (Utf8)this.instrumentName : null);
          break;

        case 62:
          this.instrCurrencyFxRate = in.readFloat();
          break;

        case 63:
          this.instrCurrencyFxRateCalc = in.readString(this.instrCurrencyFxRateCalc instanceof Utf8 ? (Utf8)this.instrCurrencyFxRateCalc : null);
          break;

        case 64:
          this.strategy = in.readString(this.strategy instanceof Utf8 ? (Utf8)this.strategy : null);
          break;

        case 65:
          this.nonDeliverableForward = in.readString(this.nonDeliverableForward instanceof Utf8 ? (Utf8)this.nonDeliverableForward : null);
          break;

        case 66:
          this.mainPrice = in.readFloat();
          break;

        case 67:
          this.interestRate = in.readLong();
          break;

        case 68:
          this.openPrivate = in.readLong();
          break;

        case 69:
          this.closePrivate = in.readLong();
          break;

        case 70:
          this.customRiskClass = in.readString(this.customRiskClass instanceof Utf8 ? (Utf8)this.customRiskClass : null);
          break;

        case 71:
          this.customSubBook = in.readString(this.customSubBook instanceof Utf8 ? (Utf8)this.customSubBook : null);
          break;

        case 72:
          this.customStrategy = in.readString(this.customStrategy instanceof Utf8 ? (Utf8)this.customStrategy : null);
          break;

        case 73:
          this.customCountry = in.readString(this.customCountry instanceof Utf8 ? (Utf8)this.customCountry : null);
          break;

        case 74:
          this.customCounterParty = in.readString(this.customCounterParty instanceof Utf8 ? (Utf8)this.customCounterParty : null);
          break;

        case 75:
          this.customFrm = in.readString(this.customFrm instanceof Utf8 ? (Utf8)this.customFrm : null);
          break;

        case 76:
          this.customSalesBroker = in.readString(this.customSalesBroker instanceof Utf8 ? (Utf8)this.customSalesBroker : null);
          break;

        case 77:
          this.commFlag = in.readString(this.commFlag instanceof Utf8 ? (Utf8)this.commFlag : null);
          break;

        case 78:
          this.initialMargin = in.readString(this.initialMargin instanceof Utf8 ? (Utf8)this.initialMargin : null);
          break;

        case 79:
          this.collateralFlag = in.readString(this.collateralFlag instanceof Utf8 ? (Utf8)this.collateralFlag : null);
          break;

        case 80:
          this.fundFamily = in.readString(this.fundFamily instanceof Utf8 ? (Utf8)this.fundFamily : null);
          break;

        case 81:
          this.familyAllocInfo = in.readString(this.familyAllocInfo instanceof Utf8 ? (Utf8)this.familyAllocInfo : null);
          break;

        case 82:
          this.custodianAccount = in.readString(this.custodianAccount instanceof Utf8 ? (Utf8)this.custodianAccount : null);
          break;

        case 83:
          this.businessUnit = in.readString(this.businessUnit instanceof Utf8 ? (Utf8)this.businessUnit : null);
          break;

        case 84:
          this.subBusinessUnit = in.readString(this.subBusinessUnit instanceof Utf8 ? (Utf8)this.subBusinessUnit : null);
          break;

        case 85:
          this.fund = in.readString(this.fund instanceof Utf8 ? (Utf8)this.fund : null);
          break;

        case 86:
          this.autoCreateFlag = in.readInt();
          break;

        case 87:
          this.positionBeforeTrade = in.readFloat();
          break;

        case 88:
          this.originalFaceValue = in.readFloat();
          break;

        case 89:
          this.loanAmount = in.readFloat();
          break;

        case 90:
          this.accrualDaysPerMonth = in.readString(this.accrualDaysPerMonth instanceof Utf8 ? (Utf8)this.accrualDaysPerMonth : null);
          break;

        case 91:
          this.accrualDaysPerYear = in.readString(this.accrualDaysPerYear instanceof Utf8 ? (Utf8)this.accrualDaysPerYear : null);
          break;

        case 92:
          this.endOfMonth = in.readString(this.endOfMonth instanceof Utf8 ? (Utf8)this.endOfMonth : null);
          break;

        case 93:
          this.fixingPrivate = in.readString(this.fixingPrivate instanceof Utf8 ? (Utf8)this.fixingPrivate : null);
          break;

        case 94:
          this.currentMargin = in.readString(this.currentMargin instanceof Utf8 ? (Utf8)this.currentMargin : null);
          break;

        case 95:
          this.tradeFlat = in.readString(this.tradeFlat instanceof Utf8 ? (Utf8)this.tradeFlat : null);
          break;

        case 96:
          this.parentQuantity = in.readFloat();
          break;

        case 97:
          this.underlyingQuantity = in.readFloat();
          break;

        case 98:
          this.customCrossCurrency = in.readString(this.customCrossCurrency instanceof Utf8 ? (Utf8)this.customCrossCurrency : null);
          break;

        case 99:
          this.customProductType = in.readString(this.customProductType instanceof Utf8 ? (Utf8)this.customProductType : null);
          break;

        case 100:
          this.transactionType = in.readString(this.transactionType instanceof Utf8 ? (Utf8)this.transactionType : null);
          break;

        case 101:
          this.newStrategy = in.readString(this.newStrategy instanceof Utf8 ? (Utf8)this.newStrategy : null);
          break;

        case 102:
          this.newPrimeBroker = in.readString(this.newPrimeBroker instanceof Utf8 ? (Utf8)this.newPrimeBroker : null);
          break;

        case 103:
          this.customFundQuantity1 = in.readFloat();
          break;

        case 104:
          this.customFundSide1 = in.readString(this.customFundSide1 instanceof Utf8 ? (Utf8)this.customFundSide1 : null);
          break;

        case 105:
          this.customFundQuantity2 = in.readFloat();
          break;

        case 106:
          this.customFundSide3 = in.readString(this.customFundSide3 instanceof Utf8 ? (Utf8)this.customFundSide3 : null);
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










