package org.greencoding.showcase.serialization.json.testdata;

import lombok.Getter;
import lombok.Setter;
import lombok.ToString;

import java.io.Serializable;
import java.math.BigDecimal;
import java.util.Date;
import java.util.List;


@Getter
@Setter
@ToString
public class LargeExamplePojo implements Serializable {

    private BigDecimal avgPx;
    private BigDecimal comission;
    private char commType;
    private String currency;
    private String execId;
    private String execRefId;
    private String execTransactiontype;
    private char execType;
    private String idSource;
    private char lastCapacity;
    private String lastMkt;
    private BigDecimal lastPx;
    private BigDecimal lastShares;
    private int msgSeqNum;
    private String orderId;
    private BigDecimal orderQuantity;
    private String orderStatus;
    private String origCiOrderId;
    private String posDupFlag;
    private BigDecimal price;
    private String securityId;
    private char side;
    private String symbol;
    private String text;
    private Date transactId;
    private String parentOrderId;
    private String settlementType;
    private String futSettleprivate;
    private String symbolSfx;
    private BigDecimal parentOrderQuantity;
    private String tradeCurrencyCountry;
    private String tradeprivate;
    private String execBroker;
    private char openClose;
    private char processCode;
    private char origSide;
    private BigDecimal netPrice;
    private String clientId;
    boolean reportToExchange;
    private BigDecimal leavesQuantity;
    private String securityType;
    private String settleBroker;
    private List<String> securityExchange;
    private String maturityMonthYear;
    private String maturityDay;
    private int putOrCall;
    private BigDecimal strikePrice;
    private String exerciseType;
    private String ocaInstrumentType;
    private BigDecimal spread;
    private BigDecimal contractMultiplier;
    private String underlyingSecurityExchange;
    private String underlyingSymbol;
    private String underlyingMaturityMonthYear;
    private String underlyingMaturityDay;
    private BigDecimal underlyingContractMultiplier;
    private String trader;
    private String enteredBy;
    private String instrumentCountry;
    private String settleCurrency;
    private String instrumentCurrency;
    private String instrumentName;
    private BigDecimal instrCurrencyFxRate;
    private String instrCurrencyFxRateCalc;
    private String strategy;
    private String nonDeliverableForward;
    private BigDecimal mainPrice;
    private Date interestRate;
    private Date openPrivate;
    private Date closePrivate;
    private String customRiskClass;
    private String customSubBook;
    private String customStrategy;
    private String customCountry;
    private String customCounterParty;
    private String customFrm;
    private String customSalesBroker;
    private String commFlag;
    private String initialMargin;
    private String collateralFlag;
    private String fundFamily;
    private String familyAllocInfo;
    private String custodianAccount;
    private String businessUnit;
    private String subBusinessUnit;
    private String fund;
    private int autoCreateFlag;
    private BigDecimal positionBeforeTrade;
    private BigDecimal originalFaceValue;
    private BigDecimal loanAmount;
    private String accrualDaysPerMonth;
    private String accrualDaysPerYear;
    private String endOfMonth;
    private String fixingPrivate;
    private String currentMargin;
    private String tradeFlat;
    private BigDecimal parentQuantity;
    private BigDecimal underlyingQuantity;
    private String customCrossCurrency;
    private String customProductType;
    private String transactionType;
    private String newStrategy;
    private String newPrimeBroker;
    private BigDecimal customFundQuantity1;
    private String customFundSide1;
    private BigDecimal customFundQuantity2;
    private String customFundSide3;
}
